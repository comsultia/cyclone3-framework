#!/usr/bin/perl
use Term::ANSIColor;
use Time::HiRes;
BEGIN {require "/www/TOM/.bin/tom3-init";}
use Term::InKey;
%form=
(
 '--host'	=>	"restart host (eg. www_localhost_com)",
# '-s'		=>	"show all",
);
if (($FORM{h})||($FORM{help})){&help();}


#open(*STDERR,">/dev/null");

use Proc::ProcessTable;
use DateTime;

while(1)
{
	
	
	# cmdline
	# pctcpu
	# rss
	
	my %hosts;
	
	my $t = new Proc::ProcessTable;
	foreach my $p (@{$t->table})
	{
		next unless $p->{'cmndline'}=~/\.core\/tom3/;
		
		my $host;
		$p->{'cmndline'}=~/pwd=(.*)/;
		my $pwd=$1;
			$pwd=~s|^.*?/TOM/||;
			$pwd=~s| $||g;
		
		foreach (split('/',$pwd))
		{
			$_=~s/^!// && do
			{
				if ($host){$host=$_.".".$host;next}
				$host=$_;next;
			};
			$host.="/".$_;
		}
		$host=~s|^www\.||;
		
		push @{$hosts{$host}},{
			'size'=>$p->{'size'},
			'pctcpu'=>$p->{'pctcpu'},
			'state'=>$p->{'state'},
			'start'=>$p->{'start'},
			'time'=>$p->{'time'},
			'pid'=>$p->{'pid'}
		};
		
	}
	
		my $l;
		foreach my $host(sort keys %hosts)
		{
			$l=length($host) if length($host)>$l;
		}
	
		&Clear();
		print color 'reset bold cyan';
		print "[HOST".(" " x ($l-4))."][STAT ][P ][CPU  ][MEM   ][START][TIME ]\n";
		print color 'reset cyan';
		
		foreach my $host(sort keys %hosts)
		{
			for (0..@{$hosts{$host}}-1)
			{
				my $setcolor;
				if ($hosts{$host}[$_]{'state'} eq "run"){$setcolor = 'reset bold cyan';}
				else {$setcolor = 'reset cyan';}
				print color $setcolor;
				
				# host
				if (!$_){print "[".sprintf("%-".$l."s",$host)."]";}else {print (" " x ($l+2));}
				
				# STAT
				print "[";
				print sprintf("%5s",$hosts{$host}[$_]{'state'});
				print color $setcolor;print "]";
				
				# P
				print "[".sprintf("%2s",$_+1)."]";
				
				# CPU
				print "[";
				if ($hosts{$host}[$_]{'pctcpu'} > 10){print color 'yellow'}
				if ($hosts{$host}[$_]{'pctcpu'} > 30){print color 'bold red'}
				print sprintf("%5s",$hosts{$host}[$_]{'pctcpu'});print color $setcolor;print "]";
				
				# MEM
				$hosts{$host}[$_]{'size'}=int($hosts{$host}[$_]{'size'}/1024);
				print "[";
				if ($hosts{$host}[$_]{'size'} > 50000){print color 'yellow'}
				if ($hosts{$host}[$_]{'size'} > 100000){print color 'bold red'}
				print sprintf("%6d",$hosts{$host}[$_]{'size'});print color $setcolor;print "]";
				
				my $dt = DateTime->from_epoch( epoch => $hosts{$host}[$_]{'start'} );
				print "[".sprintf('%02d',$dt->hour).":".sprintf('%02d',$dt->min)."]";
				
				print "[".sprintf('%5s',time()-$hosts{$host}[$_]{'start'})."]";
				
				print " #".$hosts{$host}[$_]{'pid'};
				
				print "\n";
				
			}
			
			
		}
		
		#print color 'reset bold cyan';print "*";print "\n";
		Time::HiRes::sleep(5);
		
	
}




&exit();
