#!/usr/bin/perl
use strict;
use Term::ANSIColor;
use open ':utf8', ':std';
#use encoding 'utf8'; - uz si nepamatam preco je toto zakomentovane
use utf8;

BEGIN
{
	$main::debug=0;
	$main::stdout=1;
	$TOM::engine="bin";
	require $ENV{'CYCLONE3PATH'}."/.core/.libs/TOM.pm";
	$TOM::engine_ready=1;
	$TOM::core_uname_n=$TOM::hostname;
	$CRON::core_uname_n=$TOM::hostname;
	
	print color 'bold blue';
	print "[Cyclone3 BIN Control]\n";
	print color 'reset blue';
	print "initializing...";
	chomp ($main::p=`pwd`);
	print " p:".$main::p;
	$main::P=$TOM::P;
	$TOM::P=$main::P;
	print " P:".$main::P."\n";
	unshift @INC,$main::P."/.core/.libs";
}


use TOM::lock;


print color 'bold green';
my $filename=$0;
$filename=~s|.*/||;
print "[$filename]\n";

print color 'reset green';


foreach my $key(@ARGV)
{
	$key=~s/--// && do
	{
		my @ref=split('=',$key,2);
		$ref[1]=1 unless exists $ref[1];
		$main::FORM{$ref[0]}=$ref[1];
		next;
	};
	$key=~s/-// && do
	{
		foreach (split('',$key)){$main::FORM{$_}++;}
	};
}

$main::time_current=$cron::time_current=$tom::time_current=time;
(
	$cron::Tsec,
	$cron::Tmin,
	$cron::Thour,
	$cron::Tmday,
	$cron::Tmom,
	$cron::Tyear,
	$cron::Twday,
	$cron::Tyday,
	$cron::Tisdst) = localtime($main::time_current);
   # doladenie casu
   $cron::Tyear+=1900;$cron::Tmom++;
   # formatujem cas
(
	$cron::Fsec,
	$cron::Fmin,
	$cron::Fhour,
	$cron::Fmday,
	$cron::Fmom,
	$cron::Fyear,
	$cron::Fwday,
	$cron::Fyday,
	$cron::Fisdst
	) = (
	sprintf ('%02d', $cron::Tsec),
	sprintf ('%02d', $cron::Tmin),
	sprintf ('%02d', $cron::Thour),
	sprintf ('%02d', $cron::Tmday),
	sprintf ('%02d', $cron::Tmom),
	$cron::Tyear,
	$cron::Twday,
	$cron::Tyday,
	$cron::Tisdst
	);
	
	$tom::Tsec=$main::Tsec=$cron::Tsec;
	$tom::Tmin=$main::Tmin=$cron::Tmin;
	$tom::Thour=$main::Thour=$cron::Thour;
	$tom::Tmday=$main::Tmday=$cron::Tmday;
	$tom::Tmom=$main::Tmom=$cron::Tmom;
	$tom::Tmon=$main::Tmon=$cron::Tmon;
	$tom::Tyear=$main::Tyear=$cron::Tyear;
	$tom::Twday=$main::Twday=$cron::Twday;
	$tom::Tyday=$main::Tyday=$cron::Tyday;
	$tom::Tisdst=$main::Tisdst=$cron::Tisdst;
	$tom::Fsec=$main::Fsec=$cron::Fsec;
	$tom::Fmin=$main::Fmin=$cron::Fmin;
	$tom::Fhour=$main::Fhour=$cron::Fhour;
	$tom::Fmday=$main::Fmday=$cron::Fmday;
	$tom::Fmom=$main::Fmom=$cron::Fmom;
	$tom::Fmon=$main::Fmon=$cron::Fmon;
	$tom::Fyear=$main::Fyear=$cron::Fyear;
	$tom::Fwday=$main::Fwday=$cron::Fwday;
	$tom::Fyday=$main::Fyday=$cron::Fyday;
	$tom::Fisdst=$main::Fisdst=$cron::Fisdst;
	
	$main::Fyear_sub=$main::Fyear;
	$main::Fyear_sub=~s/^..//;
	
	
if ($main::FORM{domain})
{
	$main::FORM{domain}=~s|^www\.||i;
	$main::h=$main::FORM{domain};$main::h=~s|\.|_|g;$main::h=~s|/|__|g;

	my $path=$main::FORM{domain};$path=~s|^(.[^/]*)(.*)||;
	my $path_dom=$1;my $path_sub=$2;
	$path_dom=~s|(.*\.\|)(.*?\..*?)$|$1|;
	$main::p="!$2";$path_dom=~s|\.$||;

	foreach (reverse split('\.',$path_dom)){$main::p.="/!$_";}
	foreach (split('/',$path_sub)){$main::p.="/$_";}

	$main::p=~s|//|/|g;
	$main::p=$main::P."/".$main::p;
	print "p:".$main::p."\n";
	print "h:".$main::h."\n";
	
	require TOM::Domain;
	
	$tom::P=$main::p;
	$TOM::P=$main::P;
	
	unshift @INC,$tom::P."/.libs";
	unshift @INC,$tom::P."/_addons";
}


my $out=`id`;$ENV{USER}=($out=~/\((.*?)\)/)[0];

print "\n";

sub help
{
	print "[using---------------------------------------------------]\n";
	print "[ -h, --help     this page                               ]\n";
	foreach (sort keys %main::form)
	{
		print "[ ";
		print sprintf("%-15s",$_);
		print sprintf("%-40s",$main::form{$_});
		print "]\n";
	}
	print "[--------------------------------------------------------]\n";
	&exit();
}

sub exit
{
	print color 'reset';
	print "\n";
	exit();
}

1;
