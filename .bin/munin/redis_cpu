#!/usr/bin/perl
BEGIN {
	if (!$ENV{'CYCLONE3PATH'})
	{
		$ENV{'CYCLONE3PATH'}="/www/TOM" if -d "/www/TOM";
		$ENV{'CYCLONE3PATH'}="/Cyclone3" if -d "/Cyclone3";
		$ENV{'CYCLONE3PATH'}="/srv/Cyclone3" if -d "/srv/Cyclone3";
	}
	require $ENV{'CYCLONE3PATH'}."/.bin/c3-init";
}

my $cmd = shift || '';
if ($cmd eq 'config') {print qq{graph_title Redis CPU usage in ms
graph_args --base 1000 -l 0
graph_category cyclone3_redis
graph_order used_cpu_sys used_cpu_sys_children used_cpu_user used_cpu_user_children
graph_vlabel msCPU/s
graph_scale yes
graph_info This graph monitors the CPU usage
used_cpu_sys.label used_cpu_sys
used_cpu_sys.type COUNTER
used_cpu_sys.min 0
used_cpu_sys_children.label used_cpu_sys_children
used_cpu_sys_children.type COUNTER
used_cpu_sys_children.min 0
used_cpu_user.label used_cpu_user
used_cpu_user.type COUNTER
used_cpu_user.min 0
used_cpu_user_children.label used_cpu_user_children
used_cpu_user_children.type COUNTER
used_cpu_user_children.min 0
};
	exit 0;
}

undef @Ext::Redis::hosts; # don't use sharding
$Redis=Ext::Redis::_connect();

if (!$Redis)
{
	exit 0;
}


my %info=%{$Redis->info('cpu')};
print "used_cpu_sys.value " . int($info{'used_cpu_sys'}*1000) . "\n";
print "used_cpu_sys_children.value " . int($info{'used_cpu_sys_children'}*1000) . "\n";
print "used_cpu_user.value " . int($info{'used_cpu_user'}*1000) . "\n";
print "used_cpu_user_children.value " . int($info{'used_cpu_user_children'}*1000) . "\n";