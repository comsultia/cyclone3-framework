#!/usr/bin/env perl
# ex:ts=4

use strict;
use warnings;
use DateTime;
use File::ReadBackwards;

my $cmd = shift || '';
if ($cmd eq 'config') {print qq{graph_title Cyclone3 Solr requests
graph_args --base 1000
graph_category cyclone3
graph_vlabel requests / second
graph_order search add commit
graph_scale no
commit.label COMMIT
commit.draw LINE1
commit.min 0
add.label Add document
add.draw LINE1
add.min 0
search.label Search query
search.draw LINE1
search.min 0
};
	exit 0;
}

my $debug;
	$debug=1 if $cmd eq "debug";

my $date=`date +"%Y-%m-%d"`;chomp($date);
#my $text=`tail /srv/Cyclone3/_logs/$date.pub.bench.log -n 100000`;

#print $text

my $datetime_now=DateTime->now('time_zone' => 'local');
	$datetime_now->add('minutes' => -1);
my $datetime_now_string=sprintf('%02d',$datetime_now->hour()).":".sprintf('%02d',$datetime_now->minute()).":".sprintf('%02d',$datetime_now->second());
	print "from $datetime_now_string\n" if $debug;
	
my $value_commit=0;
my $value_add=0;
my $value_search=0;

my $logfile;
if (-e '/var/log/Cyclone3/'.$date.'.solr.log'){$logfile='/var/log/Cyclone3/'.$date.'.solr.log'}
elsif (-e '/srv/Cyclone3/_logs/'.$date.'.solr.log'){$logfile='/srv/Cyclone3/_logs/'.$date.'.solr.log'}
elsif (-e '/Cyclone3/_logs/'.$date.'.solr.log'){$logfile='/Cyclone3/_logs/'.$date.'.solr.log'}
elsif (-e '/www/TOM/_logs/'.$date.'.solr.log'){$logfile='/www/TOM/_logs/'.$date.'.solr.log'};

my $bw = File::ReadBackwards->new($logfile) or die "can't read 'log_file' $!" ;
while( my $line = $bw->readline )
{
	chomp($line);
	if ($line=~/\[(\d\d):(\d\d):(\d\d)/)
	{
		my $time_str=$1.":".$2.":".$3;
		last if $time_str lt $datetime_now_string;
	}
	else
	{
		next;
	}
	
	print $line."\n" if $debug;
	
	if ($line=~/\]  ?search /)
	{
		$value_search++;
	}
	elsif ($line=~/\]  ?COMMIT /)
	{
		$value_commit++;
	}
	elsif ($line=~/\]  ?add /)
	{
		$value_add++;
	}
}

print "commit.value " . int((($value_commit)/1/60)*100)/100 . "\n";
print "add.value " . int(($value_add/1/60)*100)/100 . "\n";
print "search.value " . int(($value_search/1/60)*100)/100 . "\n";


