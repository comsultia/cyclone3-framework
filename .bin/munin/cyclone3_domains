#!/usr/bin/env perl
# ex:ts=4

use strict;
use warnings;
use DateTime;
use File::ReadBackwards;

my $cmd = shift || '';
if ($cmd eq 'config') {print qq{graph_title Cyclone3 domains activity
graph_category cyclone3
graph_scale no
graph_vlabel requests/minute
};
#	exit 0;
}

my $debug;
	$debug=1 if $cmd eq "debug";

my $date=`date +"%Y-%m-%d"`;chomp($date);
#my $text=`tail /srv/Cyclone3/_logs/$date.pub.bench.log -n 1000`;

#print $text

my $minutes=30;
my $datetime_now=DateTime->now('time_zone' => 'local');
	my $startday=$datetime_now->day();
	$datetime_now->add('minutes' => -30);
	if ($startday>$datetime_now->day())
	{
		$datetime_now->add('days' => 1);
		$datetime_now->set_hour(0);
		$datetime_now->set_minute(0);
	}
#my $datetime_now_string=$datetime_now->hour().":".$datetime_now->minute();
my $datetime_now_string=sprintf('%02d',$datetime_now->hour()).":".sprintf('%02d',$datetime_now->minute()).":".sprintf('%02d',$datetime_now->second());
	print "from $datetime_now_string\n" if $debug;
	
my $filename='/srv/Cyclone3/_logs/'.$date.'.pub.bench.log';
	$filename='/var/log/Cyclone3/'.$date.'.pub.bench.log' if -e '/var/log/Cyclone3/'.$date.'.pub.bench.log';
	
my $i;
my $bw = File::ReadBackwards->new($filename) or die "can't read 'log_file' $!" ;
my %domains;
while( my $line = $bw->readline )
{
	chomp($line);
	if ($line=~/\[(\d\d):(\d\d):(\d\d)/)
	{
		my $time_str=$1.":".$2.":".$3;
		last if $time_str lt $datetime_now_string;
	}
	else
	{
		next;
	}
#	next 
	print $line."\n" if $debug;
# eval:0.034/0.009
	if ($line=~/ \+\[(.*?)\]/)
	{
		$domains{$1}++;
		$i++;
	}
}

$i=1 unless $i;

my $domain=0;

if ($cmd eq 'config')
{
	print "graph_order ".join(' ',( grep {~s/[\.\/]//g} sort {$domains{$b} <=> $domains{$a}} keys %domains))."\n";
#	graph_order req req_slow
}

foreach (sort {$domains{$b} <=> $domains{$a}} keys %domains)
{
	my $domain_key=$_;
		$domain_key=~s/[\.\/]//g;
#	print "$_ = $domains{$_}\n";
	if ($cmd eq 'config')
	{
		print "$domain_key.label $_\n";
#		print "$domain_key.draw ".($domain ? 'STACK' : 'AREA')."\n";
	}
	else
	{
		print "$domain_key.value " . int($domains{$_}/$minutes*100)/100 . "\n";
	}
	$domain++;
}

#print "req.value " . $value_req . "\n";
#print "proc.value " . $value_proc . "\n";

