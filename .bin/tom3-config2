#!/usr/bin/perl
use Term::ANSIColor;
use Mysql;
require "/usr/bin/tom3-init";
%form=
(
	'--domain'	=>	"show config domain (eg. localhost.com)",
#	'-a'		=>	"show config all domains",
);


%variables=
(
	'$tom::LNG' =>
	{
		about => "default language",
		force=>1,
	},
	'$pub::DOC' =>
	{
		about => "Type of generated document",
		optimal=>"XHTML",
		force=>1,
	},
	'$pub::engine_disabling' =>
	{
		about => "zamedzenie pristupu k stranke extremov",
		optimal => 1,
		'warn' => 1,
#		force => 1,
	},
	'$TOM::DB{main}{name}' =>
	{
		about => "Main database",
	},
	'$TOM::DB_name' =>
	{
		about => "Please set only over '\$TOM::DB{main}{name}'",
		deprecated => 1,
	},
	'$TOM::ERROR_module_email' => 
	{
		about => "Send email when error",
		optimal => 1,
		force => 1,
		'warn' => 1,
	},
	'$TOM::ERROR_page_email' =>
	{
		about => "Send email when core error",
		optimal => 1,
		'warn' => 1,
#		force => 1
	},
	'$TOM::DEBUG_log_file'=>
	{
		about => "Level of debug log in core",
		optimal => 0,
		'warn' => 1,
		force => 1,
	},#9;
	'$TOM::DEBUG_log_mdl_file'=>
	{
		about => "Level of debug log in applications",
		optimal => 0,
		'warn' => 1,
		force => 1,
	},#9;
	
	'$TOM::contact_admin' =>
	{
		about => "Clovek zodpovedny za farmu",
		force => 1,
		'warn' => 1,
	},
	'$TOM::contact_bugreport' =>
	{
		about => "Dalsi ludia ktori dostanu errory",
		force => 1,
	},
	'$TOM::contact_director' =>
	{
		about => "Klient",
		force => 1,
	},
	'$TOM::contact_stats' =>
	{
		about => "Dalsi ludia ktori dostanu statistiky",
		force => 1,
	},
	'$TOM::contact_operator' =>
	{
		about => "Zoznam zodpovednych za projekt",
		force => 1,
		'notnull' => 1,
		'warn' => 1,
	},
	
	
	'$TOM::STAT' =>
	{
		about => "Enabled statistics",
		force => 1,
		optimal=>0,
#		warn => 1,
	},
	
	'$TOM::type_pre' =>
	{
		about => "Enabling pre-processing (pre.type)",
		optimal => 0,
		force => 1,
	},
	'$TOM::type_post' =>
	{
		about => "Enabling post-processing (post.type)",
		optimal => 0,
		force => 1,
	},
	'$TOM::type_code' =>
	{
		about => "URL coding",
		optimal => 1,
		force => 1,
		warn => 1,
	},
	
	'$tom::rewrite_301' =>
	{
		about => "Redirecting when rewrite",
		optimal => 0,
		force => 1,
		warn => 1,
	},
	
	'$tom::Hm' =>
	{
		about => "Master domain",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::Hm_www' =>
	{
		about => "Master domain www",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::Hm_media' =>
	{
		about => "Master domain media",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::Hm_grf' =>
	{
		about => "Master domain media graphix",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	
	'$tom::H' =>
	{
		about => "domain",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::H_www' =>
	{
		about => "domain www",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::H_media' =>
	{
		about => "domain media",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::H_grf' =>
	{
		about => "domain media graphix",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	
	'$tom::H_cookie' =>
	{
		about => "Cookies domain for USRM",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	'$tom::cookie_name' =>
	{
		about => "Unique name of cookies",
		force => 1,
		notnull => 1,
		warn => 1,
	},
	
	
	'$TOM::LNG' =>
	{
		about => "Default LNG for system",
		optimal => "en",
	},
	
	'$TOM::LNG_search' =>
	{
		about => "Search second XLNG file",
		optimal => 0,
	},
	
	'$TOM::LNG_permanent' =>
	{
		about => "Permanent sending FORM{__lng} in url",
		optimal => 0,
		force => 1,
	},
	
#	$TOM::LNG_permanent=1;# ($main::FORM{__lng})
	
	'$TOM::LNG_autodetect' =>
	{
		about => "Autodetect LNG for session",
		optimal => 0,
	},
	'@TOM::LNG_accept' =>
	{
		about => "List of accept languages",
		force=>1,
#		optimal => 0,
	},
	
	
	'$TOM::CACHE' =>
	{
		about => "Enable CACHE",
		optimal => 1,
		force => 1,
		'warn' => 1,
	},
	'$TOM::CACHE_time' =>
	{
		about => "Default CACHE time",
		optimal => 600,
#		force => 1,
	},
	
	
	'$TOM::DEBUG' =>
	{
		about => "Yes. Log events, please :)",
		optimal => 1,
		warn => 1,
	},
	'$TOM::DEBUG_mdl' =>
	{
		about => "Debug over modules",
		optimal => 1,
		warn => 1,
	},
	'$TOM::DEBUG_cache' =>
	{
		about => "Debug nad cache a jej optimalizacia.",
		optimal => 1,
		warn => 1,
	},
	
	'$TOM::LAYERS' =>
	{
		about => "Enable layer support",
		optimal => 0,
		force => 1,
	},
	'$TOM::ALRM_change' =>
	{
		about => "Enable ALRM changing in modules",
		optimal => 0,
		force => 1,
	}
	
	
#	=0;
);

require "/www/TOM/.core/_config.sg/TOM.conf";
require "/www/TOM/.core/_config/TOM.conf";
#require "/www/TOM/.core/_config/cron.conf";

$CRON::P="/www/TOM";
$cron::P=$CRON::P;
	
if ($FORM{domain})
{
	require $p."/local.conf";
	$cron::P=$main::p;
	#print "$FORM{-category}\n";
	
	
	#print "default language"
	
	foreach (sort keys %variables)
	{
		#print "key $_\n";
		my $out;
		if ($_=~/^@/)
		{
			$out=eval "return join \" \",$_";
		}
		else
		{
			$out=eval "return $_";
		}
		
		next if (!$out && !$variables{$_}{force} && !$variables{$_}{optimal});
		
		#print "out=$out\n";
		print color 'reset green';
		
		if ($variables{$_}{deprecated})
		{
			print color 'reset red';
		}
		
		# pokial tato premenna ma default hodnotu, ale ta hodnota sa nerovna optimalnej,
		if (exists $variables{$_}{optimal} && $out ne $variables{$_}{optimal})
		{
			if ($variables{$_}{warn})
			{
				print color 'reset bold yellow';
			}
			else
			{
				print color 'reset bold green';
			}
		}
		# pokial tato premenna ma default hodnotu, tato hodnota sa rovna optimalnej a NEMUSI sa zobrazovat
		elsif (exists $variables{$_}{optimal} && $out eq $variables{$_}{optimal} && !$variables{$_}{force})
		{
			next;
		}
		
		if ($variables{$_}{'notnull'} && !$out)
		{
			if ($variables{$_}{warn})
			{
				print color 'reset bold yellow';
			}
			else
			{
				print color 'reset bold green';
			}
		}
		
		print "[ ".sprintf("%-25s",$_)." ] [ ";
		
		print sprintf("%-45s",$variables{$_}{about})." ] [ ";
		
		print $out." ]";
		
		print "\n";
		#print "-".eval "return $variables{$_}"."-\n";
	}
	
}








&exit();
