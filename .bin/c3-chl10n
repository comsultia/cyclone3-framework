#!/usr/bin/perl
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use Data::Dumper;
use Term::ANSIColor;
use DateTime;

BEGIN
{
	$TOM::engine='cli';
	$main::debug=1 if $ENV{'CYCLONE3DEBUG'};
#	$main::stdout=0 unless $ENV{'CYCLONE3DEBUG'};
	if (!$ENV{'CYCLONE3PATH'})
	{
		$ENV{'CYCLONE3PATH'}="/www/TOM" if -d "/www/TOM"; # obsolete
		$ENV{'CYCLONE3PATH'}="/Cyclone3" if -d "/Cyclone3";
		$ENV{'CYCLONE3PATH'}="/srv/Cyclone3" if -d "/srv/Cyclone3";
	}
}
END {use Inline;$SIG{__WARN__} = sub {};}

our %arg;
foreach my $key(@ARGV)
{
	$key=~s/^\-\-// && do
	{
		my @ref=split('=',$key,2);
		$ref[1]=1 unless exists $ref[1];
		if (ref($main::arg{$ref[0]}) eq "ARRAY")
		{
			push @{$main::arg{$ref[0]}},$ref[1];
		}
		elsif ($main::arg{$ref[0]})
		{
			my $oldval=$main::arg{$ref[0]};
			delete $main::arg{$ref[0]};
			$main::arg{$ref[0]}=[
				$oldval,
				$ref[1]
			];
		}
		else
		{
			$main::arg{$ref[0]}=$ref[1];
		}
		next;
	};
	$key=~s/^\-// && do
	{
		foreach (split('',$key)){$main::arg{$_}++;}
	};
}


if ($main::arg{'v'} >= 2)
{
	$main::debug=1;
}

if ($main::arg{'domain'})
{
	$main::arg{'domain'}=~s|^www\.||i;
	$main::h=$main::arg{'domain'};$main::h=~s|\.|_|g;$main::h=~s|/|__|g;
	
	my $path=$main::arg{'domain'};$path=~s|^(.[^/]*)(.*)||;
	my $path_dom=$1;my $path_sub=$2;
	$path_dom=~s|(.*\.\|)(.*?\..*?)$|$1|;
	$tom::p="!$2";$path_dom=~s|\.$||;
	
	foreach (reverse split('\.',$path_dom)){$tom::p.="/!$_";}
	foreach (split('/',$path_sub)){$tom::p.="/$_";}
	
	$tom::p=~s|//|/|g;
	$tom::p=$ENV{'CYCLONE3PATH'}."/".$tom::p;
	
	$tom::P=$tom::p;
	delete $main::arg{'domain'};
}

require $ENV{'CYCLONE3PATH'}."/.core/.libs/TOM.pm";
require TOM::Engine::job;
$0.=" ".$argv if $argv;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;
use vars qw//;

package main;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;
use Cwd 'abs_path';

$TOM::engine_ready=1;

require Ext::Redis::_init;

#$main::cache=0;

opendir (DIR, $tom::P.'/_dsgn') or die $!;
foreach my $file (grep {$_=~/\.L10n$/} sort readdir(DIR)) {
	main::_log_stdout("$file");
	
	my $L10n=new TOM::L10n(
		'name' => ($file=~/^(.*)\.L10n$/)[0],
		'lng' => $tom::lng
	);
	
	foreach my $id (sort keys %{$L10n->{'string_'}})
	{
		# only entities from this L10n, not dependencies
		next unless $L10n->{'string_'}->{$id}->{'location'} eq $L10n->{'location'};
		
		my $key_entity=TOM::Digest::hash(Encode::encode('UTF-8',
			$L10n->{'location'}.'|'.$id
		));
		my $has=$Ext::Redis::service->get('C3|L10n|use|'.$key_entity);
		if (!$has)
		{
			main::_log_stdout(" '$id'",1);
		}
	}
	
}


1;
