#!/usr/bin/perl
use Term::ANSIColor;
BEGIN {require "/www/TOM/.bin/tom3-init";}
use Mysql;
use TOM::Database::connect;
use Utils::datetime;

$main::time_current=time;

%form=
(
	'----domain'	=>	"domain to search in",
	'----view'		=>	"module parameters you want view",
	'----merge'		=>	"module parameters only",
	'--arg*=value' => 	"module argument and value (regexp)",
	'example 1' => "ie. --category=4.*"
);
if (($FORM{h})||($FORM{help}||!keys %FORM)){&help();}
#if (!$FORM{domain} && !$FORM{a}){&help();}


my %search; my @view;
while ( my ($k,$v) = each %FORM )
{
	if ( $k =~ s|^--|| )
	{
		if ( $k eq 'view' )
		{
			foreach my $param ( split ',', $v ) { push @view, $param; }
		}
	}
	else { $search{$k} = $v; }
}

sub file2domain
{
	my $file = shift;
	my $domain;
	
	foreach my $part(split('/',$file))
	{
		next unless $part;
		if ($part=~s/^!//)
		{
			$domain=$part.".".$domain;
		}
		else
		{
#			$domain.="$part";
			$domain=~s|\.$||;
			$domain.="/".$part;
		}
	}
	$domain=~s/\.$//;

	return $domain;
}



%CRON::hosts=();


$TOM::P = '/www/TOM';
if (opendir (DIR, $TOM::P ))
{
	my @files=readdir DIR;
	foreach my $file(@files)
	{
		next if $file=~/^(\.|\.\.)$/;
		if (
				(-d $TOM::P."/".$file) &&
				($file=~/^([^_\.][!\w\.\-]+|.*\/[^_\.][!\w\.]+)$/) &&
				(not $file=~/(!media|!www)/)
			)
		{
			if (opendir (DIR1,$TOM::P."/".$file)){foreach (readdir DIR1){if (($_ ne ".")&&($_ ne "..")){push @files,$file."/".$_;}}}
		}

		if ($file=~s/\/local.conf$//)
		{
			$CRON::hosts{file2domain($file)}=$file;
		}
		
	}
}

my @out;
my @portals;
foreach my $k ( sort keys %CRON::hosts )
{
	my $v = $CRON::hosts{$k};
	my $dir = $TOM::P."/".$v."/_type";
	if ( -d $dir )
	{
		push @portals, $dir."/" if !$FORM{'--domain'} || ($FORM{'--domain'} eq $k);
	}
}

my $row;
my $pad1 = 25; my $pad2 = 45; my $pad3 = 15;
$row = sprintf('%-'.$pad1.'s', 'domain').sprintf('%-'.$pad2.'s', 'type');
foreach my $param ( @view ) { $row .= sprintf('%-'.$pad3.'s', $param); }
push @out, $row;

my %merge;

foreach my $dir ( @portals )
{
	opendir ( DIR, $dir );

	# Prebehneme si domeny
	foreach my $type ( sort readdir( DIR ) )
	{
		next unless $type =~ /(\.pub\.type|\.cml_gen)$/;
		my $path = $dir.$type; my $dom = $path; $dom =~ s|/www/TOM/(.*)/_type.*|$1|; $dom = file2domain($dom);
		my $cont = `cat $dir$type`;
		while ( $cont =~ s|(<MODULE>.*?<\/MODULE>)||s )
		{
			my $mod = $1;
			my $ok = 1;

			my %modvars = ( $mod =~ /<VAR id="(.*)" value="(.*)" \/>/g );
			while ( my ($k0,$v0) = each %search )
			{
				if ( not $modvars{$k0} =~ /^$v0$/ ) { $ok = 0; }
			}

			next unless $ok;

			while ( my ($k1,$k2) = each %modvars )
			{
				$merge{$k1}++;
			}
			
			$row = '';

			$row = sprintf('%-'.$pad1.'s', $dom).sprintf('%-'.$pad2.'s', $type);
			foreach my $param ( @view ) { $row .= sprintf('%-'.$pad3.'s', $modvars{$param}); }
			
			push @out, $row;
		}
	}

	closedir( DIR );
}

print color "reset bold yellow";
if ( exists $FORM{'--merge'} )
{
	foreach my $k ( sort keys %merge )
	{
		my $v = $merge{$k};
		print sprintf('%-25s', $k)." (used ".sprintf('%5s',$v)." times)\n"
	}
}
else
{
	foreach my $row ( @out )
	{
		print $row."\n";
	}
}

print color "reset";

