<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<jobs>
	
	<!-- autobalance database slaves -->
	<trigger
		id="db_autobalance"
		type="cron"
		cron-run-every="10M"
		job-name="a100-db_autobalance" />
	
	<!-- process old logs -->
	<trigger
		id="process_logs"
		type="cron"
		cron-schedule="10 0  * * *"
		job-name="a140-log_clean" />
	<trigger
		id="manage_rlogs"
		type="cron"
		cron-run-every="3H"
		job-name="eElastic-rlog_manage" />
	<trigger
		id="process_rlogs"
		type="cron"
		cron-schedule="0 21  * * *"
		job-name="eElastic-rlog_clean" />
	<!-- in every domain -->
	<trigger
		id="process_rlogs_domain"
		type="cron"
		cron-schedule="0 21  * * *"
		run-on-each="domain"
		job-name="eElastic-rlog_clean" />
	
	<!-- check for email to send every few minutes -->
	<trigger
		id="send_email"
		type="cron"
		cron-run-every="120S"
		job-class="email"
		job-name="a130-email_autosend" />
		<!-- when anything new added/changed in queue of emails, try to send it immediately -->
	<trigger
		id="db_changed-a130_email_autosend"
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a130_send"><![CDATA[
			$do->job({'deduplication'=>'true','routing_key' => 'job::email'},{
				'name' => 'a130-email_autosend'
			},{
#				'ID' => $body->{'ID_entity'}
			});
	]]></trigger>
	<trigger
		id="email_cleaning"
		type="cron"
		cron-run-every="1H"
		job-class="email"
		job-name="a130-email_cleaning" />
	
	<!-- expire online users -->
	<trigger
		id="user_online_expire"
		type="cron"
		cron-run-every="30M"
		job-name="a301-user_online_expire" />
	<!-- expire users -->
	<trigger
		id="user_expire"
		type="cron"
		cron-run-every="1H"
		job-name="a301-user_expire" />
	
	
	<!-- clean temporary files in domains -->
	<trigger
		id="domain_temp_clean"
		type="cron"
		cron-run-every="12H"
		run-on-each="domain"
		job-name="a100-temp_clean" />
	
	
	<!-- when image file changed -->
	<trigger
		id="a501_image_format_check"
		type="cron"
		cron-run-every="30M"
		run-on-each="database"
		run-if-addon="a501"
		job-name="a501-image_format_check" />
	<trigger
		id="db_changed-a501_image_file"
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a501_image_file"><![CDATA[
			$do->job({
				'deduplication' => 'true',
				'routing_key' => 'db:' . $body->{'db_name'}
			},{
				'name' => 'a501-image_format_check'
			},{
				'ID_entity' => $body->{'ID_entity'}
			});
	]]></trigger>
	
	
	<!-- when video_part_file changed -->
	<trigger
		id="a510_video_format_check"
		type="cron"
		cron-run-every="5M"
		run-on-each="database"
		run-if-addon="a510"
		job-name="a510-video_format_check" />
	<trigger
		id="db_changed-a510_video_part_file"
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a510_video_part_file"><![CDATA[
			$do->job({
				'deduplication' => 'true',
				'routing_key' => 'db:' . $body->{'db_name'}
			},{
				'name' => 'a510-video_part_file_check'
			},{
				'ID_entity' => $body->{'ID_entity'}
			});
	]]></trigger>
	<trigger
		id="a510_video_clean"
		type="cron"
		cron-run-every="24H"
		run-on-each="database"
		run-if-addon="a510"
		job-name="a510-video_clean" />
	
	
	<!--
	<trigger
		id="temp_clean"
		type="cron"
		cron-run-every="5M"
		run-on-each="domain"
		run-if-addon_="a501"
		job-name="a100-temp_clean" />
	-->
	
	<!-- process temporary files -->
	<!--
	<trigger
		id="clean_temporary_files"
		type="cron"
		cron-schedule="*/5 *  * * *"
		job-name="a100-temp_clean" />
	-->
	
	<!-- autoprocess -->
	<!--
	<trigger
		id="db_changed-a301_user"
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a301_user"><![CDATA[
			$do->job({'routing_key' => 'db:'.$body->{'db_name'}},{
				'name' => 'a301-check_user'
			},{
				'ID_user' => $body->{'ID_entity'}
			});
	]]></trigger>
	-->
	
	<!--
	<trigger
		id="db_changed-a010_test"
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a010_test"><![CDATA[
#			$do->job({'routing_key' => 'db:'.$body->{'db_name'}},{
#				'name' => 'a301-check_user'
#			},{
#				'ID_user' => $body->{'ID_entity'}
#			});
	]]></trigger>
	-->
	
	
	<!--
	<trigger
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a301_user"
		exec="test">
	</trigger>
	
	<trigger
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a301_user"><![CDATA[
			$do->job({'routing_key' => 'db:'.$body->{'db_name'}},{
				'name' => 'a301-check_user'
			},{
				'ID_user' => $body->{'ID_entity'}
			});
	]]></trigger>
	
	<trigger
		type="notify"
		notify-event="db_changed"
		notify-event-tb_name="a401_article"><![CDATA[
			$do->job({ # message header
				'routing_key' => 'db:'.$body->{'db_name'}
			},{ # job header
				'name' => 'a401-check_article'
			},{ # job arguments
				'ID_entity' => $body->{'ID_entity'}
			});
	]]></trigger>
	-->
	
	<!--  global trigger -->
	<!--
	<trigger
		type="cron"
		cron-run="*/5 *  * * *"><![CDATA[
			
			do_job({'name' => 'a301-check_online'},
				{
					'limit' => 50
			});
			
	]]></trigger>
	-->
	
	<!--
	<exec id="test"><![CDATA[
		
	]]></exec>
	-->
	
</jobs>
