#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
$authors="fordinal\@webcom.sk;nemsak\@webcom.sk";
use strict;

=head1 NAME
fview_m1

=head1 HEAD_VERSION_BUILD
1.051208

=head1 DESCRIPTION
article display

=head1 CHANGES
2005-10-12 deb00t
	- pridane zamienanie VSETKYCH dat zo selectu clanku za primarne manualne zamienanie (~line 523)
2005-12-08 deb00t
	- pridana podpora inline a540 liniek
2006-01-25 deb00t
	- zamienanie special templatov do TMP pre kazdu premennu/premennu s urcitou hodnotou zo selectu clanku
2006-06-06
	- dorobeny data var _a400_xrelated_full (kopiruje sa pred parsingom z predaneho _a400_xrelated (ak existuje). dovod? na konci v xrelated zostanu len nevyparsovane veci, co niekedy nemusi byt ziaduce.
2006-06-06 deb00t
	- $pages[$env{page}]=~s|\n|<br />|g; vykomentovany - robil nehorazny mrdnik v zobrazeni clanku, napriklad ak clanok obsahoval tabulku s \n-kami
=cut

sub execute
{
	my %env=@_;


	if ((!$env{return_no_data}) && (!$env{_a400_ID}))
	{
		$tom::ERR="no data available!";
		main::_log("no data available!");
		return undef;
	}

	Tomahawk::GetXSGN(-convertvars=>1) || return undef;
	if (($env{xt_xlng}) || ($env{xlng}))
	{
		main::_log("using xlng transformation");
		if ($env{xlng}) { main::_log("WARNING! using deprecated parameter 'xlng'! please, use 'xt_xlng';"); }
		Tomahawk::GetXLNG() || return undef; # retrieve language xml
		Tomahawk::XLNGtoXSGN(); # implement XLNG into XSGN
	}

	if (($env{return_no_data}) && (!$env{_a400_ID}))
	{
		if (exists $XSGN{TMP_NO_DATA})
		{
			main::_log("no data available. returning TMP_NO_DATA");
			$XSGN{TMP}=$XSGN{TMP_NO_DATA};
			return 1;
		}
		else
		{
			return undef;
		}
	}

	$XSGN{TMP}=$XSGN{TMP_page} if (($env{page}) && $XSGN{TMP_page});

	$env{db_120}=$env{db_400} if ($env{db_400} ne $TOM::DB_name); #to je co za picovinu totoq? to je co za podmienka??

	$env{db_400}=Tomahawk::Getmdlvar("400","db") unless $env{db_400};
	$env{db_400}=$TOM::DB_name unless $env{db_400};

	$env{db_400_url}=$env{db_400} unless $env{db_400_url};
	$env{a400_IDcategory_url}=Tomahawk::Getmdlvar("400",'IDcategory_url', db=>$env{db_400_url});

	my %IDcategory_url_hash = ( $env{a400_IDcategory_url}=~/([^\r\n;]+);([^\r\n]+)/g );

	$env{db_500}=Tomahawk::Getmdlvar("500","db") unless $env{db_500};
	$env{db_500}=$TOM::DB_name unless $env{db_500};

	#disable paging and display whole article :)
	$env{paging}=1 unless ((defined $env{paging}) && ($env{paging} ne 1));

	$env{page}=$main::FORM{page};
	$env{page}=0 unless $env{page};

	# neviem ci toto tu ma este byt :(
	#$env{a500_format}='t' unless $env{a500_format};

	foreach(grep {/a500_format.*?/} keys %env)
	{
		if(not exists $env{$env{$_}.'_hash'})
		{
			$env{$env{$_}.'_hash'}=Tomahawk::Getmdlvar("500",$env{$_}.'_hash',db=>$env{db_500});
			main::_log("checking if the format '$env{$_}' is hashed from $env{db_500} - $env{$env{$_}.'_hash'}");
		}
	}

	#old haluze
	#$env{a500_format}='t' unless $env{a500_format};
	#$env{$env{a500_format}.'_hash'}=Tomahawk::Getmdlvar("500",$env{a500_format}.'_hash',db=>$env{db_500});
	#$env{a500_format_first}='t' unless $env{a500_format_first};
	#$env{$env{a500_format_first}.'_hash'}=Tomahawk::Getmdlvar("500",$env{a500_format_first}.'_hash',db=>$env{db_500});


	#Tomahawk::Getmdlvar("500",$env{first_format_500}.'_hash',db=>$env{db_500})
	#Tomahawk::debug::log(0," value=".$env{$env{first_format_500}.'_hash'}." db=".Tomahawk::Getmdlvar("500",$env{first_format_500}.'_hash',db=>$env{db_500}));
	#Tomahawk::debug::log(0,"first_format_500 = $env{first_format_500}");

	# zistujem ci t je v hash formate;
	#$env{t_hash}=Tomahawk::Getmdlvar("500","t_hash",db=>$env{db_500});

	my @pages;
	if($env{paging})
	{ @pages=split('<myNEWPAGE>',$env{_a400_full}); }
	else
	{ push @pages, $env{_a400_full}; $env{page}=0; }

	#$env{_a400_full}=~s|\n|<br />|g;
	$pages[$env{page}]=~s|\n|<br />|g unless $env{'ignore_n'};
	1 while ($pages[$env{page}]=~s|<br ?\/?>$||gi);

	main::_log('before hotfixing: '.$pages[$env{page}]);

	#hotfix: repairing of invalid tags
	$pages[$env{page}]=~s|<br>|<br />|gi;

	main::_log('after hotfixing: '.$pages[$env{page}]);

	my $db0=$main::DB{main}->Query("
		SELECT
			name
		FROM $env{db_400}.a400_category
		WHERE
			ID='$env{_a400_IDcategory}'
			AND lng='$env{_a400_lng}'
		LIMIT 1
	");
	if (my %db0_line=$db0->fetchHash)
	{
		$env{_a400_IDcategory_name}=$db0_line{name};
		#$XSGN{TMP}=~s|<%IDcategory_name%>|$db0_line{name}|g;
		main::_log("a just - $db0_line{name}");
	}

	#toto asi treba prerobit si myslim ...
	elsif (($env{show_catname_full})&&($env{_a400_IDcategory}))
	{
		my $var;
		my $null;

		foreach($env{_a400_IDcategory}=~/(..)/g){$var.="$_";$null.="OR ID='$var' ";}

		$null=~s|^OR ||;

		my $db0=$main::DB{main}->Query("
			SELECT
				name
			FROM $env{db_400}.a400_category
			WHERE
				$null
			ORDER BY ID
		");
		my $var;
		while (my %db0_line=$db0->fetchHash){$var.="$db0_line{name} / ";}
		$XSGN{TMP}=~s|<%IDcategory_name%>|$var|g;
	}

	$env{_a400_xrelated_full}=$env{_a400_xrelated} if (exists($env{_a400_xrelated}));

	# PHOTOS HANDLING
	# extracting photos
	my @photos;
	while ($env{_a400_xrelated}=~s|<VAR id="a500" value="(.*?)" />||)
	{my $zeroid=sprintf('%07d',$1);push @photos,$zeroid;}

	#$page_img_count="=~s|<my_a500 (.*?)/>|<!TMP!>";

	# outputting photos into article body
	my $counter=0;
	my $temp_counter=0;
	#while ($env{_a400_full}=~s|<my_a500 (.*?)/>|<!TMP!>|s)
	while ($pages[$env{page}]=~s|<my_a500 (.*?)/>|<!TMP!>|s)
	{
		#main::_log($pages[$env{page}]);

		#if (!$photos[$counter]){$pages[$env{page}]=~s|<!TMP!>||g;last;}

		#Tomahawk::debug::log(6,"extracting photo ".$counter);
		my %env0=CML::VARhash($1);
		my %env_original;

		main::_log("found image ID: $env0{id}");

		# ZMENA FORMATU - toto je cele nejake chore tusim :(
		#$env0{format}=$env{a500_format} unless $env0{format};
		#$env0{format}=$env{a500_format_hard} if $env{a500_format_hard};

		$env_original{format}="o";

		# if exists, use the standard format defined in type
		$env0{format}=$env{a500_format} if $env{a500_format};
		$env0{format}=$env{'a500_format_'.$counter} if ($env{'a500_format_'.$counter});
		$env0{format}=$env{'a500_format_'.$env{page}.'_'.$counter} if ($env{'a500_format_'.$env{page}.'_'.$counter});

		#if it's not already defined, fetch info about format
		$env{$env0{format}.'_hash'}=Tomahawk::Getmdlvar("500",$env0{format}.'_hash',db=>$env{db_500}) unless (exists $env{$env0{format}.'_hash'});
		main::_log("is ".$env0{format}."_hash a hashed image format? ".$env{$env0{format}.'_hash'});

		if($env0{format}!='o'){
			$env{'o_hash'}=Tomahawk::Getmdlvar("500",'o_hash',db=>$env{db_500}) unless (exists $env{'o_hash'});
			main::_log("is o_hash a hashed image format? ".$env{'o_hash'});
		}

		# fetching image's h&w from _config table, if undefined in <myPHOTO> tag
		if ((!$env0{width})&&(!$env0{height})) # len pokial su nezname obdidve velkosti
		{
			my $var=Tomahawk::Getmdlvar("500",$env0{format}.'_width_height',db=>$env{db_500});
			if (not $var=~/-/) # nieje velkost definovana rozsahom XxY-XxY
			{
				my @sizes=split('x',$var);
				$env0{width}=$sizes[0] if $sizes[0];
				$env0{height}=$sizes[1] if $sizes[1];
			}
		}

		my $var;
		#my $zeroid=$photos[$counter];if ($zeroid=~/^(....)/i){$var=$1};
		my $zeroid=sprintf('%07d',$env0{id});

		my $zeroid_original=$zeroid;

		if ($zeroid=~/^(....)/i){$var=$1};
		#Tomahawk::debug::log(9,"!$zeroid!$var!");
		if ($env{$env0{format}.'_hash'})
		{
			main::_log("find hash in ID=$zeroid and format=$env0{'format'}");
=head1
			main::_log("
				SELECT
					a.hash,b.about
				FROM $env{db_500}.a500 AS a
				LEFT JOIN $env{db_500}.a500_attrs AS b ON a.IDattrs=b.IDattrs
				WHERE
					a.ID='$zeroid'
					AND a.format='$env0{format}'
					AND (a.lng='$env{lng}' OR a.lng='')
					AND a.active='Y'
				LIMIT 1
			");
=cut
			my $db0=$main::DB{main}->Query("
				SELECT
					a.hash,b.about,b.keywords
				FROM $env{db_500}.a500 AS a
				LEFT JOIN $env{db_500}.a500_attrs AS b ON a.IDattrs=b.IDattrs
				WHERE
					a.ID='$zeroid'
					AND a.format='$env0{format}'
				LIMIT 1
			");
			if (my %db0_line=$db0->FetchHash)
			{
				$zeroid=$db0_line{hash};
				$env0{alt}=$db0_line{about};
				$env0{keywords}=$db0_line{keywords};
				
				main::_log("found hash $zeroid");
				
			}
			else
			{
				main::_log($db0->errstr());
			}

			if($env{a500_fetch_originals}){
				main::_log('fetching original image');
				my $db1=$main::DB{main}->Query("
					SELECT
						a.hash,b.about,b.keywords
					FROM $env{db_500}.a500 AS a
					LEFT JOIN $env{db_500}.a500_attrs AS b ON a.IDattrs=b.IDattrs
					WHERE
						a.ID='$zeroid_original'
						AND a.format='o'
						AND a.active='Y'
					LIMIT 1
				");
				if (my %db1_line=$db1->FetchHash)
				{
					$zeroid_original=$db1_line{hash};
					$env_original{alt}=$db1_line{about};
					$env_original{keywords}=$db1_line{keywords};

					$env_original{name}=$zeroid_original."-o.jpg";
					$env_original{fullpath}=$tom::H_500."/".$var."/".$zeroid_original."-o.jpg";
				}
				else
				{
					main::_log($db1->errstr());
				}
			}
		}

		#Tomahawk::debug::log(9,"!$zeroid!$var!");
		$env0{name}=$zeroid."-".$env0{format}.".jpg";
		$env0{fullpath}=$tom::H_500."/".$var."/".$zeroid."-".$env0{format}.".jpg";

		$XSGN{NULL}=undef;
		if(exists ($XSGN{'a500_'.$env{page}.'_'.$counter}))
		{
			main::_log("got a different template for a500_".$env{page}."_".$counter);
			$XSGN{NULL}=$XSGN{'a500_'.$env{page}.'_'.$counter};
		}
		elsif(exists ($XSGN{'a500_'.$counter}))
		{
			main::_log("got a different template for a500_".$counter);
			$XSGN{NULL}=$XSGN{'a500_'.$counter};
		}
		elsif ((not $counter % 2) && (exists $XSGN{'a500_odd'}))
		{
			main::_log("got a different template for a500_odd");
			$XSGN{NULL}=$XSGN{'a500_odd'};
		}
		else
		{$XSGN{NULL}=$XSGN{a500};}

		$XSGN{NULL}=~s|<%name%>|$env0{name}|g;delete $env0{name};
		$XSGN{NULL}=~s|<%fullpath%>|$env0{fullpath}|g;delete $env0{fullpath};
		$XSGN{NULL}=~s|<%ID%>|$env0{id}|g;
		$XSGN{NULL}=~s|<%keywords%>|$env0{keywords}|g;delete $env0{keywords};
		$XSGN{NULL}=~s|<%about%>|$env0{alt}|g;delete $env0{alt};
		$temp_counter=$counter+1;
		$XSGN{NULL}=~s|<%image_ordinal%>|$temp_counter|g;

		if($env{a500_fetch_originals}){
			main::_log('replacing original image');
			$XSGN{NULL}=~s|<%original_name%>|$env_original{name}|g;delete $env_original{name};
			$XSGN{NULL}=~s|<%original_fullpath%>|$env_original{fullpath}|g;delete $env_original{fullpath};
			$XSGN{NULL}=~s|<%original_ID%>|$env_original{ID}|g;
			$XSGN{NULL}=~s|<%original_keywords%>|$env_original{keywords}|g;delete $env_original{keywords};
			$XSGN{NULL}=~s|<%original_about%>|$env_original{alt}|g;delete $env_original{alt};
		}

		$env0{align}="left" unless $env0{align};

		$XSGN{NULL}=~s|<%align%>|$env0{align}|g;delete $env0{align};

		#creating tag <img *>???
		#?##############my $var;foreach (keys %env0){$var.=" ".$_."=\"".$env0{$_}."\"";}
		# vlozenie obsahu
		#?#########$XSGN{NULL}=~s|<%VAR%>|$var|;
		# vlozenie obrazku
		#$env{_a400_full}=~s|<!TMP!>|$XSGN{NULL}|;

		if(($XSGN{TMP}=~/<#a500_$env{page}_$counter#>/) && ($XSGN{'a500_'.$env{page}.'_'.$counter}))
		{
			$XSGN{TMP}=~s|<#a500_$env{page}_$counter#>|$XSGN{NULL}|;
			main::_log("adding special xsgn - a500_".$env{page}."_".$counter);
			$pages[$env{page}]=~s|<!TMP!>||;
		}
		elsif(($XSGN{TMP}=~/<#a500_$counter#>/) && ($XSGN{'a500_'.$counter}))
		{
			$XSGN{TMP}=~s|<#a500_$counter#>|$XSGN{NULL}|;
			main::_log("adding special xsgn - a500_".$counter);
			$pages[$env{page}]=~s|<!TMP!>||;
		}
		elsif($XSGN{TMP}=~/<#a500_default#>/)
		{
			$XSGN{TMP}=~s|<#a500_default#>|$XSGN{NULL}<#a500_default#>|;
			main::_log("adding image to default gateway - a500_default");
			$pages[$env{page}]=~s|<!TMP!>||;
		}
		else { $pages[$env{page}]=~s|<!TMP!>|$XSGN{NULL}|; main::_log("adding image to its primary gateway"); }

		$counter++;
	}
	main::_log("pages: ".@pages);

	# extract link to other articles
	if ($XSGN{a400}) # len ak mam design na vkladanie do TMP
	{
		my $counter=0;
		main::_log("replacing in-article links  to articles.");
		#while ($env{_a400_full}=~s|<my_a400 (.*?)/>|<!TMP!>|s)
		while ($pages[$env{page}]=~s|<my_a400 (.*?)/>|<!TMP!>|s)
		{
			#Tomahawk::debug::log(6,"extracting link to article ".$counter);

			my %env0=CML::VARhash($1);

			# docasne overovanie linky - toto treba asi prerobit?
			my $db0=$main::DB{main}->Query("
				(
					SELECT
						ID,IDname
					FROM $env{db_400}.a400
					WHERE
						ID='$env0{id}'
						AND active='Y'
					LIMIT 1
				)
				UNION ALL
				(
					SELECT
						ID,IDname
					FROM $env{db_400}.a400_arch
					WHERE
						ID='$env0{id}'
						AND active='Y'
					LIMIT 1
				)
			");
			if (my @db0_line=$db0->fetchrow)
			{
				$XSGN{NULL}=$XSGN{a400};
				$XSGN{NULL}=~s|<%ID%>|$env0{id}|g;
				$XSGN{NULL}=~s|<%IDname%>|$db0_line[1]|g;
				$XSGN{NULL}=~s|<%title%>|$env0{value}|g;
				$pages[$env{page}]=~s|<!TMP!>|$XSGN{NULL}|;
			}
			else
			{
				$XSGN{NULL}=$XSGN{a400_missing};
				$XSGN{NULL}="<%title%>" unless $XSGN{a400_missing};
				$XSGN{NULL}=~s|<%ID%>|$env0{id}|g;
				$XSGN{NULL}=~s|<%IDname%>||g;
				$XSGN{NULL}=~s|<%title%>|$env0{value}|g;
				$pages[$env{page}]=~s|<!TMP!>|$XSGN{NULL}|;
			}
			$counter++;
		}
	}

	# extract link to files
	if ($XSGN{a540})
	{
		my $counter=0;
		main::_log("replacing in-article links  to files.");

		use App::540::_init;
		use App::540::file;

		while ($pages[$env{page}]=~s|<my_a540 (.*?)/>|<!TMP!>|s)
		{
			my %env0=CML::VARhash($1);

			my @files;
			@files = App::540::file::get
			(
				active=>"Y",
				limit=>"1",
				ID=>$env0{id}
			);

			if (scalar( @files ) != 0)
			{
				$XSGN{NULL}=$XSGN{a540};
				$XSGN{NULL}=~s|<%ID%>|$env0{id}|g;
				$XSGN{NULL}=~s|<%title%>|$env0{value}|g;
				$XSGN{NULL}=~s|<%hash%>|$files[0]{hash}|g;
				$pages[$env{page}]=~s|<!TMP!>|$XSGN{NULL}|;
			}
			else
			{
				$XSGN{NULL}=$XSGN{a540_missing};
				$XSGN{NULL}="<%title%>" unless $XSGN{a540_missing};
				$XSGN{NULL}=~s|<%ID%>|$env0{id}|g;
				$XSGN{NULL}=~s|<%title%>|$env0{value}|g;
				$pages[$env{page}]=~s|<!TMP!>|$XSGN{NULL}|;
			}
			$counter++;
		}
	}

=head1
	if (@pages >1)
	{
		$XSGN{TMP}=~s|<#PAGING#>|$XSGN{PAGING}|g;
		if ($env{page})
		{
			my $var=$env{page}-1;
			$XSGN{PREV}=~s|<%page%>|$var|g;
			$XSGN{TMP}=~s|<#PREV#>|$XSGN{PREV}|g;
		}
		if (($env{page}+1)<@pages)
		{
			my $var=$env{page}+1;
			$XSGN{NEXT}=~s|<%page%>|$var|g;
			$XSGN{TMP}=~s|<#NEXT#>|$XSGN{NEXT}|g;
		}
	}
=cut

	if (@pages > 1)
	{
		main::_log("yes, mylord. i am paging. actual page is: $env{page}, article has ".@pages." pages");
		#$XSGN{TMP}=~s|<#PAGING#>|$XSGN{PAGING}|;

		if ($XSGN{'PAGING_'.$env{page}})
		{
			$XSGN{PAGING}=$XSGN{'PAGING_'.$env{page}};
			main::_log("got a different design for paging!");
		}

		if($XSGN{TMP}=~/<#PAGING_$env{page}#>/)
		{
			#not sure about this
			#$XSGN{TMP}=~s|<#PAGING_$env{page}#>|$XSGN{PAGING}|g;
			$XSGN{TMP}=~s|<#PAGING#>|$XSGN{PAGING}|g;
		}
		else
		{$XSGN{TMP}=~s|<#PAGING#>|$XSGN{PAGING}|g;}

		# inserting links to all previous pages
		if(($XSGN{TMP}=~/<#PAGES#>/) && ($XSGN{PAGES}) && ($env{page}>1))
		{
			my $var=$env{page}-1;
			if ($var)
			{
				while ($var)
				{
					$XSGN{PAGES}=~s|<#PAGE#>|$XSGN{PAGE}|;
					$XSGN{PAGES}=~s|<%page%>|$var|g;
					$var--;
				}
				$XSGN{TMP}=~s|<#PAGES#>|$XSGN{PAGES}|g;
			}
		}

		$XSGN{TMP}=~s|<%page%>|$env{page}|;
	}

	if (@pages >$env{page}+1)
	{
		my $nextpage=$env{page}+1;
		$XSGN{NULL}=$XSGN{PAGING_NEXT};
		$XSGN{NULL}=~s|<%page%>|$nextpage|g;

		if($XSGN{'PAGING_URL_'.$nextpage})
		{$XSGN{NULL}=~s|<#PAGING_URL#>|$XSGN{'PAGING_URL_'.$nextpage}|;}
		else
		{$XSGN{NULL}=~s|<#PAGING_URL#>|$XSGN{PAGING_URL}|;}

		$XSGN{NULL}=~s|<%page%>|$nextpage|g;
		$XSGN{TMP}=~s|<#PAGING_NEXT#>|$XSGN{NULL}|g;
	}

	if ($env{page}>0)
	{
		my $prevpage=$env{page}-1;
		$XSGN{NULL}=$XSGN{PAGING_PREV};
		$XSGN{NULL}=~s|<%page%>|$prevpage|g;

		if($XSGN{'PAGING_URL_'.$prevpage})
		{$XSGN{NULL}=~s|<#PAGING_URL#>|$XSGN{'PAGING_URL_'.$prevpage}|;}
		else
		{$XSGN{NULL}=~s|<#PAGING_URL#>|$XSGN{PAGING_URL}|;}

		$XSGN{NULL}=~s|<%page%>|$prevpage|g;
		$XSGN{TMP}=~s|<#PAGING_PREV#>|$XSGN{NULL}|g;
	}

	if ($env{page} eq @pages-1) { $XSGN{TMP}=~s|<#FOOTER#>|$XSGN{FOOTER}|g; }

	#toto cele treba prerobit .. definitivne!
	if ($env{a900_inline})
	{
		#Tomahawk::debug::log(8,"vlozenie banneru $env{a900_inline}");
		$pages[$env{page}]=~s|&nbsp;| |g;
		if ($pages[$env{page}]=~s|^(.{700,}?)<br />\W{0,10}?<br />|\1<br />$env{a900_inline}<br />|)
		{ }
		else
		{
			$pages[$env{page}].=$env{a900_inline};
		}
	}

	if (exists $env{_a400_IDauthor})
	{

	 main::_log("hladam autora");

		my $db0=$main::DB{main}->Query("
			SELECT
				ID,
				IDcategory,
				fullname,
				nickname
			FROM $env{db_120}.a120
			WHERE
				ID='$env{_a400_IDauthor}'
				AND IDtype='0'
			LIMIT 1
		");
		if (my %db0_line=$db0->FetchHash())
		{
			$env{'_a400_author'}=$db0_line{fullname};
			$env{'_a400_author_nick'}=$db0_line{nickname};
			$main::env{'a400_IDauthor_fullname'}=$db0_line{fullname};
		}
	}

	if (exists $env{_a400_IDeditor})
	{

	 main::_log("hladam editora");

		my $db0=$main::DB{main}->Query("
			SELECT
				ID,
				IDcategory,
				fullname,
				nickname
			FROM $env{db_120}.a120
			WHERE
				ID='$env{_a400_IDeditor}'
			LIMIT 1
		");
		if (my %db0_line=$db0->FetchHash())
		{
			$env{'_a400_editor'}=$db0_line{fullname};
			$env{'_a400_editor_nick'}=$db0_line{nickname};
		}
	}

	#replacing incorrect ?|? in full text (admin saves this as html entity - ?%7C?)
	if($env{'fix_piped-links'}){
		$pages[$env{page}]=~s|\?\%7C\?|\?\|\?|g;
	}

	#new way of replacing

	#always replaced as value only
	$XSGN{TMP}=~s|<%ID%>|$env{_a400_ID}|g;
	$XSGN{TMP}=~s|<%IDcategory%>|$env{_a400_IDcategory}|g;
	$XSGN{TMP}=~s|<%full%>|$pages[$env{page}]|g;
	#discutable
	$XSGN{TMP}=~s|<%IDcategory_name%>|$env{_a400_IDcategory_name}|g;
	$XSGN{TMP}=~s|<%IDauthor_nickname%>|$env{_a400_author_nick}|g;


	#replaced by html template and then value
	my %xsgn_transform=(
		'title' => '_a400_title',
		'subtitle' => '_a400_subtitle',
		'tiny' => '_a400_tiny',
		'author_nickname' => '_a400_author_nick',
		'author_fullname' => '_a400_author',
		'IDauthor_nickname' => '_a400_author_nick',
		'IDauthor_fullname' => '_a400_author',
		'editor_nickname' => '_a400_editor_nick',
		'editor_fullname' => '_a400_editor',
		'IDeditor_nickname' => '_a400_editor_nick',
		'IDeditor_fullname' => '_a400_editor',
	);
	foreach(keys %xsgn_transform)
	{
		#if xsgn for variable and its gateway in main xsgn exists, and the variable is not empty, insert the xsgn code
		if(($XSGN{TMP}=~/<#$_#>/) && ($XSGN{$_})  && ($env{$xsgn_transform{$_}}))
		{
			$XSGN{TMP}=~s|<#$_#>|$XSGN{$_}|g;
			main::_log("found a transform block for '$_'. the value is '$env{$xsgn_transform{$_}}'");
		}
		#main::_log("checked value of $_ which is $xsgn_transform{$_} and contains $env{$xsgn_transform{$_}}");
		$XSGN{TMP}=~s|<%$_%>|$env{$xsgn_transform{$_}}|g;
	}

	#2006-01-25 - deb00t - zamienanie special templatov pre dany var/var s urcitou hodnotou
	foreach(grep {/a400_.*?/} keys %env)
	{
		$_=~/a400_(.*?)$/;
		my $tmpvar=$1;

		#xdata, xrelated, full - excluded from value-based transformations (are you nuts???!?)
		if(($tmpvar eq 'xdata') && ($tmpvar eq 'xrelated') && ($tmpvar eq 'full'))
		{
			if(($XSGN{TMP}=~/<#xt_$tmpvar#>/) && ($XSGN{'xt_'.$tmpvar})  && ($env{'_a400_'.$tmpvar}))
			{
				#main::_log("checking for gateway and template existence for xt_".$tmpvar." ($tmpvar: $env{'_a400_'.$tmpvar} | xsgn: $XSGN{'xt_'.$tmpvar.'_'.$env{'_a400_'.$tmpvar}})");
				$XSGN{TMP}=~s|<#xt_$tmpvar#>|$XSGN{'xt_'.$tmpvar}|g;
				main::_log("inserting special template 'xt_".$tmpvar."' into <#xt_".$tmpvar."#>");
			}
		}
		else
		{
			#main::_log("checking for gateway and template existence for xt_".$tmpvar."_".$env{'_a400_'.$tmpvar}." ($tmpvar: $env{'_a400_'.$tmpvar} | xsgn: $XSGN{'xt_'.$tmpvar.'_'.$env{'_a400_'.$tmpvar}})");
			if($XSGN{'xt_'.$tmpvar.'_'.$env{'_a400_'.$tmpvar}})
			{
				if($XSGN{TMP}=~/<#xt_$tmpvar\_$env{'_a400_'.$tmpvar}#>/)
				{
					main::_log("inserting special template 'xt_".$tmpvar."_".$env{'_a400_'.$tmpvar}."' into <#xt_".$tmpvar."_".$env{'_a400_'.$tmpvar}."#>");
					$XSGN{TMP}=~s|<#xt_$tmpvar\_$env{'_a400_'.$tmpvar}#>|$XSGN{'xt_'.$tmpvar.'_'.$env{'_a400_'.$tmpvar}}|g;
				}
				elsif($XSGN{TMP}=~/<#xt_$tmpvar#>/)
				{
					main::_log("inserting special template 'xt_".$tmpvar."_".$env{'_a400_'.$tmpvar}."' into <#xt_".$tmpvar."#> (<#xt_".$tmpvar."_".$env{'_a400_'.$tmpvar}."#> not found)");
					$XSGN{TMP}=~s|<#xt_$tmpvar#>|$XSGN{'xt_'.$tmpvar.'_'.$env{'_a400_'.$tmpvar}}|g;
				}
			}
			elsif(($XSGN{TMP}=~/<#xt_$tmpvar#>/) && ($XSGN{'xt_'.$tmpvar})  && ($env{'_a400_'.$tmpvar}))
			{
				#main::_log("checking for gateway and template existence for xt_".$tmpvar." ($tmpvar: $env{'_a400_'.$tmpvar} | xsgn: $XSGN{'xt_'.$tmpvar.'_'.$env{'_a400_'.$tmpvar}})");
				$XSGN{TMP}=~s|<#xt_$tmpvar#>|$XSGN{'xt_'.$tmpvar}|g;
				main::_log("inserting special template 'xt_".$tmpvar."' into <#xt_".$tmpvar."#>");
			}
		}
	}

	#2006-01-25 - deb00t - zamienanie kazduckej premennej zo selectu clanku
	#duplicitny foreach, v xt_* templatoch mozeme mat totiz aj <%%> pre ine vary, ako ten aktualny - napriklad xt_tiny moze obsahovat aj <%IDcategory%>, nie len <%tiny%>
	foreach(grep {/a400_.*?/} keys %env)
	{
		$_=~/a400_(.*?)$/;
		my $tmpvar=$1;
		$XSGN{TMP}=~s|<%$tmpvar%>|$env{$_}|g;
	}

=head1
	#old way of replacing

	$XSGN{TMP}=~s|<%ID%>|$env{_a400_ID}|g;
	$XSGN{TMP}=~s|<%title%>|$env{_a400_title}|g;
	$XSGN{TMP}=~s|<%subtitle%>|$env{_a400_subtitle}|g;
	$XSGN{TMP}=~s|<%IDcategory%>|$env{_a400_IDcategory}|g;
	$XSGN{TMP}=~s|<%IDcategory_name%>|$env{_a400_IDcategory_name}|g;
	$XSGN{TMP}=~s|<%tiny%>|$env{_a400_tiny}|g;
	$XSGN{TMP}=~s|<%full%>|$pages[$env{page}]|g;
	$XSGN{TMP}=~s|<%author_nickname%>|$env{_a400_author_nick}|g;
	$XSGN{TMP}=~s|<%author_fullname%>|$env{_a400_author}|g;
	$XSGN{TMP}=~s|<%editor_nickname%>|$env{_a400_editor_nick}|g;
	$XSGN{TMP}=~s|<%editor_fullname%>|$env{_a400_editor}|g;
=cut

	my %env0=Utils::datetime::ctodatetime($env{_a400_starttime},format=>1);

	$XSGN{TMP}=~s|<%day%>|$env0{mday}|g;
	$XSGN{TMP}=~s|<%month%>|$env0{mom}|g;
	$XSGN{TMP}=~s|<%year%>|$env0{year}|g;
	$XSGN{TMP}=~s|<%hour%>|$env0{hour}|g;
	$XSGN{TMP}=~s|<%minute%>|$env0{min}|g;
	$XSGN{TMP}=~s|<%second%>|$env0{sec}|g;

	$XSGN{TMP}=~s|<%day_name%>|$Utils::datetime::DAYS{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%day_name_long%>|$Utils::datetime::DAYS_L{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%month_name%>|$Utils::datetime::MONTHS{$env{lng}}[$env0{mom}-1]|g;
	$XSGN{TMP}=~s|<%month_name_long%>|$Utils::datetime::MONTHS_L{$env{lng}}[$env0{mom}-1]|g;

	$XSGN{TMP}=~s|<%starttime_day%>|$env0{mday}|g;
	$XSGN{TMP}=~s|<%starttime_month%>|$env0{mom}|g;
	$XSGN{TMP}=~s|<%starttime_year%>|$env0{year}|g;
	$XSGN{TMP}=~s|<%starttime_hour%>|$env0{hour}|g;
	$XSGN{TMP}=~s|<%starttime_minute%>|$env0{min}|g;
	$XSGN{TMP}=~s|<%starttime_second%>|$env0{sec}|g;

	$XSGN{TMP}=~s|<%starttime_day_name%>|$Utils::datetime::DAYS{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%starttime_day_name_long%>|$Utils::datetime::DAYS_L{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%starttime_month_name%>|$Utils::datetime::MONTHS{$env{lng}}[$env0{mom}-1]|g;
	$XSGN{TMP}=~s|<%starttime_month_name_long%>|$Utils::datetime::MONTHS_L{$env{lng}}[$env0{mom}-1]|g;

	%env0=Utils::datetime::ctodatetime($env{_a400_changetime},format=>1);

	$XSGN{TMP}=~s|<%ch_day%>|$env0{mday}|g;
	$XSGN{TMP}=~s|<%ch_month%>|$env0{mom}|g;
	$XSGN{TMP}=~s|<%ch_year%>|$env0{year}|g;
	$XSGN{TMP}=~s|<%ch_hour%>|$env0{hour}|g;
	$XSGN{TMP}=~s|<%ch_minute%>|$env0{min}|g;
	$XSGN{TMP}=~s|<%ch_second%>|$env0{sec}|g;

	$XSGN{TMP}=~s|<%ch_day_name%>|$Utils::datetime::DAYS{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%ch_day_name_long%>|$Utils::datetime::DAYS_L{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%ch_month_name%>|$Utils::datetime::MONTHS{$env{lng}}[$env0{mom}-1]|g;
	$XSGN{TMP}=~s|<%ch_month_name_long%>|$Utils::datetime::MONTHS_L{$env{lng}}[$env0{mom}-1]|g;

	$XSGN{TMP}=~s|<%changetime_day%>|$env0{mday}|g;
	$XSGN{TMP}=~s|<%changetime_month%>|$env0{mom}|g;
	$XSGN{TMP}=~s|<%changetime_year%>|$env0{year}|g;
	$XSGN{TMP}=~s|<%changetime_hour%>|$env0{hour}|g;
	$XSGN{TMP}=~s|<%changetime_minute%>|$env0{min}|g;
	$XSGN{TMP}=~s|<%changetime_second%>|$env0{sec}|g;

	$XSGN{TMP}=~s|<%changetime_day_name%>|$Utils::datetime::DAYS{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%changetime_day_name_long%>|$Utils::datetime::DAYS_L{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%changetime_month_name%>|$Utils::datetime::MONTHS{$env{lng}}[$env0{mom}-1]|g;
	$XSGN{TMP}=~s|<%changetime_month_name_long%>|$Utils::datetime::MONTHS_L{$env{lng}}[$env0{mom}-1]|g;

	%env0=Utils::datetime::ctodatetime($env{_a400_endtime},format=>1);

	$XSGN{TMP}=~s|<%endtime_day%>|$env0{mday}|g;
	$XSGN{TMP}=~s|<%endtime_month%>|$env0{mom}|g;
	$XSGN{TMP}=~s|<%endtime_year%>|$env0{year}|g;
	$XSGN{TMP}=~s|<%endtime_hour%>|$env0{hour}|g;
	$XSGN{TMP}=~s|<%endtime_minute%>|$env0{min}|g;
	$XSGN{TMP}=~s|<%endtime_second%>|$env0{sec}|g;

	$XSGN{TMP}=~s|<%endtime_day_name%>|$Utils::datetime::DAYS{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%endtime_day_name_long%>|$Utils::datetime::DAYS_L{$env{lng}}[$env0{wday}]|g;
	$XSGN{TMP}=~s|<%endtime_month_name%>|$Utils::datetime::MONTHS{$env{lng}}[$env0{mom}-1]|g;
	$XSGN{TMP}=~s|<%endtime_month_name_long%>|$Utils::datetime::MONTHS_L{$env{lng}}[$env0{mom}-1]|g;

	return 1;
}

1;
