#!/usr/bin/perl
# áéíóú - USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;

use Int::charsets::encode;
use TOM::Net::URI::rewrite;

our $authors="nemsak\@webcom.sk";

sub execute
{
	my %env=@_;
	
	$env{db_400}=Tomahawk::Getmdlvar("400","db") unless $env{db_400};
	$env{db_400}=$TOM::DB{main}{name} unless $env{db_400};
	
	$env{db_500}=Tomahawk::Getmdlvar("500","db") unless $env{db_500};
	$env{db_500}=$TOM::DB{main}{name} unless $env{db_500};
	
	$env{lng} = "sk" unless $env{lng};
	
	my $tmpOutput="";
	
	my @formVariables=(
		'ID',
		'IDname',
		'title',
		'subtitle',
		'tiny',
		'full',
		'lng',
		'starttime',
		'endtime',
		'IDeditor',
		'IDauthor',
		'IDcategory',
		'xrelated'
	);
	
	my %article_data;
	
	foreach my $fV(@formVariables)
	{
		if(exists($main::FORM{$fV}))
		{
			main::_log("checking var ".$fV);
			main::_log("  valuhe:  ".$main::FORM{$fV});
			$article_data{$fV}=$main::FORM{$fV};
			#$tmpOutput.="<".$fV."><![CDATA[".."]]></".$fV.">\n";
		}
	}
	
	if(!$article_data{'IDeditor'})
	{
		main::_log("hladam editora");
		my $db0=$main::DB{main}->Query("
			SELECT
				ID
			FROM
				$env{db_120}.a120
			WHERE
				nickname='$ENV{REMOTE_USER}'
				AND IDtype=1
			LIMIT 1
		");
		if (my %db0_line=$db0->FetchHash())
		{
			$article_data{'IDeditor'}=$db0_line{'ID'};
		}
	}
	
	$article_data{lng}=$env{lng} unless $article_data{lng};
	
	#tu by sa mozno zislo zriesit clearing tagov a mrdnika z niektorych fieldov, ale myslim ze to je skor obskurita
	
	if (length ($article_data{IDname})==0)
	{
		$article_data{IDname}=$article_data{title};
	}
	
	$article_data{'IDname'}=TOM::Net::URI::rewrite::convert($article_data{'IDname'},'notlower'=>1);
	
	my $xrelated;
	
	my @images;
	
	#parse out images
	$article_data{full_decoded}=$article_data{full};
	while ($article_data{full_decoded}=~s|<img (.*?)>|<IMG-TEMP>|i)
	{
		my $var=$1;
		
		$var=~s|/$||;
		
		$var=$var." ";
		
		my %image;
		
		$var=~s|src="(.*?)"||i;
		$image{fullpath}=$1;
		
		$image{hash}=$image{fullpath};
		
		$image{hash}=~s|.*\/(.*?)-(.*?).jpg||i;
		$image{hash}=$1;
		
		$image{'format'}=$2;
		
		$var=~s|alt="(.*?)"||i;
		$image{alt}=$1;
		
		$var=~s|title="(.*?)"||i;
		$image{title}=$1;
		
		#cleanup unenclosed parameters
		$var=~s|=(.*?) |="\1" |gi;
		$var=~s|""|"|gi;
		
		$image{others}=$var;
		
		my $nullid;
		if ($image{hash}=~s|/d||)
		{
			#image is in numeric format - we don't use hashed images on this web??
		}
		else
		{
			my $db1=$main::DB{main}->Query("
				SELECT
					ID
				FROM $env{db_500}.a500
				WHERE
					hash='$image{hash}'
					AND format='$image{format}'
				LIMIT 1
			");
			if($db1)
			{
				if (my @db1_line=$db1->FetchRow())
				{
					$image{ID}=$db1_line[0];
				}
			}
			else
			{
				main::_log($db1->errstr());
			}
		}
		
		1 while ($image{others}=~s|[\s\n]{2,}| |gi);
		
		$xrelated.="<VAR id=\"a500\" value=\"$image{ID}\" />\n";
		
		$image{ID}="id=\"".$image{ID}."\" " if($image{ID});
		$image{alt}="alt=\"".$image{alt}."\" " if($image{alt});
		$image{title}="title=\"".$image{title}."\" " if($image{title});
		$image{format}="format=\"".$image{format}."\" " if($image{format});
		
		$article_data{full_decoded}=~s|<IMG-TEMP>|<my_a500 $image{ID}$image{format}$image{alt}$image{title}$image{others} />|i;
	}
	
	while ($article_data{xrelated}=~s|<VAR\s+id="(.*?)"\s+value="(.*?)"[\s]?/>||i)
	{
		$xrelated.="<VAR id=\"$1\" value=\"$2\" />";
	}
	
	if($article_data{ID})
	{
		$article_data{IDattrs}=$article_data{ID};
		main::_log("we are updating article ID: ".$article_data{ID});
		if(my $db1=$main::DB{main}->Query("
			(
				SELECT
					ID
				FROM $env{db_400}.a400
				WHERE
					ID='$article_data{ID}'
					AND lng='$article_data{lng}'
			)
			UNION ALL
			(
				SELECT
					ID
				FROM $env{db_400}.a400_arch
				WHERE
					ID='$article_data{ID}'
					AND lng='$article_data{lng}'
			)
			ORDER BY ID DESC
			LIMIT 1
		")
		)
		{
			if(!$db1->NumRows())
			{
				main::_log("no '".$article_data{ID}."' language mutation for ID: ".$article_data{ID}." and lng: '".$article_data{ID}."' (creating new record)");
				
				main::_log("
					INSERT INTO
						$env{db_400}.a400
					SET
						ID='$article_data{ID}',
						lng='$article_data{lng}'
				");
				if(my $db3=$main::DB{main}->Query("
					INSERT INTO
						$env{db_400}.a400
					SET
						ID='$article_data{ID}',
						lng='$article_data{lng}'
				"))
				{
					
				}
			}
		}
	}
	else
	{
		main::_log("we are creating a new article");
		
		getnewid:
		
		if(my $db1=$main::DB{main}->Query("
				(
					SELECT
						ID
					FROM $env{db_400}.a400
				)
				UNION ALL
				(
					SELECT
						ID
					FROM $env{db_400}.a400_arch
				)
				ORDER BY ID DESC
				LIMIT 1
			")
		)
		{
			if (my @db1_line=$db1->FetchRow())
			{
				$article_data{ID}=$db1_line[0]+1;
			}
			else
			{
				$article_data{ID}=1;
			}
			main::_log("proposed new article id: ".$article_data{ID});
			
			if(my $db2=$main::DB{main}->Query("
				INSERT INTO
					$env{db_400}.a400
				SET
					ID='$article_data{ID}',
					lng='$article_data{lng}'
			"))
			{
				main::_log("final new article id: ".$article_data{ID});
				
				main::_log("
					INSERT INTO
						$env{db_400}.a400_attrs
						(IDattrs)
					VALUES
						('')");
				if(my $db3=$main::DB{main}->Query("
					INSERT INTO
						$env{db_400}.a400_attrs
						(IDattrs)
					VALUES
						('')
				"))
				{
					$article_data{IDattrs}=$db3->{q{mysql_insertid}};
					main::_log("final new article idattrs: ".$article_data{IDattrs});
				}
			}
			else
			{
				#bacha aby sa nam to tu nezabyciklilo :)
				#goto getnewid;
				main::_log("final new article id: ".$article_data{ID});
			}
		}
	}
	
	foreach (keys %article_data)
	{
		$article_data{$_}=~s|\'|\\'|g;
	}
	
	$article_data{changetime}=$main::time_current;
	
	my $sqlAddon = "";
	
	if(exists($article_data{starttime})){ $sqlAddon.=",starttime='".$article_data{starttime}."'"; }
	if(exists($article_data{endtime})){ $sqlAddon.=",endtime='".$article_data{endtime}."'"; }
	if($article_data{IDauthor}){ $sqlAddon.=",IDauthor='".$article_data{IDauthor}."'"; }
	if($article_data{IDeditor}){ $sqlAddon.=",IDeditor='".$article_data{IDeditor}."'"; }
	if($article_data{IDcategory}){ $sqlAddon.=",IDcategory='".$article_data{IDcategory}."'"; }
	
	$article_data{full_decoded}=~s|[\r\n]+| |g;
	#$article_data{full_decoded}=~s|>[\r\n\s]*?<|><|g;
	#$article_data{full_decoded}=~s|>[\r\n]*?(\S)|>\1|g;
	#$article_data{full_decoded}=~s|(\S)[\r\n\s]*?<|\1 <|g;
	
	my $db4=$main::DB{main}->Query("
		UPDATE
			$env{db_400}.a400
		SET
			IDattrs='$article_data{IDattrs}',
			IDname='$article_data{IDname}',
			IDauthor='$article_data{IDauthor}',
			IDeditor='$article_data{IDeditor}',
			title='$article_data{title}',
			subtitle='$article_data{subtitle}',
			tiny='$article_data{tiny}',
			full='$article_data{full_decoded}',
			xrelated='$xrelated',
			changetime='$article_data{changetime}'
			$sqlAddon
		WHERE
			ID='$article_data{ID}'
			AND lng='$article_data{lng}'
	");
	
	#transforming keys - tom does not allow passing hashes as variables :(
	foreach (keys %article_data)
	{
		~/^[^_]400_/ && do
		{
			$article_data{'_a400_'.$_}=$article_data{$_};
			delete $article_data{$_};
			next;
		}
	}
	
	Tomahawk::module(
		-type => "mdl",
		-category => "400",
		-name => "edit_m1",
		-TMP => "OUTPUT",
		-global => "1",
		'-xsgn' => $env{'xsgn'},
		'-xsgn_global' => $env{'xsgn_global'},
		%article_data
	);
	
	return 1;
	
}
1;
