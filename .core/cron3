#!/usr/bin/perl
=head1 COPYRIGHT

(c) 2003-2006 WebCom s.r.o.
All right reserved!
Unauthorized access and modification prohibited!

"V slobodnom state
 obcan moze rozmyslat
 o com chce
 a hovorit o com rozmysla"
 filozof Baruch Spinoza

=cut

#
# Volam univerzalny zavadzac Cyclone3
#

BEGIN
{
	$TOM::engine='cron';
	require "/www/TOM/.core/.libs/TOM.pm";
}

use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict; # scrict code
use vars qw/
	$result
	/;

# C kniznice /* musia byt tu, aby sa dali pouzivat -> musia byt zavedene pri kompilacii */
use enc3;
use iconv;

#local *HND; # localize file handlers

main::_log(0,"TOM core initialized");

######################################################################################
######################################################################################

main::_log(0,"TOM engine '$TOM::engine' initializing...");

eval
{
	require TOM::Engine::cron;
};
if ($@)
{
	my @ERR=("Error occured during initialization");
	push @ERR,$@;
	# tento error sa nevykona jedine v pripade ak samotna kniznica TOM::Error je chybna
	TOM::Error::engine(@ERR);
	exit(0);
}

main::_log(0,"TOM engine '$TOM::engine' initialized.");

$TOM::engine_ready=1;

######################################################################################
######################################################################################

=head1
track ("ahoj")
{
	track ("ahojte2")
	{
		
	}
}
=cut

my $t0=track TOM::Debug("Initializing");
	
	my $t1=track TOM::Debug("loading local.conf");
	
	
	
	$t1->close();
	
	my $t1=track TOM::Debug("loading master.conf");
		
		
		my $t2=track TOM::Debug("parsing");
		
		main::_log("Toto je nejaky text");
		main::_log("Toto je nejaka text");
		
		$t2->close();
		
		
	$t1->close();
	
$t0->close();











main::_log(0,"TOM engine ended.");