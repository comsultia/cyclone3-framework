#############################
#
# Apache superglobal configuration
#
#############################

#PassEnv CYCLONE3PATH

# Reorder indexes
AddHandler cgi-script .pl .tom
DirectoryIndex desktop.pl index.html core.tom core.pl index.php index.cgi

# FASTCGI
<IfModule mod_fastcgi.c>
	# FCGI handlers
	AddHandler fastcgi-script .fcg .fcgi .tom
	#FastCgiConfig -appConnTimeout
	# 0-longlive 1-dynamic
	FastCgiConfig -gainValue 0.8
	#0.7
	#FastCgiConfig -gainValue 0.4
	# cim vyssie cislo tym brutalnejsie killovanie
	# cim nizsie cislo tym lahsie vytvaranie novych procesov
	FastCgiConfig -multiThreshold 100
	#FastCgiConfig -multiThreshold 20
	# chcem aby kazdy class mal aspon jeden nikdy nekillnuty process
	# ( process sa sam ukonci svojou reziou pri timeoute )
	FastCgiConfig -singleThreshold 10
	# za aku dobu moze byt nastartovana nova instancia existujuceho procesu
	#FastCgiConfig -init-start-delay 120
	FastCgiConfig -init-start-delay 120
	# kazdych X sekund sledujem zatazenie jednotlivych procesov
	FastCgiConfig -updateInterval 30
	# kazdych X sekund rozhodovanie o killovani procesov
	FastCgiConfig -killInterval 150
	# nizsie queue-depth zabezpeci skorsie startovanie novych procesov
	FastCgiConfig -listen-queue-depth 100
	#100
	FastCgiConfig -maxClassProcesses 2
	FastCgiConfig -maxProcesses 100
	FastCgiConfig -minProcesses 20
	# ak padnem, pokusim sa o restart
	#FastCgiConfig -restart 
	# restart az po X sekund
	FastCgiConfig -restart-delay 5
	#The process priority to be assigned to the application instances (using setpriority()).
	#FastCgiConfig -priority 0
	# po akom case ak proces neodpovie na request je povazovany za mrtvy
	# nasledkom je ze apache prerusi akukolvek dalsiu komunikaciu s tymto procesom
	# a spusta dalsie procesy
	FastCgiConfig -idle-timeout 60
</IfModule>


# FCGID
<IfModule mod_fcgid.c>
	AddHandler fcgid-script .fcg .fcgi .tom
	# IdleTimeout n (300 seconds)
	# An idle fastcgi application will be terminated after IdleTimeout seconds.
	IdleTimeout 300
	# IdleScanInterval n (120 seconds)
	# The scan interval for idle fastcgi applications.
	IdleScanInterval 120
	# BusyTimeout n (300 seconds)
	# A fastcgi application will be terminated if handing a single request
	# longer than busy timeout.
	BusyTimeout 300
	# BusyScanInterval n (120 seconds)
	# The scan interval for busy timeout fastcgi applications.
	BusyScanInterval 120
	# ErrorScanInterval n (3 seconds)
	# The scan interval for exit pending fastcgi applications. fastcgi
	# applications will be terminated within this scanning.
	ErrorScanInterval 3
	# ZombieScanInterval n (3 seconds)
	# The scan interval for zombie process. 
	ZombieScanInterval 3
	# ProcessLifeTime n (3600 seconds)
	# A fastcgi application will be terminated if lifetime expired,
	# even no error is detected.
	ProcessLifeTime 3600
	# SpawnScoreUpLimit n (10)
	# The spawn-speed control score up water limit. Score increases while
	# a process is spawned or terminated, and decreases as time progresses;
	# while the score is higher than SpawnScoreUpLimit, the spawning will be
	# held for a while. The higher this number is, the higher speed of the
	# spawning can be.
	SpawnScoreUpLimit 10
	# SpawnScore n (1)
	# The weight of spawning.  This weight will be plused to the spawn-control
	# score on every spawn. The higher this number is, the lower speed of
	# spawning can be.
	SpawnScore 1
	# TerminationScore n (2)
	# The weight of termination. This weight will be plused to the score while
	# fastcgi process terminates. The higher this number is, the lower speed
	# of spawning can be.
	TerminationScore 2
	# IPCConnectTimeout n (3 seconds)
	# The connect timeout to a fastcgi application. 
	IPCConnectTimeout 30
	# IPCCommTimeout n (20 seconds)
	# The communication timeout to a fastcgi application. Please increase this
	#  value if your CGI have a slow initialization or slow respond.
	IPCCommTimeout 300
	#SpawnScoreUpLimit 10
	#SpawnScore 1
	#TerminationScore 2
	MaxProcessCount 64
	DefaultMaxClassProcessCount 16
</IfModule>

