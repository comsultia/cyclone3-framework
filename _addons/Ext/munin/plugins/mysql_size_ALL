#!/usr/bin/perl
#
#%# family=manual
#%# capabilities=autoconf

use strict;

my $db = 'mysql';

my $MYSQLADMIN = $ENV{mysqladmin} || "mysql";

my %WANTED = ( "Index"  => "index", 
	       "Datas" => "datas",
             );

my $arg = shift();

if ($arg eq 'config')
{
	print_config();
	exit();
}
elsif ($arg eq 'autoconf')
{
	unless (test_service())
	{
		print "yes\n";
	}
		else
	{
		print "no\n";
	}
	exit;
}

my $datas = 0;
my $indexes = 0;

my @dbs;
my $COMMAND = "$MYSQLADMIN $ENV{mysqlopts} $db -e 'show databases;'";

open(SERVICE, "$COMMAND |") or die("Coult not execute '$COMMAND': $!");

while (my $db=<SERVICE>)
{
	chomp($db);
	next if $db eq "Database";
	push @dbs,$db;
}
close(SERVICE);


foreach my $db (@dbs)
{
	
	my (@infos,$info,$i_data,$i_index);
	
	my $COMMAND = "$MYSQLADMIN $ENV{mysqlopts} $db -e 'show table status;' | grep 'Data'";
	
	open(SERVICE, "$COMMAND |") or die("Coult not execute '$COMMAND': $!");
	
	while (<SERVICE>)
	{
		(@infos)  = split;
	}
	close(SERVICE);
	
	my $i = 0;
	foreach $info (@infos)
	{
		$i++;
		if ($info eq 'Data_length')
		{
			$i_data = $i;
			next;
		}
		if ($info eq 'Index_length')
		{
			$i_index = $i;
			last;
		}
	}
	
	next unless $i_data;
	next unless $i_index;
	
	$COMMAND = "$MYSQLADMIN $ENV{mysqlopts} $db -e 'show table status;' | cut -f $i_data,$i_index | grep -v leng";
	
	open(SERVICE, "$COMMAND |") or die("Coult not execute '$COMMAND': $!");
	
	while (<SERVICE>)
	{
		(m/(\d+).*?(\d+(?:\.\d+)?)/);
		$datas += $1;
		$indexes += $2;
	}
	close(SERVICE);
	
}


print("datas.value $datas\n");
print("index.value $indexes\n");


















sub print_config {

    my $num = 0;

    print("graph_title MySQL databases size\n");
    print ('graph_args --base 1024 -l 0
graph_vlabel bytes
graph_category mysql
graph_info Plugin available at <a href="http://rodolphe.quiedeville.org/hack/munin/">http://rodolphe.quiedeville.org/hack/munin/</a>
');

    for my $key (keys %WANTED) {
        my $title = $WANTED{$key};
        print("$title.label ${title}\n",
              "$title.min 0\n",
              "$title.type GAUGE\n",
              "$title.draw ", ($num) ? "STACK" : "AREA" ,  "\n",
             );
        $num++;
    }
}


sub test_service {

    my $return = 1;

    system ("$MYSQLADMIN --version >/dev/null 2>/dev/null");
    if ($? == 0)
    {
	system ("$COMMAND >/dev/null 2>/dev/null");
	if ($? == 0)
	{
	    print "yes\n";
	    $return = 0;
	}
	else
	{
	    print "no (could not connect to mysql)\n";
	}
    }
    else
    {
	print "no (mysqladmin not found)\n";
    }
    exit $return;
}
