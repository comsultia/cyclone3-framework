#!/usr/bin/env c3-job
package Cyclone3::job;
use parent 'TOM::Engine::job::module';
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;

use Utils::datetime;

sub execute
{
	my $self=shift;
	my $env=$self->env;
	
	my $max=86400;
	
	opendir (DIR, $tom::P.'/_temp');
	foreach my $file (readdir DIR)
	{
		
		next if $file=~/^_/;
		next if $file=~/^\./;
		next if $file=~/\.ttc2$/;
		
		my $filename=$tom::P."/_temp/".$file;
		
		if (-f $filename)
		{
			my $created=(stat $filename)[9];
			if (($main::time_current - $created) > $max)
			{
				main::_log("old $file ".($main::time_current-$created).", removing...");
				unlink $filename;
			}
			
		}
		
	}
	
	if (-d $tom::P.'/!media/temp')
	{
		opendir (DIR, $tom::P.'/!media/temp');
		foreach my $file (readdir DIR)
		{
			
			next if $file=~/^_/;
			next if $file=~/^\./;
			
			my $filename=$tom::P."/!media/temp/".$file;
			
			if (-f $filename)
			{
				my $created=(stat $filename)[9];
				if (($main::time_current - $created) > $max)
				{
					main::_log("old $file ".($main::time_current-$created).", removing...");
					unlink $filename;
				}
				
			}
			
		}
	}
	
	if (-d $tom::P.'/!media/grf/temp')
	{
		opendir (DIR, $tom::P.'/!media/grf/temp');
		foreach my $file (readdir DIR)
		{
			
			next if $file=~/^_/;
			next if $file=~/^\./;
			
			my $filename=$tom::P."/!media/grf/temp/".$file;
			
			if (-f $filename)
			{
				my $created=(stat $filename)[9];
				if (($main::time_current - $created) > $max)
				{
					main::_log("old $file ".($main::time_current-$created).", removing...");
					unlink $filename;
				}
				
			}
			
		}
	}
	
return 1}
1;
