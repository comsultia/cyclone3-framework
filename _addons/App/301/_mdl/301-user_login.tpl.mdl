#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use Encode;
use encoding 'utf8';
use utf8;
use strict;

use Digest::MD5  qw(md5 md5_hex md5_base64);
use Digest::SHA1  qw(sha1 sha1_hex sha1_base64);
use Digest::SHA qw(hmac_sha256_base64);
use MIME::Base64;
use JSON;
use App::301::_init;

sub execute
{
	my %env=@_;
	Tomahawk::GetTpl() || return undef;
	
	my %tpl_hash;
	
	$env{'login'}=$env{'login'} || $main::FORM{'login'} || $main::RPC->{'login'};
	$env{'pass'}=$env{'pass'} || $main::FORM{'pass'} || $main::RPC->{'pass'};
	my $forcelogin; # without password
	
	if ($main::USRM{'logged'} eq "Y")
	{
		
		if ($env{'url'})
		{
			$main::location=$env{'url'};
			return 1;
		}
		
	}
	
	# FACEBOOK AUTOLOGIN
	my %FB_GET;
	my $wget_cmd='/usr/bin/wget';
	$FB_GET{'access_token'} = $main::FORM{'access_token'}
		if $main::FORM{'access_token'};
	if ( $main::COOKIES_all{'fbsr_'.$App::301::fb_app} && $main::USRM{'logged'} ne "Y" && $main::FORM{'facebook'} eq "true" && !$FB_GET{'access_token'})
	{
		
		$main::COOKIES_all{'fbsr_'.$App::301::fb_app}=~s|^"||;
		$main::COOKIES_all{'fbsr_'.$App::301::fb_app}=~s|"$||;
		
		my $control_string=$main::COOKIES_all{'fbsr_'.$App::301::fb_app};
		main::_log("control_string=$control_string");
		my ($encoded_sig, $payload)=split('\.',$control_string,2);
		
		main::_log("encoded_sig=$encoded_sig");
		main::_log("payload=$payload");
		
		$encoded_sig=~s|_|/|g;
		$encoded_sig=~s|\-|+|g;
		my $sig=decode_base64($encoded_sig);
		main::_log("sig=$sig");
		my $data = decode_json(decode_base64($payload));
		
		my $expected_sig=hmac_sha256_base64($payload, $App::301::fb_secret);
		main::_log("expected_sig=$expected_sig");
		
		use Data::Dumper;
		if ($expected_sig eq $encoded_sig)
		{
#			main::_log("data=".Dumper($data));
			
			my $link = "https://graph.facebook.com/oauth/access_token?client_id=".$App::301::fb_app
				."&redirect_uri=&client_secret=".$App::301::fb_secret
				."&code=".$data->{'code'};
			my $link_data =`$wget_cmd --no-check-certificate -t 1 -T 3 -q -O - \"$link\"`;
			
			main::_log("link=$link");
			main::_log("link_data=$link_data");
			
			%FB_GET=TOM::Net::HTTP::CGI::get_QUERY_STRING($link_data);
			
		}
		
	}
	
			if ($FB_GET{'access_token'})
			{
				main::_log("access_token=".$FB_GET{'access_token'});
				
				my $link = "https://graph.facebook.com/me?access_token=".$FB_GET{'access_token'};
				my $data =`$wget_cmd --no-check-certificate -t 1 -T 3 -q -O - \"$link\"`;
				main::_log("data=$data");
				my $data_json = decode_json $data;
				
				# okay som prihlaseny cez facebook, idem hladat takeho usera
				if ($data_json->{'email'})
				{
					my %sth0=TOM::Database::SQL::execute(qq{
						SELECT
							*
						FROM
							TOM.a301_user
						WHERE
							(email=? OR ref_facebook=?) AND
							hostname=? AND
							status='Y'
						ORDER BY
							ref_facebook DESC
						LIMIT 1
					},'bind'=>[$data_json->{'email'},$data_json->{'id'},$tom::H_cookie],'quiet'=>1);
					my %user=$sth0{'sth'}->fetchhash();
					if ($user{'ID_user'})
					{
						$forcelogin=1;
						$env{'login'}=$data_json->{'email'};
						$env{'pass'}='force';
					}
					else
					{
						# create new user
						$forcelogin=1;
						$env{'login'}=$data_json->{'email'};
						$env{'pass'}=TOM::Utils::vars::genhashN(6); # nahodne heslo/pin
						
						# musim vycreovat tuto firmu
						my %hash;
						# save USRM registration data into new user
						# (from where is comming this user, from campaing, search engine,...?)
						$hash{'USRM_G'}=$main::USRM{'session'}{'USRM_G'};
						if ($main::USRM{'session'}{'USRM_S'})
						{
							$hash{'USRM_S'}=$main::USRM{'session'}{'USRM_S'};
							if ($main::USRM{'session'}{'USRM_S'}{'utm_medium'} eq "affiliate")
							{
								$hash{'USRM_G'}=$main::USRM{'session'}{'USRM_S'};
							}
						}
						
						# vytvorim CVML hash do profilu usera
						my $cvml=CVML::structure::serialize(%hash);
						
						%user=App::301::functions::user_add(
#							'user.login' => $env{'login'},
							'user.status' => 'Y',
							'user.pass' => $env{'pass'},
							'user.email' => $data_json->{'email'},
							'user.ref_facebook' => $data_json->{'id'},
							'user.email_verified' => 'Y',
							'user.saved_session' => $cvml,
#							'groups' => ['newsletter']
						);
						$user{'ID_user'}=$user{'user.ID_user'};
						
					}
					
					# check user profile photo
					my $photo=new TOM::Temp::file('dir'=>$main::ENV{'TMP'});
					my $link="http://graph.facebook.com/".$data_json->{'id'}."/picture?type=large";
					`$wget_cmd -t 1 -T 3 -q \"$link\" -O \"$photo->{'filename'}\"`;
					
					# update user data
					main::_log("update user $user{'ID_user'}",3,"debug");
					%user=App::301::functions::user_add(
#						'user.login' => "",
						'user.ID_user' => $user{'ID_user'},
#						'user.login' => $main::FORM{'email'},
						'user.email' => $data_json->{'email'},
						'user.ref_facebook' => $data_json->{'id'},
						'user_profile.firstname' => $data_json->{'first_name'},
						'user_profile.surname' => $data_json->{'last_name'},
						'avatar' => $photo->{'filename'}
					);
					
					if ($App::301::fb_friend)
					{
						main::_log("sync friends",3,"debug");
						# sync friends
						my $link="https://graph.facebook.com/".$data_json->{'id'}."/friends?access_token=".$FB_GET{'access_token'}."&limit=5000";
						my $data_friends =`/usr/bin/wget -t 1 -T 3 -q -O - \"$link\"`;
						my $data_friends_json = decode_json $data_friends;
						foreach (@{$data_friends_json->{'data'}})
						{
							
							
							my %sth2=TOM::Database::SQL::execute(qq{
								SELECT
									ID_user
								FROM
									TOM.a301_user
								WHERE
									ref_facebook=?
									AND hostname=?
									AND status='Y'
								LIMIT 1
							},'bind'=>[$_->{'id'},$tom::H_cookie],'quiet'=>1);
							if (my %db2_line=$sth2{'sth'}->fetchhash())
							{
								main::_log("$user{'user.ID_user'} id=".$_->{'id'}." name=".$_->{'name'} ,3,"debug");
								App::160::SQL::new_relation(
									'l_prefix' => 'a301',
									'l_table' => 'user',
									'l_ID_entity' => $user{'user.ID_user'},
									'rel_type' => 'fb_friend',
									'r_db_name' => $App::301::db_name,
									'r_prefix' => 'a301',
									'r_table' => 'user',
									'r_ID_entity' => $db2_line{'ID_user'},
									'status' => 'Y',
								);
							}
						}
					}
					
				}
				
			}
	
	
	if ((!$env{'login'})||(!$env{'pass'})||(not $env{'login'}=~/^[a-zA-Z0-9_\@\.\-]{3,64}$/))
	{
		if (exists $main::FORM{'submit'} || $env{'login'} || $env{'pass'})
		{
			main::_log('no credentials!');
			# $XSGN{'TMP'}=$XSGN{'ERR_no-credentials'};
			$tpl_hash{'error'} = 'ERR_no-credentials';
		}

		$TPL->variables_push(\%tpl_hash);
		return 1;
	}
	
	# cookies are dissabled
	if ((keys %main::COOKIES_save) == 0)
	{
		main::_log('no cookie support!');
		#$XSGN{'TMP'}=$XSGN{'ERR_cookies'};
		$tpl_hash{'error'} = 'ERR_cookies';

		$TPL->variables_push(\%tpl_hash);
		return 1;
	}
	
	my $var;
	
	main::_log("ID_user='$main::USRM{ID_user}' ID_session='$main::USRM{ID_session}' IP='$main::ENV{REMOTE_ADDR}' AGENT='$main::ENV{HTTP_USER_AGENT}'");
	
	# continue with current USRM_S session data
	my %USRM_S;if ($main::USRM{'session'}{'USRM_S'}){%USRM_S=%{$main::USRM{'session'}{'USRM_S'}};}
	
	my $sql=qq{
		SELECT
			*
		FROM
			TOM.a301_user
		WHERE
			(login='$env{'login'}' OR email='$env{'login'}') AND
			hostname='$tom::H_cookie' AND
			status='Y'
		LIMIT 1
	};
	my %sth0=TOM::Database::SQL::execute($sql,'quiet'=>1);
	my %user=$sth0{'sth'}->fetchhash();
	if ($user{'ID_user'})
	{
		main::_log("user with login '$env{'login'}' exists");
		my $pass=$user{'pass'};
		if ($pass=~/^MD5:/)
		{
			$env{'pass'}='MD5:'.md5_hex(Encode::encode_utf8($env{'pass'}));
			main::_log("pass='$env{'pass'}'");
		}
		elsif ($pass=~/^SHA1:/)
		{
			$env{'pass'}='SHA1:'.sha1_hex(Encode::encode_utf8($env{'pass'}));
			main::_log("pass='$env{'pass'}'");
		}
		
		main::_log("vlozeny pass='$env{'pass'}' a povodny pass='$pass'");
		
		if ($pass eq $env{'pass'} || $forcelogin)
		{
			%main::USRM=%user;
			$var=1;
		}
	}
	else
	{
		main::_log("user with login '$env{'login'}' does not exist");
		#$XSGN{'TMP'}=$XSGN{'ERR_no-user'};
		$tpl_hash{'error'} = 'ERR_no-user';

		$TPL->variables_push(\%tpl_hash);
		return 1;
	}
	
	
	
	if ($var)
	{
		main::_log("login and password equals");
		
		if ($TOM::CACHE_memcached)
		{
			# check for actual data in memcached
			# if yes, use it
			
			# delete this data, use only database
			$Ext::CacheMemcache::cache->delete(
				'namespace' => "a301_online",
				'key' => $tom::H_cookie.':'.$main::USRM{'ID_user'},
			);
		}
		
		my %sth0=TOM::Database::SQL::execute(qq{
			SELECT
				*
			FROM
				TOM.a301_user_online_view
			WHERE
				ID_user='$main::USRM{'ID_user'}'
			LIMIT 1
		});
		if (my %user=$sth0{'sth'}->fetchhash())
		{
			main::_log("I'm already online");
			
			# archive old session
			App::301::session::archive($user{'ID_user'},'reset'=>1);
			
			if ($user{'logged'} eq "Y")
			{
				main::_log("I'm online, and logged in, also reset session");
				main::_log("I'm already logged (ID_user='$main::USRM{'ID_user'}')",undef,2);
				
				$main::USRM{'logged'}="Y";
				# just empty
				foreach (keys %main::COOKIES){next if $_ eq "key";$main::COOKIES{$_}=""};
				
				main::_log("login and pass equals, logging again",undef,2);
				
				# enter into authorized session
				$main::USRM{'ID_session'}=$main::COOKIES{'_ID_session'}=$user{'ID_session'};
				
				$main::COOKIES{'_ID_user'}=$main::USRM{'ID_user'};
				$main::USRM{'cookies'}=$user{'saved_cookies'};
				$main::USRM{'session'}=$user{'saved_session'}; # use session variables from authorized session
				
				TOM::Database::SQL::execute(qq{
					UPDATE
						TOM.a301_user_online
					SET
						domain='$tom::H',
						logged='Y',
						datetime_request=FROM_UNIXTIME($main::time_current),
						IP='$main::ENV{'REMOTE_ADDR'}',
						user_agent='$main::ENV{'HTTP_USER_AGENT'}',
						status='Y'
					WHERE
						ID_user='$main::COOKIES{'_ID_user'}'
					LIMIT 1
				},'quiet'=>1);
				
				#$XSGN{'TMP'}=$XSGN{'logged-on'};
				$tpl_hash{'logged-on'} = 'Y';

				$main::USRM_flag="L";
			}
			else
			{
				main::_log("I'm online, but not logged in");
				
				TOM::Database::SQL::execute(qq{
					UPDATE
						TOM.a301_user_online
					SET
						status='N'
					WHERE
						ID_user='$main::COOKIES{'_ID_user'}'
					LIMIT 1
				},'quiet'=>1);
				$main::USRM{'logged'}="Y";
				foreach (keys %main::COOKIES){$main::COOKIES{$_}=""};
				$main::USRM{'ID_session'}=$main::COOKIES{'_ID_session'}=TOM::Utils::vars::genhash(32);
				$main::COOKIES{'_ID_user'}=$main::USRM{'ID_user'};
				
				$main::USRM{'cookies'}=$main::USRM{'saved_cookies'};
				$main::USRM{'session'}=$main::USRM{'saved_session'};
				
#				my %hash;foreach (sort keys %main::COOKIES){$_=~/^_/ && do {$hash{$_}=$main::COOKIES{$_};next}};
#				$main::USRM{'cookies'}=CVML::structure::serialize(%hash);
				
				TOM::Database::SQL::execute(qq{
					UPDATE
						TOM.a301_user_online
					SET
						ID_session='$main::USRM{'ID_session'}',
						domain='$tom::H',
						logged='Y',
						datetime_login=FROM_UNIXTIME($main::time_current),
						datetime_request=FROM_UNIXTIME($main::time_current),
						IP='$main::ENV{'REMOTE_ADDR'}',
						user_agent='$main::ENV{'HTTP_USER_AGENT'}',
						cookies='$main::USRM{'saved_cookies'}',
						session='$main::USRM{'saved_session'}',
						status='Y'
					WHERE
						ID_user='$main::COOKIES{'_ID_user'}'
					LIMIT 1
				},'quiet'=>1);
				
			}
			
		}
		else # niesom este online (malo pravdepodobny pripad :)))
		# prisiel som k cudziemu pocitacu a logujem sa tam
		{
			main::_log("I'm not online");
			TOM::Database::SQL::execute(qq{
				UPDATE
					TOM.a301_user_online
				SET
					status='N'
				WHERE
					ID_user='$main::USRM{'ID_user'}'
				LIMIT 1
			},'quiet'=>1);
			$main::USRM{'logged'}="Y";
			foreach (keys %main::COOKIES){$main::COOKIES{$_}=""};
			my $cvml=new CVML(data=>$main::USRM{'cookies'});
			%main::COOKIES=%{$cvml->{'hash'}};
			$main::COOKIES{'_ID_session'}=$main::USRM{'ID_session'}=TOM::Utils::vars::genhash(32);
			$main::COOKIES{'_ID_user'}=$main::USRM{'ID_user'};
			
			$main::USRM{'cookies'}=$main::USRM{'saved_cookies'};
			$main::USRM{'session'}=$main::USRM{'saved_session'};
			
#			my %hash;foreach (sort keys %main::COOKIES){$_=~/^_/ && do {$hash{$_}=$main::COOKIES{$_};next}};
#			$main::USRM{'cookies'}=CVML::structure::serialize(%hash);
			
			main::_log("insert user into online table");
			
			TOM::Database::SQL::execute(qq{
				INSERT INTO TOM.a301_user_online
				(
					ID_user,
					ID_session,
					domain,
					logged,
					datetime_login,
					datetime_request,
					requests,
					IP,
					user_agent,
					cookies,
					session
				)
				VALUES
				(
					'$main::COOKIES{_ID_user}',
					'$main::COOKIES{_ID_session}',
					'$tom::H',
					'$main::USRM{logged}',
					FROM_UNIXTIME($main::time_current),
					FROM_UNIXTIME($main::time_current),
					'1',
					'$main::ENV{'REMOTE_ADDR'}',
					'$main::ENV{'HTTP_USER_AGENT'}',
					'$main::USRM{'saved_cookies'}',
					'$main::USRM{'saved_session'}'
				)
			},'quiet'=>1);
			
		}
		
		#$XSGN{'TMP'}=$XSGN{'logged-on'};
		$tpl_hash{'logged-on'} = 'Y';
	
		$main::USRM_flag="L";
		TOM::Database::SQL::execute(qq{
			UPDATE
				TOM.a301_user
			SET
				datetime_last_login = FROM_UNIXTIME($main::time_current),
				autolog = 'N'
			WHERE
				ID_user='$main::USRM{'ID_user'}'
			LIMIT 1
		},'quiet'=>1);
		
	}
	else
	{
		main::_log("incorrect login/password combination");
		#$XSGN{'TMP'}=$XSGN{'ERR_user-pass'};
		$tpl_hash{'error'} = 'ERR_user-pass';
	}
	
	foreach my $key(keys %main::USRM)
	{
		#$XSGN{'TMP'}=~s|<%$key%>|$main::USRM{$key}|g;
		$tpl_hash{'key'} = $main::USRM{$key};
	}
	
	main::_log("Logged on='".$main::USRM{'logged'}."'");
	
	if ($main::USRM{'logged'} eq "Y" && $env{'url'})
	{
		$main::location=$env{'url'};
		if ($env{'url_session'})
		{
			if ($main::location=~/\/$/)
			{
				$main::location.='?ID_session='.$main::USRM{'ID_session'}.'&ID_user='.$main::USRM{'ID_user'};
			}
			else
			{
				$main::location.='&ID_session='.$main::USRM{'ID_session'}.'&ID_user='.$main::USRM{'ID_user'};
			}
		}
	}
	
	$TPL->variables_push(\%tpl_hash);
	return 1
}


1;
