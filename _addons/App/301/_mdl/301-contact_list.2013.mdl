#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;


use App::210::_init;
use App::301::_init;


sub execute
{
	my %env=@_;
	my %env_out;
	
#	$env{'check_image_file'} = 1 unless exists $env{'check_image_file'};
#	$env{'image_format.ID'} = $App::501::image_format_fullsize_ID unless $env{'image_format.ID'};
	
	# paging
	$env{'page_limit'} = 10 unless $env{'page_limit'};
	$env{'page'} = 1 unless $env{'page'};
	$env{'page_offset'} = 0 unless $env{'page_offset'};
	$env{'page_plus'} = 1 unless $env{'page_plus'};
	if (!$env{'sql_limit'})
	{
		$env{'sql_limit'}=((($env{'page'}-1)*$env{'page_limit'})+$env{'page_offset'}).",".($env{'page_limit'}+$env{'page_plus'});
	}
	else
	{
#		$env{'sql_limit'}=~/^(\d+),?(\d+)?$/;
		
	}
	
	my @sql_bind;
	my $sql_where;
	my $sql_changetime;
	my $sql_limit=$env{'sql_limit'} || 10;
	my $sql_order_by=$env{'sql_order_by'} || '`user_profile`.`surname` ASC, `user_profile`.`firstname` ASC';
	my $sql_group_by;
	
	$sql_where.=" AND `user`.`hostname`=?";
	push @sql_bind, $tom::H_cookie;
	
	if ($env{'unique'})
	{
		$sql_group_by="`user`.`ID_user`";
	}
	
	if ($env{'contact_cat.ID_entity'})
	{
		my $sql_cat;
		foreach my $ID_category (split(';',$env{'contact_cat.ID_entity'}))
		{
			next unless $ID_category;
			if ($ID_category=~s/\*$//)
			{
				my $cat_sql=qq{SELECT `ID_charindex` FROM `$App::301::db_name`.`a301_contact_cat` WHERE `ID_entity`=$ID_category AND `status` IN ('Y','L') LIMIT 1};
				$ID_category=qq{SELECT `ID_entity` FROM `$App::301::db_name`.`a301_contact_cat` WHERE `ID_charindex` LIKE CONCAT(($cat_sql),"%") AND `status` IN ('Y','L')};
			}
			$sql_cat.=" OR `contact_rel_cat`.`ID_category` IN ($ID_category)";
			$sql_cat=~s/^ OR //;
		}
		if ($sql_cat)
		{
			$sql_where.=" AND (".$sql_cat.") ";
		}
	}
	
=head1
	if ($env{'solr'})
	{
		$env{'solr.defType'} = 'edismax' unless $env{'solr.defType'};
		$env{'solr.rows'} = 10 unless $env{'solr.rows'};
		$env{'solr.start'} = 0 unless $env{'solr.start'};
		$env{'solr.qf'} = "title name name_partial cat_name_sm^0.2 cat_name_tm^0.2 description^0.8 keywords^2 text^0.5" unless $env{'solr.qf'};
		
		if ($env{'solr.keywords'})
		{
			my $query=$env{'solr.keywords'};
			1 while ($query=~s|  | |g);
			$query=~s|^ ||g;
			$query=~s| $||g;
			my @query_part=split(' ',$query);$query='';
			my $part_last;
			foreach my $part(@query_part){
				$part=~s|\-|\\-|g;
				$query.="$part AND ";
				$part_last=$part;
			}
			$query=~s| AND $part_last AND $| AND ($part_last OR $part_last*)|;
			$query=~s|^$part_last AND $|$part_last OR $part_last*|;
			$query=~s| AND $||;
			$env{'solr.q'}="AND (".$query.")";
		}
		
		if ($env{'solr.related_keywords'})
		{
			my $query=$env{'solr.related_keywords'};
			1 while ($query=~s|  | |g);
			$query=~s|^ ||g;
			$query=~s| $||g;
			my @query_part=split(' ',$query);$query='';
			my $part_last;
			foreach my $part(@query_part){
				$part=~s|\-|\\-|g;
				$query.="$part ";
				$part_last=$part;
			}
			$query=~s| $||;
			$env{'solr.q'}="AND (".$query.")";
		}
		
		use Ext::Solr::_init;
		my $solr = Ext::Solr::service();
		
		my $response = $solr->search('+id:'.($App::510::db_name).'.a510_video.'.$env{'lng'}.'.* '.$env{'solr.q'},
			{
				'-cluster' => 1,
				
				'defType' => $env{'solr.defType'},
				
				'rows' => $env{'solr.rows'},
				'start' => $env{'solr.start'},
				
#				'mm' => $env{'solr.mm'},
#				'tie' => $env{'solr.tie'} || 1.0,
				'bq' => $env{'solr.bq'},
				'qf' => $env{'solr.qf'},
				'fl' => "id ID_i ID_entity_i score ".$env{'solr.fl'},
#				'hl' => "true" ,
#				'hl.fl' => "title name name_partial description",
#				'hl.fragsize' => "80"
			}
		);
		
		$env{'video.ID_entity'}="";
		for my $doc ( $response->docs )
		{
#			my $id=$doc->value_for('id');
#			my $ID_entity=$doc->value_for('ID_entity_i');
			$env{'video.ID_entity'}.=$doc->value_for('ID_entity_i').";";
		}
		
	}
=cut
	
=head1
	if ($env{'video.ID_entity'}=~/;/)
	{
		$sql_where.=" AND video.ID_entity IN (".join(',',split(';',$env{'video.ID_entity'})).")";
		$sql_limit=scalar split(';',$env{'video.ID_entity'});
		if ($env{'solr'})
		{
			$sql_group_by="video.ID_entity";
			$sql_order_by="CASE\n";
			my $i;
			foreach (split(';',$env{'video.ID_entity'}))
			{
				$i++;
				$sql_order_by.="\t\t\t\tWHEN video.ID_entity=$_ THEN $i\n";
			}
			$sql_order_by.="\t\t\tEND";
		}
	}
=cut
	
   if ($env{'user.ID_user'})
	{
		$sql_where.=" AND `user`.`ID_user` IN ('".join('\',\'',split(';',$env{'user.ID_user'}))."')";
		$sql_limit=scalar split(';',$env{'user.ID_user'});
	}
	
   if ($env{'user_profile.ID'})
	{
		$sql_where.=" AND `user_profile`.`ID_user` IN ('".join('\',\'',split(';',$env{'user_profile.ID'}))."')";
		$sql_limit=scalar split(';',$env{'user_profile.ID'});
	}

	$sql_where.=" AND ".$env{'sql_where'} if $env{'sql_where'};
	
	$sql_where=~s|^ ||;
	
	# get template
	Tomahawk::GetTpl('env' => \%env) || return undef;
	
#	return 1 unless $sql_where;
	
	my $i;
	my %sth0=TOM::Database::SQL::execute(qq{
		SELECT
			`user`.`hostname`,
			
			`contact_cat`.`ID_entity` AS `cat_ID_entity`,
			`contact_cat`.`name` AS `cat_name`,
			
			`user`.`ID_user`,
			`user`.`login`,
			`user`.`pass`,
			`user`.`email`,
			`user`.`status`,
			`user`.`datetime_register`,
			`user`.`datetime_last_login`,
			
			`user_profile`.`ID`,
			`user_profile`.`ID_entity`,
			`user_profile`.`PIN`,
			`user_profile`.`firstname`,
			`user_profile`.`middlename`,
			`user_profile`.`surname`,
			`user_profile`.`name_prefix`,
			`user_profile`.`name_suffix`,
			`user_profile`.`gender`,
			`user_profile`.`country_code`,
			`user_profile`.`date_birth`,
			`user_profile`.`city`,
			`user_profile`.`ZIP`,
			`user_profile`.`street`,
			`user_profile`.`street_num`,
			`user_profile`.`address_postal`,
			`user_profile`.`about_me`,
			`user_profile`.`note`,
			`user_profile`.`metadata`,
			
			`user_profile`.`phone`,
			`user_profile`.`phone_office`,
			`user_profile`.`phone_home`,
			`user_profile`.`phone_mobile`,
			
			`user_profile`.`phys_weight`,
			`user_profile`.`phys_height`,
			
			`user_profile`.`date_birth`,
			`user_profile`.`birth_place`,
			`user_profile`.`bank_contact`,
			`user_profile`.`passport_num`,
			`user_profile`.`idcard_num`,
			`user_profile`.`education`,
			
			`contact_lng`.`name_long`,
			`contact_lng`.`description`
			
		FROM
			`$App::301::db_name`.`a301_user` AS `user`
		INNER JOIN `$App::301::db_name`.`a301_user_profile` AS `user_profile` ON
		(
			`user_profile`.`ID_entity` = `user`.`ID_user`
		)
		LEFT JOIN `$App::301::db_name`.`a301_contact_rel_cat` AS `contact_rel_cat` ON
		(
			`user`.`ID_user` = `contact_rel_cat`.`ID_user`
		)
		LEFT JOIN `$App::301::db_name`.`a301_contact_cat` AS `contact_cat` ON
		(
					`contact_cat`.`ID` = `contact_rel_cat`.`ID_category`
			AND	`contact_cat`.`status` IN ('Y','L')
		)
		LEFT JOIN `$App::301::db_name`.`a301_contact_lng` AS `contact_lng` ON
		(
					`contact_lng`.`ID_entity` = `user`.`ID_user`
			AND	`contact_lng`.`lng` = '$env{'lng'}'
		)
		WHERE
			`user`.`status` IN ('Y','L')
			$sql_where}.do{if($sql_group_by){qq{
		GROUP BY
			$sql_group_by}}}.qq{
		ORDER BY
			$sql_order_by
		LIMIT
			$sql_limit
	},'bind'=>[@sql_bind],'log'=>1,'-slave'=>1,
		'-changetime'=>App::020::SQL::functions::_get_changetime(
			{
				'db_h'=>"main",
				'db_name' => $App::301::db_name,
				'tb_name' => "a301_user"
			}),
	);
	
	$TPL->{'variables'}->{'rows'}=$sth0{'rows'};
	while (my %user=$sth0{'sth'}->fetchhash())
	{
		$i++;
		last if $i > $env{'page_limit'};
		
		main::_log("[$i/$env{'page_limit'}] found user.ID_user=$user{'ID_user'}");
		
		push @{$env_out{'entity'}},{
			'db_h' => 'main',
			'db_name' => $App::301::db_name,
			'tb_name' => 'a301_user',
			'ID_entity' => $user{'ID_user'}
		};
		
		$user{'related_avatar'}=(App::160::SQL::get_relations(
			'db_name' => $App::301::db_name,
			'l_prefix' => 'a301',
			'l_table' => 'user',
			'l_ID_entity' => $user{'ID_user'},
			'rel_type' => "avatar",
			'r_prefix' => "a501",
			'r_table' => "image",
			'status' => "Y",
			'limit' => 1
		))[0];
		
=head1
		# link to a210_page
		if (my $category=App::510::functions::_a210_by_cat([$video{'cat_ID'}],'lng'=>$env{'lng'}))
		{
			my %sql_def=('db_h' => "main",'db_name' => $App::210::db_name,'tb_name' => "a210_page");
			foreach my $p(
				App::020::SQL::functions::tree::get_path(
					$category,
					%sql_def,
					'-slave' => 1,
					'-cache' => 86400*7
				)
			)
			{
				push @{$video{'a210'}{'IDs'}}, $p->{'ID'};
				push @{$video{'a210'}{'nodes'}}, $p;
				$video{'a210'}{'path_url'}.="/".$p->{'name_url'};
			}
			$video{'a210'}{'path_url'}=~s|^/||;
		}
=cut
		
		push @{$TPL->{'variables'}{'items'}},\%user;
	}
	
	return 1,%env_out;
}

1;
