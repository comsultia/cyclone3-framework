#!/usr/bin/env c3-job
package Cyclone3::job;
use parent 'TOM::Engine::job::module';
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;

use Utils::datetime;

use App::301::_init;

sub execute
{
	my $self=shift;
	my $env=$self->env;
	return if $self->running({'max'=>3600}); # check if not already running
	
	main::_log("removing old karma");
	my %sth0=TOM::Database::SQL::execute(qq{
		DELETE
		FROM TOM.a301_user_profile_karma
		WHERE date_event <= DATE_SUB(NOW(),INTERVAL 31 DAY)
	}
	,'quiet'=>1);
	main::_log(" removed $sth0{'rows'} items");
	
	
	main::_log("removing old emo");
	my %sth0=TOM::Database::SQL::execute(qq{
		DELETE
		FROM TOM.a301_user_profile_emo
		WHERE date_event <= DATE_SUB(NOW(),INTERVAL 31 DAY)
	}
	,'quiet'=>1);
	main::_log(" removed $sth0{'rows'} items");
	
	
	my $tr=new TOM::Database::SQL::transaction('db_h'=>'main');
		
		main::_log("removing expired anonymous users (6 months inactive)");
		my $est=1;
		while ($est)
		{
			my %sth0=TOM::Database::SQL::execute(qq{
				DELETE
				FROM TOM.a301_user_inactive
				WHERE
					datetime_last_login <= DATE_SUB(CURDATE(),INTERVAL 6 MONTH)
				LIMIT 100
			}
			,'quiet'=>1);
			main::_log(" removed $sth0{'rows'} items");
			$est=$sth0{'rows'};
		}
		
		main::_log("removing deadway anonymous users (3 days inactive, <=2 requests)");
		my $est=1;
		while ($est)
		{
			my %sth0=TOM::Database::SQL::execute(qq{
				SELECT
					ID_user,
					requests_all
				FROM TOM.a301_user_inactive
				WHERE
					datetime_last_login <= DATE_SUB(CURDATE(),INTERVAL 3 DAY)
					AND requests_all<=2
				LIMIT 1000
			}
			,'quiet'=>1);
			$est=$sth0{'rows'};
			main::_log(" removing $sth0{'rows'} items");
			while (my %db0_line=$sth0{'sth'}->fetchhash())
			{
				TOM::Database::SQL::execute(qq{
					DELETE FROM TOM.a301_user_inactive
					WHERE ID_user='$db0_line{'ID_user'}'
					LIMIT 1;
				},'quiet'=>1,'-backend_'=>1);
			}
		}
		
		main::_log("removing inactive anonymous users (1 month inactive, <=10 requests)");
		my $est=1;
		while ($est)
		{
			my %sth0=TOM::Database::SQL::execute(qq{
				SELECT
					ID_user,
					requests_all
				FROM TOM.a301_user_inactive
				WHERE
					datetime_last_login <= DATE_SUB(CURDATE(),INTERVAL 1 MONTH)
					AND requests_all<=10
				LIMIT 1000
			}
			,'quiet'=>1);
			$est=$sth0{'rows'};
			main::_log(" removing $sth0{'rows'} items");
			while (my %db0_line=$sth0{'sth'}->fetchhash())
			{
				TOM::Database::SQL::execute(qq{
					DELETE FROM TOM.a301_user_inactive
					WHERE ID_user='$db0_line{'ID_user'}'
					LIMIT 1;
				},'quiet'=>1,'-backend_'=>1);
			}
		}
		
		main::_log("removing old sessions 1 month");
		my $est=1;
		while ($est)
		{
			my %sth0=TOM::Database::SQL::execute(qq{
				DELETE
				FROM TOM.a301_user_session
				WHERE datetime_session_begin <= DATE_SUB(NOW(),INTERVAL 1 MONTH)
				LIMIT 1000
			}
			,'quiet'=>1);
			$est=$sth0{'rows'};
			main::_log(" removed $sth0{'rows'} items");
		}
		
		main::_log("removing innecessary sessions 1 DAY (<=3 request)");
		my $est=1;
		while ($est)
		{
			my %sth0=TOM::Database::SQL::execute(qq{
				DELETE
				FROM TOM.a301_user_session
				WHERE
					datetime_session_begin <= DATE_SUB(NOW(),INTERVAL 1 DAY)
					AND requests_all <= 3
				LIMIT 1000
			},'quiet'=>1);
			$est=$sth0{'rows'};
			main::_log(" removed $sth0{'rows'} items");
		}
		
		main::_log("removing sessions of removed users");
		my $est=1;
		while ($est)
		{
			my %sth0=TOM::Database::SQL::execute(qq{
				SELECT
					session.ID_user
				FROM
					TOM.a301_user_session AS session
				LEFT JOIN TOM.a301_user AS user_orig ON
				(
					session.ID_user = user_orig.ID_user
				)
				LEFT JOIN TOM.a301_user_inactive AS user_inactive ON
				(
					session.ID_user = user_inactive.ID_user
				)
				WHERE
					user_orig.ID_user IS NULL AND
					user_inactive.ID_user IS NULL
				LIMIT 1000
			}
			,'quiet'=>1);
			$est=$sth0{'rows'};
			main::_log(" removing $sth0{'rows'} items");
			while (my %db0_line=$sth0{'sth'}->fetchhash())
			{
				TOM::Database::SQL::execute(qq{
					DELETE FROM TOM.a301_user_session
					WHERE ID_user='$db0_line{'ID_user'}'
				},'quiet'=>1,'-backend_'=>1);
			}
		}
		
	$tr->close();
	
return 1}
1;
