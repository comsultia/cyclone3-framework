#!/bin/perl
# ÁÉÍÓÚ - USE UTF-8 !!!
package CRON::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

=head1 NAME

130-control.forms.cron

=head1 DESCRIPTION

This cron can be used to control if email from web form has come. But now it is not used.

There are no inputs or dependencies.

=cut

# tento cron kontroluje emaily ulozene v databaze, pochadzajuce z adresy forms@webcom.sk
sub execute
{
	my %env=@_;
	main::_log("130 FORMS CONTROL");
	
	# casy
	# skorigujem cas - nastavim na 0:0:0
	my $time_current = $main::time_current;
	my %tm_correct = Utils::datetime::ctodatetime($time_current,format=>1);
	my $time_correct = $time_current-($tm_correct{hour}*3600+$tm_correct{min}*60+$tm_correct{sec});

	# time (one week) back to control
	my $time = $time_correct - (86400 * 7);

	# tento cront je striktne 7day
	my $db0 = $main::DBH->Query("
	SELECT
		ID,
		name,
		domain,
		domain_sub,
		time_last,
		time_change
	FROM
		TOM.a130_services
	ORDER by domain ASC, domain_sub ASC
	");
	
	my %services;
	while (my %db0_line = $db0->fetchhash)
	{
		my $path = "$db0_line{domain}/$db0_line{domain_sub}/$db0_line{name}";

		main::_log(5, $path);
		
		$services{$path}{count} = 0;
		$services{$path}{ID} = $db0_line{ID};
	}
	
	my $db0 = $main::DBH->Query("
	SELECT
		rectime,
		body
	FROM
		TOM.a130_received
	WHERE
		rectime>$time
	ORDER BY rectime DESC");
	
	# prejdem si databazove emaily
	while (my %db0_line = $db0->fetchhash)
	{
		if ($db0_line{body} =~ /X-SERVICE: (.*?)\n/)
		{
			my $service = $1; $db0_line{body} =~ /X-DOMAIN: (.*?)\n/;
			my $domain = $1; $db0_line{body} =~ /X-DOMAIN-SUB: (.*?)\n/;
			my $domain_sub = $1;
			
			my $path = "$domain/$domain_sub/$service";
			
			# zapocitam mail a nastavim cas
			$services{$path}{count}++;
		}
	}
	
	
	# prejdem si spracovane info a updatnem databazu, pripadne rozoslem chybove emaily
	$env{err_message}=<<"HEADER";
From: a130-forms <dev\@webcom.sk>
To: <%email%>
Subject: [FORMS] Ziadny novy mail (<%service%>/<%domain_sub%>)

Toto je automaticky generovany email aplikacie na kontrolu formularov.
Z formularu <%service%> v domene <%domain_sub%> uz 7 dni neprisiel ziadny email.
HEADER

	$env{new_message}=<<"HEADER";
From: a130-forms <dev\@webcom.sk>
To: <%email%>
Subject: [FORMS] Novy formular (<%service%>/<%domain_sub%>)

Toto je automaticky generovany email aplikacie na kontrolu formularov.
Zaregistroval som novy formular <%service%> z domeny <%domain_sub%>
HEADER

	my %query;
	my @err_services;
	foreach my $serv_path (keys %services)
	{
		#$serv_path =~ /([^\/]+)\/([^\/]+)\/(.+)/;
		$serv_path =~ /^(.*)\/(.*)\/(.*)$/;
		main::_log(7, $serv_path);
		
		my $service = $3; my $domain = $1; my $domain_sub = $2;

		$env{err_db_email} = get_db_email($domain); $env{new_db_email} = $env{err_db_email};
		$env{err_email} = get_body_email($env{err_db_email}); $env{new_email} = $env{err_email};
		
		if (!$services{$serv_path}{count})
		{
			main::_log(6, "Service $serv_path - possible damaged");
			main::_log(7, "Sending email to $env{err_email}");

			$env{tmp_message} = $env{err_message};
			$env{db_email} = $env{err_db_email};
			
			$env{tmp_message} =~ s|<%email%>|$env{err_email}|g;
			$env{tmp_message} =~ s|<%service%>|$service|g;
			$env{tmp_message} =~ s|<%domain%>|$domain|g;
			$env{tmp_message} =~ s|<%domain_sub%>|$domain_sub|g;

			$query{'send'} = "
			INSERT INTO TOM.a130_send
			(
				sendtime,
				priority,
				from_name,
				from_email,
				from_host,
				from_service,
				to_name,
				to_email,
				body)
			VALUES	(
				'$cron::time_current',
				'5',
				'CRON',
				'info\@webcom.sk',
				'server1.webcom.sk',
				'a130-forms',
				'',
				'$env{db_email}',
				'$env{tmp_message}'
			)";

			#main::_log( $query{'send'} );
			$main::DBH->Query( $query{'send'} );
		}
		
		if (!$services{$serv_path}{ID})
		{
			# nova sluzba
			main::_log(6, "Got new service $service - $domain - $domain_sub");
			main::_log(7, "Sending email to $env{new_email}");

			$env{tmp_message} = $env{new_message};
			$env{db_email} = $env{new_db_email};
			
			$env{tmp_message} =~ s|<%email%>|$env{new_email}|g;
			$env{tmp_message} =~ s|<%service%>|$service|g;
			$env{tmp_message} =~ s|<%domain%>|$domain|g;
			$env{tmp_message} =~ s|<%domain_sub%>|$domain_sub|g;

			$query{'send'} = "
			INSERT INTO TOM.a130_send
			(
				sendtime,
				priority,
				from_name,
				from_email,
				from_host,
				from_service,
				to_name,
				to_email,
				body)
			VALUES	(
				'$cron::time_current',
				'0',
				'CRON',
				'info\@webcom.sk',
				'server1.webcom.sk',
				'a130-forms',
				'',
				'$env{db_email}',
				'$env{tmp_message}'
			)";

			#main::_log( $query{'send'} );
			$main::DBH->Query( $query{'send'} );

			$query{'services'} = "
				INSERT INTO TOM.a130_services
				(
					name,
					domain,
					domain_sub,
					email_count,
					time_last,
					time_create,
					time_change,
					active,
					lng
				)
				values
				(
					'$service',
					'$domain',
					'$domain_sub',
					$services{$serv_path}{count},
					$cron::time_current,
					$cron::time_current,
					$cron::time_current,
					'Y',
					'sk'
				)
			";

			#main::_log( $query{'services'} );
			$main::DBH->Query( $query{'services'} );
		}
		else
		{
			# sluzbu uz poznam
			$query{'services_update'} = "
				UPDATE TOM.a130_services
				SET
					email_count=email_count+$services{$serv_path}{count},
					time_last=$cron::time_current,
					time_change=$cron::time_current
				WHERE
					ID=$services{$serv_path}{ID}
				LIMIT 1
			";
			
			#main::_log( $query{'services_update'} );
			$main::DBH->Query( $query{'services_update'} );
		}
	}
	
	return 1;

	# ----------------- FUNKCIE -----------------

	# spoji emaily bodkociarkami (;) na zaklade local.conf do stringu
	# parametre
	# - nazov domeny (napr.: webcom.sk) POVINNY
	# - ktore emaily to ma zaradit (napr.: manager;DEV;WEB)
	sub get_db_email
	{
		return undef unless $_[0];
		my $return;
		
		my $domain = $_[0];
		# TODO: Z markizackych projektov nemam emaily - teraz je natvrdo nemsak
		return 'nemsak@webcom.sk' if $domain =~ /markiza/;
		
		my $positions = ($_[1])?($_[1]):('manager;WEB');

		my $conf = `tom3-config_team --domain=$domain`;
		foreach my $val ( split "\n", $conf )
		{
			next unless $val =~ /^\[ (\w+)\s+\] \[ \[ ([\w\@;\.-]+)\s+\]/;
			my $position = $1; my $email = $2;
			if ( $positions =~ /(^|;)$position(;|$)/ )
			{
				$return .= ';' if $return;
				$return .= $email;
			}
		}
		return $return;
	}

	# emaily oddelene bodkociarkami skonvertuje do tvaru (<...>,<...>)
	# parametre
	# - emaily oddelene bodkociarkami (1 string)
	sub get_body_email
	{
		return undef unless $_[0];
		my $return = $_[0]; $return =~ s|;|>,<|g; $return = "<$return>";
		return $return;
	}

}

our $authors = 'matej.gregor@comsultia.com';

=head1 AUTHOR

Matej Gregor (matej.gregor@comsultia.com)

=cut

1;

