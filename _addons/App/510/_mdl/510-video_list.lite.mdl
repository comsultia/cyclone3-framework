#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;



=head1 NAME

510-video_list.lite.mdl

=head1 DESCRIPTION

Lite list of videos. Optimal to display gallery of thumbnails

=head1 DEPENDS

=over

=item *

L<App::510::_init|app/"510/_init.pm">

=back

=cut

use App::510::_init;



=head1 INPUTS

=over

=item *

B<db_name> - database name

=item *

B<video_attrs.status> - required status (default 'Y')

=item *

B<video_attrs.lng> - required language (default is current)

=item *

B<video_file.ID_format> - ID of video format to display (image_format.ID)

=item *

B<video_format.name> - name of video format to display (image_format.name)

=item *

B<sql_limit> - limit to display (default '1')

=back

=cut



=head1 XSGN

=over

=item *

B<TMP> - default

=item *

B<#item#> - gateway to image item

=item *

B<item> - image item

=item *

B<%ID%> - image ID

=item *

B<%ID_entity%> - image ID_entity

=item *

B<%name%> - image name

=back

=cut



sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN('-convertvars'=>1) || return undef;
	
	if (!$env{'video_file.ID_format'})
	{
		$env{'video_file.ID_format'}=$App::510::video_format_full_ID;
	}
	
#	$env{'video.ID_category'}=1 unless exists $env{'video.ID_category'};
#	if ($env{'video.ID_category'} == 0)
#	{
#		delete $env{'video.ID_category'};
#	}
	
#	$env{'image_format.name'}="thumbnail" unless $env{'image_format.name'};
	
	$env{'video_attrs.lng'}=$env{'lng'} unless $env{'video_attrs.lng'};
	$env{'video_attrs.status'}='Y' unless $env{'video_attrs.status'};
	$env{'sql_limit'}='10' unless $env{'sql_limit'};
	$env{'video_part_callback.state'}='completed' unless $env{'video_part_callback.state'};
	
	$env{'sql_order_by'}='video.datetime_rec_start DESC' unless $env{'sql_order_by'};
	
	if ($env{'sql_limit'}=~/^,/){$env{'sql_limit'}="0".$env{'sql_limit'};}
	if ($env{'sql_limit'}=~/^0,/ && $env{'sql_limit_start'})
	{
		$env{'sql_limit'}=~s/^(\d+),/$1+$env{'sql_limit_start'}.","/e;
	}
	
	my $sql_where;
	
	my $sql_cat;
	foreach my $ID_category(split(';',$env{'video_attrs.ID_category'}))
	{
		next unless $ID_category;
		if ($ID_category=~s/\*$//)
		{
			my $cat_sql=qq{
						SELECT
							ID_charindex
						FROM
							`$App::510::db_name`.a510_video_cat
						WHERE
							ID_entity=$ID_category AND
							lng='$env{'video_attrs.lng'}' AND
							status IN ('Y','L')
						LIMIT 1
			};
			$ID_category=qq{
				SELECT
					ID_entity
				FROM
					`$App::510::db_name`.a510_video_cat
				WHERE
					ID_charindex LIKE CONCAT(($cat_sql),"%") AND
					lng='$env{'video_attrs.lng'}' AND
					status IN ('Y','L')
			};
		}
		$sql_cat.=" OR video_attrs.ID_category IN ($ID_category)";
		$sql_cat=~s/^ OR //;
	}
	if ($sql_cat)
	{
		$sql_where.=" AND (".$sql_cat.") ";
	}
	
#	if ($env{'video_file.ID_format'})
#	{
#		$sql_where.=" AND video_file.ID_format=$env{'video_file.ID_format'}";
#	}
	
	
=head1
	if ($env{'video.ID_entity'})
	{
		
		if ($env{'video.ID_entity'}=~/^(\d+)$/)
		{
			my $sql=qq{
				SELECT
					*
				FROM
					`$App::510::db_name`.a510_video_view AS video
				WHERE
					video.status IN ('$env{'video_attrs.status'}') AND
					video.ID_entity_video = $env{'video.ID_entity'} AND
					video.part_id = 1 AND
					video.lng='$env{'video_attrs.lng'}'
				LIMIT 1
			};
			my %sth0=TOM::Database::SQL::execute($sql,'quiet'=>1,'slave'=>1);
			if (my %db0_line=$sth0{'sth'}->fetchhash())
			{
				main::_log("added video.name='$db0_line{'name'}'");
				$sql_where.=" AND video.name='".TOM::Security::form::sql_escape($db0_line{'name'})."'";
			}
		}
		elsif ($env{'video.ID_entity'}=~/^([\d,]+)$/)
		{
			$sql_where.=" AND ID_entity_video IN ('".
				(join "','", split(',',$env{'video.ID_entity'})).
				"')";
		}
		else
		{
			$XSGN{'TMP'}='';return 1;
		}
		
	}
	elsif ($env{'video.name'})
	{
		main::_log("added video.name LIKE '$env{'video.name'}'");
		$sql_where.=" AND video.name LIKE '".TOM::Security::form::sql_escape($env{'video.name'})."'";
	}
	elsif ($env{'video.name_url'})
	{
		main::_log("added video.name_url LIKE '$env{'video.name_url'}'");
		$sql_where.=" AND video.name_url LIKE '".TOM::Security::form::sql_escape($env{'video.name_url'})."'";
	}
=cut
	
	my $sql_select;
	
	if ($env{'sql_order_by'}=~s|:visits_(.*?):|:VISITS:|)
	{
		my $dur=$1;
		my $sql_visits=qq{(SELECT COUNT(ID_part) FROM $App::510::db_name.a510_video_part_callback AS visit WHERE visit.ID_part=video_part.ID AND datetime_create >= DATE_SUB(NOW(),INTERVAL $dur) AND state='$env{'video_part_callback.state'}')};
		$env{'sql_order_by'}=~s|:VISITS:|$sql_visits|;
		$sql_select=", $sql_visits AS visits_dur ";
	}
	
	if ($env{'sql_where'})
	{
		$sql_where.=" AND ".$env{'sql_where'};
	}
	
	my $sql=qq{
		SELECT
			video.ID_entity AS ID_entity_video,
			video.ID AS ID_video,
			video_attrs.ID AS ID_attrs,
			video_part.ID AS ID_part,
			
			LEFT(video.datetime_rec_start, 16) AS datetime_rec_start,
			LEFT(video_attrs.datetime_create, 16) AS datetime_create,
			LEFT(video.datetime_rec_start,10) AS date_recorded,
			LEFT(video.datetime_rec_stop, 16) AS datetime_rec_stop,
			
			video_attrs.ID_category,
			
			video_ent.posix_owner,
			video_ent.posix_author,
			video_ent.keywords AS video_keywords,
			
			video_ent.movie_catalog_number,
			video_ent.movie_country_code,
			video_ent.movie_imdb,
			video_ent.movie_length,
			video_ent.movie_release_date,
			video_ent.movie_release_year,
			
			video_attrs.name,
			video_attrs.name_url,
			video_attrs.description,
			video_attrs.order_id,
			video_attrs.priority_A,
			video_attrs.priority_B,
			video_attrs.priority_C,
			video_attrs.lng,
			
			video_part.part_id AS part_id,
			video_part.keywords AS part_keywords,
			
			video_part_attrs.name AS part_name,
			video_part_attrs.description AS part_description,
			
			video_attrs.status,
			
			video_cat.name AS ID_category_name,
			video_cat.name_url AS cat_name_url
			$sql_select
			
		FROM
			`$App::510::db_name`.`a510_video` AS video
		LEFT JOIN `$App::510::db_name`.`a510_video_ent` AS video_ent ON
		(
			video_ent.ID_entity = video.ID_entity
		)
		LEFT JOIN `$App::510::db_name`.`a510_video_attrs` AS video_attrs ON
		(
			video_attrs.ID_entity = video.ID
		)
		LEFT JOIN `$App::510::db_name`.`a510_video_part` AS video_part ON
		(
			video_part.ID_entity = video.ID_entity AND
			video_part.part_id=1
		)
		LEFT JOIN `$App::510::db_name`.`a510_video_part_attrs` AS video_part_attrs ON
		(
			video_part_attrs.ID_entity = video_part.ID AND
			video_part_attrs.lng = video_attrs.lng
		)
		LEFT JOIN `$App::510::db_name`.`a510_video_cat` AS video_cat ON
		(
			video_attrs.ID_category = video_cat.ID_entity AND
			video_cat.lng = video_attrs.lng
		)
		WHERE
			video_attrs.lng='$env{'video_attrs.lng'}' AND
			video_attrs.status='$env{'video_attrs.status'}'
			$sql_where
		ORDER BY
			$env{'sql_order_by'}
		LIMIT
			$env{'sql_limit'}
	};
	
	my $item_counter=0;
	
	my %sth0=TOM::Database::SQL::execute($sql,'log'=>1,'slave'=>1);
	while (my %db0_line=$sth0{'sth'}->fetchhash())
	{
		$item_counter++;
		
		my $item = $XSGN{'item'};
		$item = $XSGN{'item.odd'} if (($item_counter % 2) && (exists $XSGN{'item.odd'}));
		$item = $XSGN{'item.'.$item_counter} if $XSGN{'item.'.$item_counter};
		
		$db0_line{'datetime_recorded'}=$db0_line{'datetime_rec_start'};
		$db0_line{'datetime_recorded'}=~s|^(.*):\d\d$|$1|;
		
		my %datetime=TOM::Utils::datetime::datetime_collapse($db0_line{'datetime_rec_start'});
		$db0_line{'datetime_rec_start.year'}=$db0_line{'date_recorded.year'}=$datetime{'year'};
		$db0_line{'datetime_rec_start.month'}=$db0_line{'date_recorded.month'}=$datetime{'month'};
		$db0_line{'datetime_rec_start.mday'}=$db0_line{'date_recorded.mday'}=$datetime{'mday'};
		$db0_line{'datetime_rec_start.hour'}=$datetime{'hour'};
		$db0_line{'datetime_rec_start.min'}=$datetime{'min'};
		$db0_line{'datetime_rec_start.sec'}=$datetime{'sec'};
		
		# video owner in result list
		my %owner=App::301::authors::get_author($db0_line{'posix_owner'});
		$item=~s|<%owner_(.*?)%>|$owner{$1}|g;
		
		# video author in result list
		my %author=App::301::authors::get_author($db0_line{'posix_author'});
		$author{'fullname'}=$author{'surname'};
		$author{'fullname'}=$author{'firstname'}.' '.$author{'fullname'} if $author{'firstname'};
		$author{'fullname_url'}=TOM::Net::URI::rewrite::convert($author{'fullname'});
		$item=~s|<%author_(.*?)%>|$author{$1}|g;
		
=head1
		# count parts visits
		my $sql=qq{
			SELECT
				SUM(visits) AS visits
			FROM
				`$App::510::db_name`.a510_video_part AS video_part
			WHERE
				video_part.ID_entity = $db0_line{'ID_entity_video'}
		};
		my %sth1=TOM::Database::SQL::execute($sql,'quiet'=>1,'slave'=>1);
		my %db1_line=$sth1{'sth'}->fetchhash();
		$db0_line{'visits'}=$db1_line{'visits'};
=cut
		
		if ($db0_line{'movie_country_code'})
		{
			use ISO::3611;
			$db0_line{'movie_country'}=$ISO::3611::code_a2{"\U".$db0_line{'movie_country_code'}};
#			$db0_line{'movie_country'}=$db0_line{'movie_country_code'};
		}
		
		if($item=~/<%db_file_part_path%>/)
		{
			main::_log('---------------------------------------------------------------------------');
			my %db1_line=App::510::functions::get_video_part_file
			(
				'video.ID_entity' => $db0_line{'ID_entity_video'},
				'video_part.part_id' => 1,
				'video_part_file.ID_format' => $env{'video_file.ID_format'},
				'video_attrs.lng' => $env{'video_attrs.lng'}
			);
			$item=~s|<%db_file_part_path%>|$db1_line{'file_part_path'}|g;
			main::_log($db1_line{'file_part_path'});
			main::_log($env{'video_file.ID_format'});
			main::_log($db0_line{'ID_entity_video'});
			main::_log($env{'video_attrs.lng'});
		}
		
		if($item=~/<%db_original_file_part_path%>/)
		{
			my %db1_line=App::510::functions::get_video_part_file
			(
				'video.ID_entity' => $db0_line{'ID_entity_video'},
				'video_part.part_id' => 1,
				'video_part_file.ID_format' => 1,
				'video_attrs.lng' => $env{'video_attrs.lng'}
			);
			$item=~s|<%db_original_file_part_path%>|$db1_line{'file_part_path'}|g;
			$db1_line{'file_size.gb'}=sprintf("%0.2f", ($db1_line{'file_size'} / (1024 * 1024 * 1024)));
			$db1_line{'file_size.mb'}=sprintf("%0.2f", ($db1_line{'file_size'} / (1024 * 1024)));
			$db1_line{'file_size.kb'}=sprintf("%0.2f", ($db1_line{'file_size'} / 1024));
			$item=~s|<%db_original_file_size.gb%>|$db1_line{'file_size.gb'}|g;
			$item=~s|<%db_original_file_size.mb%>|$db1_line{'file_size.mb'}|g;
			$item=~s|<%db_original_file_size.kb%>|$db1_line{'file_size.kb'}|g;
		}
		
		$item=~s|<%db_(.*?)%>|$db0_line{$1}|g;
		
		my $relation=(App::160::SQL::get_relations(
			'db_name' => $App::510::db_name,
			'l_prefix' => 'a510',
			'l_table' => 'video_part',
			'l_ID_entity' => $db0_line{'ID_part'},
			'rel_type' => 'thumbnail',
			'r_db_name' => $App::501::db_name,
			'r_prefix' => 'a501',
			'r_table' => 'image',
			'limit' => 1
		))[0];
		if ($relation->{'ID'})
		{
			$item=~s|<#media#>|$XSGN{'thumbnail'}|g;
			$item=~s|<%image.ID%>|$relation->{'r_ID_entity'}|g;
			my %db1_line=App::501::functions::get_image_file(
				'image.ID_entity' => $relation->{'r_ID_entity'},
				'image_file.ID_format' => $env{'image_format.ID'} || $App::501::image_format_thumbnail_ID,
				'image_attrs.lng' => $env{'lng'}
			);
			$item=~s|<%image.db_(.*?)%>|$db1_line{$1}|g;
		}
		
		
		# count parts length and ratings
		my $sql=qq{
			SELECT
				SEC_TO_TIME(SUM(file.length)) AS length,
				AVG(video_part.rating_score/video_part.rating_votes) AS rating
			FROM
				`$App::510::db_name`.a510_video_part AS video_part
			LEFT JOIN `$App::510::db_name`.a510_video_part_file AS file ON
			(
				file.ID_entity = video_part.ID AND
				file.ID_format = $App::510::video_format_original_ID
			)
			WHERE
				video_part.ID_entity = $db0_line{'ID_entity_video'} AND
				video_part.status IN ('Y','N','L')
		};
		my %sth1=TOM::Database::SQL::execute($sql,'quiet'=>1,'slave'=>1);
		my %db1_line=$sth1{'sth'}->fetchhash();
		$db1_line{'length'}='' if $db1_line{'length'} eq "00:00:00";
		$item=~s|<%length%>|$db1_line{'length'}|g;
		# rating5
		my $rating5=int(($db1_line{'rating'}/20)+0.5);
		$item=~s|<%rating5%>|$rating5|g;
		my $rating55=int($db1_line{'rating'}/20*2)/2;
		$item=~s|<%rating55%>|$rating55|g;
		
		$item=~s|<%item_number%>|$item_counter|g;
		
		if($XSGN{'TMP'}=~/<#item.$item_counter#>/)
		{
			$XSGN{'TMP'}=~s|<#item.$item_counter#>|$item|;
		}
		else
		{
			$XSGN{'TMP'}=~s|<#item#>|$item|;
		}
	}
	
	if (!$item_counter)
	{
		$XSGN{'TMP'}=$XSGN{'TMP-empty'};
	}
	
	if ($env{'sql_limit'}=~/(\d+),(\d+)/)
	{
		$env{'offset'}=$1;
		$env{'count'}=$2;
	}
	else
	{
		$env{'count'}=$env{'sql_limit'};
	}
	
	$env{'page'}=($env{'offset'}/$env{'count'})+1;
	$XSGN{'TMP'}=~s|<%page%>|$env{'page'}|g;
	
	# offset
	if ($env{'count'} && $item_counter >= $env{'count'}) # count
	{
		$XSGN{'next'}=~s|<%offset%>|$env{'offset'}+$env{'count'}|ge;
		$XSGN{'TMP'}=~s|<#next#>|$XSGN{'next'}|g;
	}
	if ($env{'offset'}-$env{'sql_limit_start'})
	{
		if ($env{'offset'}-$env{'count'}-$env{'sql_limit_start'}>0)
		{
			$XSGN{'previous'}=~s|<%offset%>|$env{'offset'}-$env{'count'}|ge;
		}
		else
		{
			$XSGN{'previous'}=~s|<%offset%>||ge;
		}
		$XSGN{'TMP'}=~s|<#previous#>|$XSGN{'previous'}|g;
	}
	
	return 1;
}


our $authors="open\@comsultia.com";

=head1 AUTHORS

Comsultia, Ltd. (open@comsultia.com)

=cut

1;
