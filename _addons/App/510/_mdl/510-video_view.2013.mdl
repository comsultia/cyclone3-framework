#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;


use App::510::_init;


sub execute
{
	my %env=@_;
	my %env_out;
	
	$env{'check_video_part_file'} = 1 unless exists $env{'check_video_part_file'};
	$env{'video_format.ID_entity'} = $App::510::video_format_full_ID unless $env{'video_format.ID_entity'};
#	$env{'video_part'} = 1 unless exists $env{'video_part'};
#	$env{'video_part_file'} = 1 unless exists $env{'video_part_file'};
	
	$env{'datetime_mode'}="present" unless $env{'datetime_mode'};
	
	# get template
	Tomahawk::GetTpl(\%env) || return undef;
	
	my @sql_bind;
	my $sql_where;
	my $sql_changetime;
	my $sql_limit=$env{'sql_limit'} || 1;
	my $sql_order_by=$env{'sql_order_by'} || 'video.datetime_rec_start DESC';
	
	if ($env{'datetime_mode'} eq "present")
	{
		$sql_where.=" AND video_attrs.datetime_publish_start <= NOW()";
		$sql_where.=" AND (video_attrs.datetime_publish_stop IS NULL OR video_attrs.datetime_publish_stop >= NOW())";
	}
	
	if ($env{'video.ID_entity'})
	{
		main::_log("search by video.ID_entity");
		push @{$env_out{'entity'}},{
			'db_h' => 'main',
			'db_name' => $App::510::db_name,
			'tb_name' => 'a510_video',
			'ID_entity' => $env{'video.ID_entity'}
		};
		$sql_where.="AND video.ID_entity=? ";
		push @sql_bind,$env{'video.ID_entity'};
		$sql_changetime=App::020::SQL::functions::_get_changetime(
			{
				'db_h'=>"main",
				'db_name' => $App::510::db_name,
				'tb_name' => "a510_video",
				'ID_entity' => $env{'video.ID_entity'}
			}
		);
	}
	else
	{
		if ($env{'video_cat.ID'})
		{
			my %data=App::020::SQL::functions::get_ID(
				'db_h'    => 'main',
				'db_name' => $App::510::db_name,
				'tb_name' => 'a510_video_cat',
				'ID'      => $env{'video_cat.ID'},
				'columns' => {'ID_entity' => 1}
			);
			push @{$env_out{'entity'}},{
				'db_h' => 'main',
				'db_name' => $App::510::db_name,
				'tb_name' => 'a510_video_cat',
				'ID_entity' => $data{'ID_entity'}
			};
		}
		elsif ($env{'video_cat.ID_entity'})
		{
			my $sql_cat;
			foreach my $ID_category (split(';',$env{'video_cat.ID_entity'}))
			{
				next unless $ID_category;
				if ($ID_category=~s/\*$//)
				{
					my $cat_sql=qq{SELECT ID_charindex FROM $App::510::db_name.a510_video_cat WHERE ID_entity=$ID_category AND lng='$env{'lng'}' AND status IN ('Y','L') LIMIT 1};
					$ID_category=qq{SELECT ID_entity FROM $App::510::db_name.a510_video_cat WHERE ID_charindex LIKE CONCAT(($cat_sql),"%") AND lng='$env{'lng'}' AND status IN ('Y','L')};
				}
				$sql_cat.=" OR video_attrs.ID_category IN ($ID_category)";
				$sql_cat=~s/^ OR //;
			}
			if ($sql_cat)
			{
				$sql_where.=" AND (".$sql_cat.") ";
			}
		}
	}
	
	return 1 unless $sql_where;
	
	
	my %sth0=TOM::Database::SQL::execute(qq{
		SELECT
			video.ID,
			video.ID_entity,
			video.datetime_rec_start,
			video.datetime_rec_stop,
			video_ent.posix_owner AS ent_posix_owner,
			video_ent.posix_author AS ent_posix_author,
			video_ent.keywords AS ent_keywords,
			video_ent.movie_release_year AS ent_movie_release_year,
			video_ent.movie_release_date AS ent_movie_release_date,
			video_ent.movie_country_code AS ent_movie_country_code,
			video_ent.movie_imdb AS ent_movie_imdb,
			video_ent.movie_catalog_number AS ent_movie_catalog_number,
			video_ent.movie_length AS ent_movie_length,
			video_ent.movie_note AS ent_movie_note,
			video_ent.metadata AS ent_metadata,
			video_attrs.name AS attrs_name,
			video_attrs.name_url AS attrs_name_url,
			video_attrs.description AS attrs_description,
			video_cat.ID AS cat_ID,
			video_cat.ID_entity AS cat_ID_entity,
			video_cat.name AS cat_name,
			video_cat.name_url AS cat_name_url}.do{if ($env{'check_video_part_file'}){qq{,
			video_part.ID AS part_ID,
			video_part.ID_entity AS part_ID_entity,
			video_part_file.ID AS file_ID,
			video_part_file.ID_entity AS file_ID_entity,
			video_part_file.name AS file_name,
			video_part_file.video_width AS file_video_width,
			video_part_file.video_height AS file_video_height,
			video_part_file.video_codec AS file_video_codec,
			video_part_file.video_fps AS file_video_fps,
			video_part_file.video_bitrate AS file_video_bitrate,
			video_part_file.audio_codec AS file_audio_codec,
			video_part_file.audio_bitrate AS file_audio_bitrate,
			video_part_file.length AS file_length}}}.qq{
		FROM
			$App::510::db_name.a510_video AS video
		INNER JOIN $App::510::db_name.a510_video_ent AS video_ent ON
		(
			video_ent.ID_entity = video.ID_entity AND
			video_ent.status IN ('Y','L')
		)
		INNER JOIN $App::510::db_name.a510_video_attrs AS video_attrs ON
		(
			video_attrs.ID_entity = video.ID AND
			video_attrs.lng = '$env{'lng'}' AND
			video_attrs.status IN ('Y','L')
		)
		LEFT JOIN $App::510::db_name.a510_video_cat AS video_cat ON
		(
			video_cat.ID_entity = video_attrs.ID_category AND
			video_cat.lng = video_attrs.lng AND
			video_cat.status IN ('Y','L')
		)}.do{if ($env{'check_video_part_file'}){qq{
		INNER JOIN $App::510::db_name.a510_video_part AS video_part ON
		(
			video_part.ID_entity = video.ID_entity AND
			video_part.status IN ('Y','L')
		)
		INNER JOIN $App::510::db_name.a510_video_part_file AS video_part_file ON
		(
			video_part_file.ID_entity = video_part.ID AND
			video_part_file.status IN ('Y','L') AND
			video_part_file.ID_format = $env{'video_format.ID_entity'}
		)
		}}}.qq{
		WHERE
			video.status IN ('Y','L')
			$sql_where
		ORDER BY
			$sql_order_by
		LIMIT
			$sql_limit
	},'bind'=>[@sql_bind],'quiet_'=>1,'-slave'=>1,'-cache'=>86400*7,
		'-cache_changetime' => App::020::SQL::functions::_get_changetime({
			'db_h'=>"main",'db_name'=>$App::510::db_name,'tb_name'=>"a510_video",'ID_entity'=>$env{'video.ID_entity'}
		})
	);
	my %video=$sth0{'sth'}->fetchhash();
	
	if (!$video{'ID_entity'})
	{
		main::_log("video not found",1);
		return 1,%env_out;
	}
	
	main::_log("found video.ID_entity=$video{'ID_entity'}");
	
	
	push @{$env_out{'entity'}},{
		'db_h' => 'main',
		'db_name' => $App::510::db_name,
		'tb_name' => 'a510_video',
		'ID_entity' => $video{'ID_entity'}
	};
	
	push @{$env_out{'call'}{'H'}{'add_DOC_keywords'}},$video{'ent_keywords'}
		if $env{'header.keywords'};
	
	push @{$env_out{'call'}{'H'}{'add_DOC_title'}},$video{'attrs_name'}
		if $env{'header.title'};
#	push @{$env_out{'call'}{'H'}{'change_DOC_description'}},ucfirst($description);
	
	if ($video{'cat_ID'})
	{
		# link to a210_page
		if (my $category=App::510::functions::_a210_by_cat([$video{'cat_ID'}],'lng'=>$env{'lng'}))
		{
			my %sql_def=('db_h' => "main",'db_name' => $App::210::db_name,'tb_name' => "a210_page");
			foreach my $p(
				App::020::SQL::functions::tree::get_path(
					$category,
					%sql_def,
					'-slave' => 1,
					'-cache' => 86400*7
				)
			)
			{
				push @{$video{'a210'}{'IDs'}}, $p->{'ID'};
				push @{$video{'a210'}{'nodes'}}, $p;
				$video{'a210'}{'path_url'}.="/".$p->{'name_url'};
			}
			$video{'a210'}{'path_url'}=~s|^/||;
		}
	}
	
	if ($video{'part_ID_entity'})
	{
		$video{'related_thumbnail'}=(App::160::SQL::get_relations(
			'db_name' => $App::510::db_name,
			'l_prefix' => 'a510',
			'l_table' => 'video_part',
			'l_ID_entity' => $video{'part_ID'},
			'r_prefix' => "a501",
			'r_table' => "image",
			'rel_type' => "thumbnail",
			'status' => "Y"
		))[0];
	}
	
	if ($env{'header.og'})
	{
		push @{$env_out{'call'}{'H'}{'add_DOC_meta'}},{'property'=>'og:title','content'=>$video{'attrs_name'}};
		push @{$env_out{'call'}{'H'}{'add_DOC_meta'}},{'property'=>'og:site_name','content' => $tom::H};
		push @{$env_out{'call'}{'H'}{'add_DOC_meta'}},{'property'=>'og:type','content'=>'article'};
		
		if ($video{'related_thumbnail'}->{'r_ID_entity'})
		{
			my %image=App::501::functions::get_image_file(
				'image.ID_entity' => $video{'related_thumbnail'}->{'r_ID_entity'},
				'image_file.ID_format' => $env{'header.og.image_format.ID'} || $App::501::image_format_thumbnail_ID,
				'image_attrs.lng' => $env{'lng'}
			);
			push @{$env_out{'call'}{'H'}{'add_DOC_meta'}},{'property'=>'og:image','content'=>$tom::H_a501.'/image/file/'.$image{'file_path'}};
		}
		
	}
	
	
	if ($env{'video_part'})
	{
		my @sql_bind;
		my $sql_where;
		
		if ($env{'video_part.ID'})
		{
			$sql_where.="AND video_part.ID=? ";
			push @sql_bind,$env{'video_part.ID'};
		}
		
		my %sth0=TOM::Database::SQL::execute(qq{
			SELECT
				video_part.ID,
				video_part.ID_entity,
				video_part.part_id,
				video_part.visits,
				video_part.rating_score,
				video_part.rating_votes,
				video_part.rating,
				video_part.keywords,
				video_part_attrs.name,
				video_part_attrs.name_url,
				video_part_attrs.datetime_create,
				video_part_attrs.description, 
				video_part_file.length AS file_length
			FROM
				$App::510::db_name.a510_video_part AS video_part
			INNER JOIN $App::510::db_name.a510_video_part_attrs AS video_part_attrs ON
			(
				video_part_attrs.ID_entity = video_part.ID AND
				video_part_attrs.status IN ('Y','L')
			)}.do{if ($env{'check_video_part_file'}){qq{
			INNER JOIN $App::510::db_name.a510_video_part_file AS video_part_file ON
			(
				video_part_file.ID_entity = video_part.ID AND
				video_part_file.status IN ('Y','L') AND
				video_part_file.ID_format = $env{'video_format.ID_entity'}
			)}}}.qq{
			WHERE
				video_part.status IN ('Y','L') AND
				video_part.ID_entity = ?
				$sql_where
			ORDER BY
				part_id ASC
		},'bind'=>[$video{'ID_entity'},@sql_bind],'quiet'=>1);
		while (my %video_part=$sth0{'sth'}->fetchhash())
		{
			
			if ($env{'video_part_file'})
			{
				my %sth0=TOM::Database::SQL::execute(qq{
					SELECT
						video_part_file.*,
						video_format.name AS video_format_name
					FROM
						$App::510::db_name.a510_video_part_file AS video_part_file
					INNER JOIN $App::510::db_name.a510_video_format AS video_format ON
					(
						video_format.ID_entity = video_part_file.ID_format
					)
					WHERE
						video_part_file.status IN ('Y','L') AND
						video_part_file.ID_entity = ?
					ORDER BY
						video_part_file.ID_format ASC
				},'bind'=>[$video_part{'ID'}],'quiet'=>1);
				while (my %video_part_file=$sth0{'sth'}->fetchhash())
				{
					push @{$video_part{'file'}}, \%video_part_file;
				}
			}
			
			push @{$video{'part'}}, \%video_part;
		}
		
	}
	
	$TPL->{'variables'}{'video'} = \%video;
	
	return 1,%env_out;
}

1;
