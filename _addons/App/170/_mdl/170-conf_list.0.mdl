#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use strict;

sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN(-convertvars=>1) || return undef;

# Finding Editor in a120
	if ( $main::USRM{login} )
	{
		my $sql_120 = "SELECT * FROM a120 WHERE nickname='$main::USRM{login}' AND IDtype in (1,0)";
		my $db_120 = $main::DB{main}->Query( $sql_120 );
		while ( my %a120_record = $db_120->fetchhash )
		{
			my $type;
			$type = 'author' if $a120_record{'IDtype'} == 0;
			$type = 'editor' if $a120_record{'IDtype'} == 1;
			while ( my ($k,$v) = each %a120_record ) { $XSGN{TMP} =~ s|<%${type}_$k%>|$v|g; }
		}
	}
	
	# Applications
	foreach (keys %TOM::DEBUG_log_app)
	{
		$XSGN{NULL}=$XSGN{APP};
		$XSGN{NULL}=~s|<%app%>|$_|g;
		$XSGN{TMP}=~s|<#APP#>|$XSGN{NULL}|;
	}
	
	# Languages
	if (($env{xt_xlng}) || ($env{xlng}))
	{
		main::_log("using xlng transformation");
		if ($env{xlng}) { main::_log("WARNING! using deprecated parameter 'xlng'! please, use 'xt_xlng';"); }
		Tomahawk::GetXLNG() || return undef; # retrieve language xml
		Tomahawk::XLNGtoXSGN(); # implement XLNG into XSGN
	}
	
	if($tom::lng)
	{
		main::_log('tom::lng = '.$tom::lng);
		$XSGN{TMP}=~s|<%lng%>|$tom::lng|g;
		
		foreach(@TOM::LNG_accept)
		{
			if($_ eq $tom::lng)
			{
				main::_log('skipping default language - already defined in $tom::lng');
				next;
			}
			$XSGN{NULL}=$XSGN{LNG};
			$XSGN{NULL}=~s|<%lng%>|$_|g;
			$XSGN{TMP}=~s|<#LNG#>|$XSGN{NULL}|;
		}
	}
	else
	{
		main::_log('main::lng not found');
		return undef;
	}
	
	
	# Tabs
	
	# the old way
	foreach( @TOM::ADM_modules )
	{
		main::_log("c: enabled $_");
		$XSGN{NULL}=$XSGN{TAB};
		$XSGN{NULL}=~s|<%tab%>|$_|g;
		$XSGN{TMP}=~s|<#TAB#>|$XSGN{NULL}|;
	}
	# the new way
	main::_log("XULadmin version = '$env{'version'}'");
	$env{'version'}='1.1' unless $env{'version'};
	$env{'version'}=~s|^(\d+)\.(\d+).*$|\1.\2|;
	foreach my $tab (sort keys %Ext::XULadmin::tabs)
	{
		main::_log("tab='$tab'='$Ext::XULadmin::tabs{$tab}{'name'}' enabled='$Ext::XULadmin::tabs{$tab}{'enabled'}' minversion='$Ext::XULadmin::tabs{$tab}{'minversion'}' maxversion='$Ext::XULadmin::tabs{$tab}{'maxversion'}'");
		my $enabled=$Ext::XULadmin::tabs{$tab}{'enabled'};
		if ($Ext::XULadmin::tabs{$tab}{'minversion'})
		{
			if ($Ext::XULadmin::tabs{$tab}{'minversion'} gt $env{'version'}){$enabled=0;}
		}
		if ($Ext::XULadmin::tabs{$tab}{'maxversion'})
		{
			if ($Ext::XULadmin::tabs{$tab}{'maxversion'} lt $env{'version'}){$enabled=0;}
		}
		next unless $enabled;
		$XSGN{NULL}=$XSGN{TAB};
		$XSGN{NULL}=~s|<%tab%>|$Ext::XULadmin::tabs{$tab}{'name'}|g;
		$XSGN{TMP}=~s|<#TAB#>|$XSGN{NULL}|;
		main::_log("enabled");
	}
	
	# Custom XPI addons
	use File::Find;
	find
	(
		{
			'wanted' => sub
			{
				return undef if $_=~/\.svn/;
				return if -d $_;
				$_=~s|$tom::p/.customization/||;
				$XSGN{NULL}=$XSGN{FILE};
				$XSGN{NULL}=~s|<%file%>|$_|g;
				$XSGN{TMP}=~s|<#FILE#>|$XSGN{NULL}|;
			},
			'no_chdir' => 1,
			'hidden' => 1
		},
		"$tom::p/.customization/"
	);
	
	return 1;
}



1;
