#!/usr/bin/perl
# USE UTF-8 !!!
package CRON::module;
use strict;

sub execute
{
 my %env=@_;
 #return 1;
 if ($cron::P eq $CRON::P){$cron::ERR="WARN: this cron is only for local use!!!";return undef}

# if (!$env{db_130}){$cron::ERR="WARN: db_130 not defined!!!";return undef}
 if (!$env{db_120}){$cron::ERR="WARN: db_120 not defined!!!";return undef}
 $env{db_130}=$TOM::DB_name_TOM;
 $env{table}="a130_send";#}else{$env{table}="a130_send";}

 $env{db_400}=$TOM::DB_name;
 my $email=<<"HEADER";
From: <%FROM%>
To: <%TO%>
Subject: [STAT][a400/articles] bilance editors 31days
Date: <%DATE%>
List-Id: TOM3
MIME-Version: 1.0
Content-Type: text/plain;charset="utf-8"
Content-Transfer-Encoding: 7bit

<%BODY%>
HEADER

 my $doc;

 my $tat=86400-(($cron::Thour*60*60)+($cron::Tmin*60)+$cron::Tsec);
 #print "$tat\n";return 1;

 my $articles;
 my $visits;
 my %cats;
 my %IDeditor;
 my %IDauthor;
 my $db0=$main::DBH->Query("
	SELECT *
	FROM $env{db_400}.a400
	WHERE	active='Y'
		AND starttime<$cron::time_current
		AND starttime>$cron::time_current-(86400*31)
	");
 while (my %article=$db0->fetchhash)
 {
  $articles++;
  my $cat=substr($article{IDcategory},0,4);

  $visits+=$article{visits};

  my $day=int(($cron::time_current-$article{starttime}+$tat)/86400);

  #$IDeditor{$article{IDeditor}}{v}+=$article{visits};
  #$IDeditor{$article{IDeditor}}{n}++;

  $IDeditor{$article{IDeditor}}[$day]{n}++;


#  $cats{$cat}{name}+=$article{visits};
  #print $cat."\n";
  #print "$article{ID}\n";
 }

 foreach my $editor (keys %IDeditor)
 {
  my $editor0;
  my $db0=$main::DBH->Query("
	SELECT fullname,nickname
	FROM $env{db_120}.a120
	WHERE	active='Y'
		AND ID='$editor'
	");
  if (my @db0_line=$db0->fetchrow)
  {
   $editor0="$db0_line[0] ($db0_line[1])";
  }

  print "$editor0\n";

  my $rot=0;
  foreach my $number(@{$IDeditor{$editor}})
  {
   print "+[$rot]${$number}{n}\n";
   $rot++;
  }
 }


 return 1;

 $doc.="za poslednych 24 hodin publikovanych $articles clankov (".int($articles/24)."/hodina)\n";
 $doc.="celkom $visits videni clankov, ".int($visits/$articles)."/clanok, ".int($visits/24)."/hodina\n";
 $doc.="CAT     pocet  %pocet videni %videni videni/1\n";
 foreach (sort keys %cats)
 {
  $doc.=sprintf("%-10s",$_);
  $doc.=sprintf("%4s",$cats{$_}{n})." ";
  $doc.=sprintf("%5s",sprintf("%1.2f",((int(($cats{$_}{n}/($articles/100))*100))/100)))." ";
  $doc.=sprintf("%7s",$cats{$_}{v})." ";
  $doc.=sprintf("%5s",sprintf("%1.2f",((int(($cats{$_}{v}/($visits/100))*100))/100)))." ";
  $doc.=sprintf("%7s",int($cats{$_}{v}/$cats{$_}{n}))." ";

  my $db0=$main::DBH->Query("
	SELECT name
	FROM $env{db_400}.a400_category
	WHERE	active='Y'
		AND ID='$_'
	");
  if (my @db0_line=$db0->fetchrow)
  {
   $doc.="$db0_line[0]\n";
  }
  else
  {
   $doc.="\n";
  }
 }

 $doc.="\n";

 $doc.="rozbor za poslednych 24 hodin podla editorov\n";
 $doc.="ID       pocet %pocet videni %videni videni/1\n";
 foreach (sort keys %IDeditor)
 {
  $doc.=sprintf("%-10s",$_);
  $doc.=sprintf("%4s",$IDeditor{$_}{n})." ";
  $doc.=sprintf("%5s",sprintf("%1.2f",((int(($IDeditor{$_}{n}/($articles/100))*100))/100)))." ";
  $doc.=sprintf("%7s",$IDeditor{$_}{v})." ";
  $doc.=sprintf("%5s",sprintf("%1.2f",((int(($IDeditor{$_}{v}/($visits/100))*100))/100)))." ";
  $doc.=sprintf("%7s",int($IDeditor{$_}{v}/$IDeditor{$_}{n}))." ";

#=head1
  my $db0=$main::DBH->Query("
	SELECT fullname,nickname
	FROM $env{db_120}.a120
	WHERE	active='Y'
		AND ID='$_'
	");
  if (my @db0_line=$db0->fetchrow)
  {
   $doc.="$db0_line[0] ($db0_line[1])";
  }
#=cut
  $doc.="\n";
 }

 $doc.="\n";

 $doc.="rozbor za poslednych 24 hodin podla autorov\n";
 $doc.="ID       pocet %pocet videni %videni videni/1\n";
 foreach (sort keys %IDauthor)
 {
  $doc.=sprintf("%-10s",$_);
  $doc.=sprintf("%4s",$IDauthor{$_}{n})." ";
  $doc.=sprintf("%5s",sprintf("%1.2f",((int(($IDauthor{$_}{n}/($articles/100))*100))/100)))." ";
  $doc.=sprintf("%7s",$IDauthor{$_}{v})." ";
  $doc.=sprintf("%5s",sprintf("%1.2f",((int(($IDauthor{$_}{v}/($visits/100))*100))/100)))." ";
  $doc.=sprintf("%7s",int($IDauthor{$_}{v}/$IDauthor{$_}{n}))." ";

#=head1
  my $db0=$main::DBH->Query("
	SELECT fullname,nickname
	FROM $env{db_120}.a120
	WHERE	active='Y'
		AND ID='$_'
	");
  if (my @db0_line=$db0->fetchrow)
  {
   $doc.="$db0_line[0] ($db0_line[1])";
  }
#=cut
  $doc.="\n";
 }

 $doc.="\n";






 print $doc;

 return 1;

 $email=~s|<%BODY%>|$doc|;
 $email=~s|<%FROM%>|"$CRON::core_uname_n($tom::H)" <CRON\@$tom::H>|;
 use Utils::datetime;
 $email=~s|<%DATE%>|$Utils::datetime::DAYS{en}[$cron::Twday], $cron::Tmday $Utils::datetime::MONTHS{en}[$cron::Tmom-1] $cron::Fyear $cron::Fhour:$cron::Fmin:$cron::Fsec +-200|g;

 $env{to_email}=$TOM::contact_admin.";".$TOM::contact_operator.";".$TOM::contact_director.";".$TOM::contact_stats;
 my %env0 unless $env{to_email};

 foreach (split(';',$env{to_email})){$env0{$_}++;}
 $env{to_email}="";foreach (sort keys %env0){$env{to_email}.=$_.";";}$env{to_email}=~s|;$||;
 $env{to_email_parse}=$env{to_email};$env{to_email_parse}=~s|;|>,<|g;$env{to_email_parse}="<".$env{to_email_parse}.">";
 $email=~s|<%TO%>|"contact_stats" $env{to_email_parse}|g;

# print "send to $env{to_email_parse}\n";

#=head1

# print "insert $env{db_130}.$env{table}\n";

# print $email;

#=head1
 if ($main::DBH->Query("
	 INSERT INTO $env{db_130}.$env{table}
	 (
	  sendtime,
	  priority,
	  from_name,
	  from_email,
	  from_host,
	  from_service,
	  to_name,
	  to_email,
	  body)
	 VALUES	(
	  '$cron::time_current',
	  '99',
	  'CRON',
	  'CRON\@$tom::H',
	  '$tom::H',
	  'a130',
	  'director',
	  '$env{to_email}',
	  '$email'
	 )"))
 {
  print "ok\n";
 }
 else
 {
  print "err\n";
 }
#=cut



 return 1}



1;























