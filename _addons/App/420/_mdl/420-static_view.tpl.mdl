#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;

use App::401::mimetypes;
use App::420::_init;
use App::020::_init;
use App::160::_init;
use TOM::Text::format;
use Ext::TextHyphen::_init;

sub execute
{
	my %env=@_;
	
	Tomahawk::GetTpl() || return undef;
	
	$env{'db_name'}=$App::420::db_name unless $env{'db_name'};
	
	$env{'static.status'}='Y' unless $env{'static.status'};
		my $sql_status=join "','", split('',$env{'static.status'});
	
	$env{'static.ID'}=$env{'ID'} unless $env{'static.ID'};
	$env{'static.ID_entity'}=$env{'ID_entity'} unless $env{'static.ID_entity'};
	
	my $sql_where;
	
	# ID_entity
	$sql_where.=" AND static.ID_entity=$env{'static.ID_entity'}"
		if $env{'static.ID_entity'};
	
	# ID
	$sql_where.=" AND static.ID=$env{'static.ID'}"
		if $env{'static.ID'};
	
	# ID_category
	$sql_where.=" AND static.ID_category IN ($env{'static.ID_category'})"
		if $env{'static.ID_category'};
	
	# static.status
	$env{'static.status'}='Y' unless exists $env{'static.status'};
	$sql_where.=" AND static.status IN ('$env{'static.status'}') "
		if $env{'static.status'};
	
	# static.name
	if ($env{'static.name'})
	{
		$sql_where.=" AND static.name LIKE '".TOM::Security::form::sql_escape($env{'static.name'})."'";
	}
	
	my $sql_order="static.datetime_start DESC";
		$sql_order=$env{'sql_order'} if $env{'sql_order'};
		$sql_order=$env{'sql_order_by'} if $env{'sql_order_by'};
	
	my $sql=qq{
		SELECT
			static.ID_entity,
			static.ID,
			static.ID_category,
			static_cat.name AS category_name,
			static_cat.name_url AS category_name_url,
			static.name,
			static.name_url,
			static.alias_url,
			static.posix_owner,
			static.posix_modified,
			static.datetime_create,
			static.datetime_start,
			DATE_FORMAT(static.datetime_start, '%Y-%m-%d %H:%i') AS datetime_start,
			DATE_FORMAT(static.datetime_stop, '%Y-%m-%d %H:%i') AS datetime_stop,
			static.body,
			static.status
		FROM
			`$env{'db_name'}`.a420_static AS static
		LEFT JOIN `$env{'db_name'}`.a420_static_cat AS static_cat ON
		(
			static_cat.ID = static.ID_category
		)
		WHERE
					(static.datetime_start IS NULL OR static.datetime_start <= NOW())
			AND	(static.datetime_stop IS NULL OR static.datetime_stop >= NOW())
			$sql_where
		ORDER BY
			$sql_order
		LIMIT
			1
	};
	
	my %sth0=TOM::Database::SQL::execute($sql,'quiet'=>1,'-slave'=>1);
	if (my %db0_line=$sth0{'sth'}->fetchhash())
	{
		main::_log("static.name='$db0_line{'name'}'");
		
		my $p=new App::401::mimetypes::html;
		$p->config('prefix'=>'static','name'=>'body','env'=>\%env,'entity'=>$TPL->{'entity'});
		$p->parse($db0_line{'body'});
		$p->eof();
		$db0_line{'body'}=$p->{'out'};
		
		$TPL->{'variables'}{'item'}=\%db0_line;
	}
	
	return 1;
}


our $authors="open\@comsultia.com";

=head1 AUTHORS

Comsultia, Ltd. (open@comsultia.com)

=cut

1;
