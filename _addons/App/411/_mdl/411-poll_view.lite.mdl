#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;



=head1 NAME

411-poll_view.lite.mdl

=head1 DESCRIPTION

Lite view of poll

=head1 DEPENDS

=over

=back

=cut

use App::401::mimetypes::html;

=head1 INPUTS

=over

=item *

B<db_name> - database name

=item *

B<sql_ID> - requested poll ID

=item *

B<sql_status> - required status (default 'Y')

=item *

B<sql_lng> - required language (default is current)

=back

=cut



=head1 XSGN

=over

=item *

B<TMP> - poll item

=item *

B<ANSWER> - answer

=item *

B<%db_*%> - poll database variables

=back

=cut



sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN('-convertvars'=>1) || return undef;
	
	if ($Tomahawk::mdl_C{'-xlng_load'})
	{
		main::_log("using xlng transformation");
		Tomahawk::GetXLNG() || return undef; # retrieve language xml
		Tomahawk::XLNGtoXSGN(); # implement XLNG into XSGN
	}
	
	$env{'db_name'}=$App::401::db_name unless $env{'db_name'};
	
	$env{'sql_lng'}=$env{'lng'} unless $env{'sql_lng'};
	$env{'sql_status'}='Y' unless $env{'sql_status'};
	
	$env{'sql_order_by'}='datetime_start DESC' unless $env{'sql_order_by'};
	
	my $no_data=1;

	my $sql_cat = "`poll`.`ID_category` IN ('$env{'ID_category'}') AND" if($env{'ID_category'});
	my $sql_entity = "`poll`.`ID_entity` IN ('$env{'ID_entity'}') AND" if($env{'ID_entity'});

	my $sql=qq{
		SELECT
			`poll`.*
		FROM
			`$env{'db_name'}`.`a411_poll` AS `poll`
		WHERE
			$sql_cat
			$sql_entity
			`poll`.`datetime_start` <= NOW() AND
			(`poll`.`datetime_stop` IS NULL OR `poll`.`datetime_stop` >= NOW()) AND
			`poll`.`lng`='$env{'sql_lng'}' AND
			`poll`.`status` IN ('$env{'sql_status'}')
		ORDER BY
			$env{'sql_order_by'}
		LIMIT 1
	};
	my %sth0=TOM::Database::SQL::execute($sql,'log_'=>1,'-slave'=>1);
	if(!$sth0{'rows'} && $XSGN{'TMP_no-data'})
	{
		$XSGN{'TMP'}=$XSGN{'TMP_no-data'};
		return 1;
	}
	elsif (!$sth0{'rows'})
	{
#		die "can't select poll with this attributes\n";
		$XSGN{'TMP'}=$XSGN{'TMP_no-data'};
		return 1;
	}
	my %db0_line=$sth0{'sth'}->fetchhash();
	
	# select answers
	my $sql=qq{
		SELECT
			`poll_answer`.*,
			(
				SELECT COUNT(*)
				FROM `$env{'db_name'}`.`a411_poll_vote`
				WHERE ID_answer=`poll_answer`.ID_entity
			) AS vote_count
		FROM
			`$env{'db_name'}`.`a411_poll_answer` AS `poll_answer`
		WHERE
			`poll_answer`.`ID_poll`='$db0_line{'ID_entity'}' AND
			`poll_answer`.`lng`='$env{'sql_lng'}' AND
			`poll_answer`.`status` IN ('$env{'sql_status'}')
		ORDER BY
			`poll_answer`.ID_entity
	};
	my %sth1=TOM::Database::SQL::execute($sql,'log_'=>1,'-slave'=>1);
	
	my $votes_total;
	my @percentages;
	my @votes;
	
	my $item_counter = 0;
	
	while (my %db1_line=$sth1{'sth'}->fetchhash())
	{
		my $answer=$XSGN{'answer'};
		
		$votes_total+=$db1_line{'vote_count'};
		$votes[$item_counter] = $db1_line{'vote_count'};
		
		$answer=~s|<%db_vote_count_percent%>|<%vote_count_percent_$item_counter%>|g;
		
		$answer=~s|<%poll_db_(.*?)%>|$db0_line{$1}|g;
		
		# process answer
		my $p=new App::401::mimetypes::html;
		
		# img
		$p->{'ignore'}{'img'}=
			$env{'body.ignore.img'}
			|| $env{'ignore.img'}
			|| undef;
		
		$p->{'ignore'}{'img.1'}=
			$env{'answer.ignore.img.1'}
			|| $env{'ignore.img.1'}
			|| undef;
		
		# a210_page
		$p->{'entity'}{'a210_page'}=
			$XSGN{'answer.a210_page'}
			|| $XSGN{'a210_page'}
			|| undef;
			
		# a401_article
		$p->{'entity'}{'a401_article'}=
			$XSGN{'answer.a401_article'}
			|| $XSGN{'a401_article'}
			|| undef;
		
		# a501_image
		$p->{'config'}->{'a501_image_file.ID_format'}=
			$env{'answer.'.$item_counter.'.a501_image_file.ID_format'}
			|| $env{'answer.'.$item_counter.'.a501_image_file.ID_format'}
			|| $env{'answer.a501_image_file.ID_format'}
			|| $env{'a501_image_file.ID_format'}
			|| undef;
		$p->{'config'}->{'a501_image_file.ID_format.1'}=
			$env{'answer.'.$item_counter.'.a501_image_file.ID_format.1'}
			|| $env{'answer.'.$item_counter.'.a501_image_file.ID_format.1'}
			|| $env{'answer.a501_image_file.ID_format.1'}
			|| $env{'a501_image_file.ID_format.1'}
			|| undef;
		$p->{'config'}->{'a501_image_file.ID_format.extra'}=
			$env{'a501_image_file.ID_format.extra'}
			|| undef;
		$p->{'entity'}->{'a501_image'}=
			$XSGN{'answer.a501_image'}
			|| $XSGN{'a501_image'}
			|| undef;
		$p->{'entity'}->{'a501_image.1'}=
			$XSGN{'answer.a501_image.1'}
			|| $XSGN{'a501_image.1'}
			|| undef;
		
		# a510_video
		$p->{'config'}->{'a510_video_part_file.ID_format'}=
			$env{'answer.'.$item_counter.'.a510_video_part_file.ID_format'}
			|| $env{'answer.'.$item_counter.'.a510_video_part_file.ID_format'}
			|| $env{'answer.a510_video_part_file.ID_format'}
			|| $env{'a510_video_part_file.ID_format'}
			|| undef;
		$p->{'config'}->{'a510_video_part_file.ID_format.1'}=
			$env{'answer.'.$item_counter.'.a510_video_part_file.ID_format.1'}
			|| $env{'answer.'.$item_counter.'.a510_video_part_file.ID_format.1'}
			|| $env{'answer.a510_video_part_file.ID_format.1'}
			|| $env{'a510_video_part_file.ID_format.1'}
			|| undef;
		$p->{'entity'}{'a510_video'}=
			$XSGN{'answer.a510_video'}
			|| $XSGN{'a510_video'}
			|| undef;
		$p->{'entity'}{'a510_video.1'}=
			$XSGN{'answer.a510_video.1'}
			|| $XSGN{'a510_video.1'}
			|| undef;
		$p->{'entity'}{'a510_video_part'}=
			$XSGN{'answer.a510_video_part'}
			|| $XSGN{'a510_video_part'}
			|| undef;
		$p->{'entity'}{'a510_video_part.1'}=
			$XSGN{'answer.a510_video_part.1'}
			|| $XSGN{'a510_video_part.1'}
			|| undef;
		
		# PARSE !!!
		$p->parse($db1_line{'description'});
		$p->eof();
		my $description_html=$p->{'out'};
	
		$answer=~s|<%db_description%>|$description_html|;
		
		my $description_plain=TOM::Text::format::xml2plain($db1_line{'description'});
		$answer=~s|<%db_description_plain%>|$description_plain|g;
		
		$answer=~s|<%out\.(.*?)%>|$p->{'out_var'}->{$1}|g;
		$answer=~s|<#out\.(.*?)#>|$p->{'out_tag'}->{$1}|g;
		
		$answer=~s|<%db_(.*?)%>|$db1_line{$1}|g;
		
		$item_counter++;
		
		$answer=~s|<%counter%>|$item_counter|g;
		
		$XSGN{'TMP'}=~s|<#answer#>|$answer|;
	}
	
	$XSGN{'TMP'}=~s|<%answers_count%>|$item_counter|g;
	my $total_percent=0;
	
	for(my $tmp=0; $tmp<scalar(@votes); $tmp++)
	{
		my $var = 0;
		$var=int($votes[$tmp]/($votes_total/100)) if ($votes[$tmp]>0);
		$percentages[$tmp] = $var;
		$total_percent += $var;
	}
	
	if(($total_percent>0) && ($total_percent<100))
	{
 		my $highest=0;

 		for(my $tmp=0; $tmp<scalar(@percentages); $tmp++)
 		{
 			if($percentages[$tmp]>$percentages[$highest])
 			{
 				$highest=$tmp;
 			}
 		}
 		$percentages[$highest] += (100-$total_percent);
	}
	
	for(my $tmp=0; $tmp<scalar(@votes); $tmp++)
	{
		$XSGN{'TMP'}=~s|<%vote_count_percent_$tmp%>|$percentages[$tmp]|g;
	}
	
	my $p=new App::401::mimetypes::html;
	
	# img
	$p->{'ignore'}{'img'}=
		$env{'description.ignore.img'}
		|| $env{'ignore.img'}
		|| undef;
	
	$p->{'ignore'}{'img.1'}=
		$env{'ignore.img.1'}
		|| undef;
	
	# a210_page
	$p->{'entity'}{'a210_page'}=
		$XSGN{'a210_page'}
		|| undef;
		
	# a401_article
	$p->{'entity'}{'a401_article'}=
		$XSGN{'a401_article'}
		|| undef;
	
	# a501_image
	$p->{'config'}->{'a501_image_file.ID_format'}=
		$env{'a501_image_file.ID_format'}
		|| undef;
	$p->{'config'}->{'a501_image_file.ID_format.1'}=
		$env{'a501_image_file.ID_format.1'}
		|| undef;
	$p->{'config'}->{'a501_image_file.ID_format.extra'}=
		$env{'a501_image_file.ID_format.extra'}
		|| undef;
	$p->{'entity'}->{'a501_image'}=
		$XSGN{'a501_image'}
		|| undef;
	$p->{'entity'}->{'a501_image.1'}=
		$XSGN{'a501_image.1'}
		|| undef;
	
	# a510_video
	$p->{'config'}->{'a510_video_part_file.ID_format'}=
		$env{'a510_video_part_file.ID_format'}
		|| undef;
	$p->{'config'}->{'a510_video_part_file.ID_format.1'}=
		$env{'a510_video_part_file.ID_format.1'}
		|| undef;
	$p->{'entity'}{'a510_video'}=
		$XSGN{'a510_video'}
		|| undef;
	$p->{'entity'}{'a510_video.1'}=
		$XSGN{'a510_video.1'}
		|| undef;
	$p->{'entity'}{'a510_video_part'}=
		$XSGN{'a510_video_part'}
		|| undef;
	$p->{'entity'}{'a510_video_part.1'}=
		$XSGN{'a510_video_part.1'}
		|| undef;
	
	# PARSE !!!
	$p->parse($db0_line{'description'});
	$p->eof();
	my $description_html=$p->{'out'};
	
	$XSGN{'TMP'}=~s|<%db_description%>|$description_html|;
	
	$XSGN{'TMP'}=~s|<%out\.(.*?)%>|$p->{'out_var'}->{$1}|g;
	$XSGN{'TMP'}=~s|<#out\.(.*?)#>|$p->{'out_tag'}->{$1}|g;
	
	$XSGN{'TMP'}=~s|<%db_(.*?)%>|$db0_line{$1}|g;

	$XSGN{'TMP'}=~s|<%votes_all%>|$votes_total|g; #deprecated
	$XSGN{'TMP'}=~s|<%votes_total%>|$votes_total|g;
	
	return 1;
}


our $authors="open\@comsultia.com";

=head1 AUTHORS

Comsultia, Ltd. (open@comsultia.com)

=cut

1;
