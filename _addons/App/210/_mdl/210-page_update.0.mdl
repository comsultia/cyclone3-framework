#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

use App::020::_init;
use App::210::_init;
use CVML;

=head1 NAME

210-page_update.0.mdl

=cut

=head1 DESCRIPTION

Update položky

=cut

=head1 INPUTS

=over

=item *

B<ID> - ID záznamu

=item *

B<t_name> - názov type aliasu

=item *

B<key_?> - hodnota kľúča

=back

=cut

=head1 XSGN

=over

=item *

B<TMP> - defaultne error

=item *

B<RESULT_success> - bez erroru

=item *

B<RESULT_failure_no_input> - zlý vstup

=item *

B<RESULT_failure_set> - nepodarilo sa vykonať

=item *

B<&lt;%ID%&gt;> - ID

=item *

B<&lt;%missing_parameter%&gt;> - chýbajúci parameter

=back

=cut

sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN('-convertvars'=>1) || return undef;
	
	
	if (!$env{'ID'})
	{
		$XSGN{'TMP'}=$XSGN{'RESULT_failure_no_input'};
		$XSGN{'TMP'}=~s|<%missing_parameter%>|ID|g;
		return 1;
	}
	
	# if I'm as RPC service
	foreach my $kk (keys %{$main::RPC}){$main::FORM{$kk}=$main::RPC->{$kk};}
	
	my %a210=App::020::SQL::functions::get_ID(
		'db_h' => "main",
		'db_name' => $App::210::db_name,
		'tb_name' => "a210_page",
		'ID'      => $env{'ID'},
		'columns' => { '*' => 1 }
	);
	
	if (not $a210{'status'}=~/^[YN]$/)
	{
		$XSGN{'TMP'}=$XSGN{'RESULT_failure_get'};
		return 1;
	}
	
	$XSGN{'TMP'}=$XSGN{'RESULT_success'};
	
	my %columns;
	
	# uprava keys
	###################################
	
	my $cvml = new CVML('data'=>$a210{'t_keys'});
	# a vytvor z neho hash
	my %key = %{$cvml->{'hash'}};
	foreach my $kk (keys %main::FORM)
	{
		next unless $kk=~s/^key_//;
		main::_log("override t_keys name='$kk' value='".($main::FORM{'key_'.$kk})."'");
		$key{$kk}=$main::FORM{'key_'.$kk};
		if (!$key{$kk})
		{
			delete $key{$kk};
		}
	}
	my $t_keys=CVML::structure::serialize( %key );
	$t_keys=~s|\'|\\'|g;
	if ($t_keys ne $a210{'t_keys'})
	{
		$columns{'t_keys'}="'".$t_keys."'";
		main::_log("set t_keys=$columns{'t_keys'}");
	}
	
	# uprava t_name
	###################################
	
	if (exists $main::FORM{'t_name'} && $main::FORM{'t_name'} ne $a210{'t_name'})
	{
		$columns{'t_name'}="'".$main::FORM{'t_name'}."'";
		main::_log("set t_name=$columns{'t_name'}");
	}
	
	if ($main::FORM{'name'})
	{
		$columns{'name'}="'".TOM::Security::form::sql_escape($main::FORM{'name'})."'";
	}
	
	if (exists $main::FORM{'alias_url'})
	{
		$columns{'alias_url'}="'".TOM::Security::form::sql_escape($main::FORM{'alias_url'})."'";
	}
	
	$columns{'metadata'}="'".TOM::Security::form::sql_escape($main::RPC->{'metadata'})."'"
		if exists $main::RPC->{'metadata'};
	
	my $update=keys %columns;
	
	# nic nieje na update
	if (!$update)
	{
		$XSGN{'TMP'}=$XSGN{'RESULT_failure_no_input'};
		$XSGN{'TMP'}=~s|<%missing_parameter%>|any|g;
		return 1;
	}
	
	my $out=App::020::SQL::functions::tree::update(
		'db_h' => "main",
		'db_name' => $App::210::db_name,
		'tb_name' => "a210_page",
		'ID' => $env{'ID'},
		'-journalize' => 1,
		'columns' => {%columns}
	);
	
	if (!$out)
	{
		$XSGN{'TMP'}=$XSGN{'RESULT_failure_set'};
		return 1;
	}
	
	return 1;
}

our $authors='roman.fordinal@comsultia.com';

=head1 AUTHORS

Roman Fordinál (roman.fordinal@comsultia.com)

=cut

1;
