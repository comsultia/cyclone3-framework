#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

=head1 NAME

160-relation_list.0.mdl

=head1 DESCRIPTION

Return list of assigned relations ( to one or more entities )

=head1 DEPENDS

=over

=item *

L<App::160::_init|app/"160/_init.pm">

=back

=cut

use App::160::_init;

=head1 INPUTS

=over

=item *

B<ID> - ID of row

=item *

B<ID_entity> - ID of entity

=item *

B<l_prefix>

=item *

B<l_table>

=item *

B<l_ID_entity>

=item *

B<r_db_name>

=item *

B<r_prefix>

=item *

B<r_table>

=item *

B<r_ID_entity>

=item *

B<status> - default 'Y' - can be defined as 'YNT'

=back

=cut


=head1 XSGN

=over

=item *

B<TMP> - default output

=item *

B<#ITEM#> - entry to one item

=item *

B<ITEM> - one item

=item *

B<%ID%> - ID of row

=item *

B<%ID_entity%> - ID of entity

=item *

B<%datetime_change%>

=item *

B<%l_prefix%>

=item *

B<%l_table%>

=item *

B<%l_ID_entity%>

=item *

B<%r_db_name%>

=item *

B<%r_prefix%>

=item *

B<%r_table%>

=item *

B<%r_ID_entity%>

=item *

B<%status%>

=back

Example:

 <XML_DESIGN_DEFINITION>
 
  <DEFINITION id="TMP_error">
   Error
  </DEFINITION>
 
  <DEFINITION id="TMP">
   <div>
    <#ITEM#>
   </div>
  </DEFINITION>
 
  <DEFINITION id="ITEM">
   <span>ID=<%ID%></span>
   <#ITEM#>
  </DEFINITION>
 
 </XML_DESIGN_DEFINITION>

Example of xml output:

 <XML_DESIGN_DEFINITION>
 
 <DEFINITION id="TMP_error">
  <response type="relation_list" IDapp="a160" result="0" code="<$main::request_code>">
   <result>0</result>
   <reason>Default error message.</reason>
  </response>
 </DEFINITION>
 
 <DEFINITION id="TMP">
  <response type="relation_list" IDapp="a160" result="1" code="<$main::request_code>">
   <#ITEM#>
  </response>
 </DEFINITION>
 
 <DEFINITION id="ITEM">
  <item IDitem="<%ID%>">
   <ID><%ID%></ID>
   <ID_entity><%ID_entity%></ID_entity>
   <datetime_change><%datetime_change%></datetime_change>
   <l_prefix><%l_prefix%></l_prefix>
   <l_table><%l_table%></l_table>
   <l_ID_entity><%l_ID_entity%></l_ID_entity>
   <r_db_name><%r_db_name%></r_db_name>
   <r_prefix><%r_prefix%></r_prefix>
   <r_table><%r_table%></r_table>
   <r_ID_entity><%r_ID_entity%></r_ID_entity>
   <status><%status%></status>
  </item>
  <#ITEM#>
 </DEFINITION>
 
 </XML_DESIGN_DEFINITION>

=cut

sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN('-convertvars'=>1) || return undef;
	
	# list of values which can be undefined
	# when value is undefined then is not collected in SQL WHERE query
	$env{'r_db_name'}=$main::FORM{'r_db_name'} || $main::RPC->{'r_db_name'} if not exists $env{'r_db_name'};
	$env{'l_table'}=$main::FORM{'l_table'} || $main::RPC->{'l_table'} if not exists $env{'l_table'};
	$env{'r_table'}=$main::FORM{'r_table'} || $main::RPC->{'r_table'} if not exists $env{'r_table'};
	
	$env{'get_name'}=$main::FORM{'get_name'} || $main::RPC->{'get_name'}  unless $env{'get_name'};
	
	if ($env{'l_prefix'} && !$env{'db_name'})
	{$env{'db_name'}=App::020::SQL::functions::_detect_db_name($env{'l_prefix'})}
	
	foreach (keys %env)
	{
		main::_log("parsed input '$_'='$env{$_}'");
	}
	
	my %get_plus;
	
	$get_plus{'rel_type'}=$main::RPC->{'rel_type'} if $main::RPC->{'rel_type'};
	$get_plus{'rel_type'}=$main::FORM{'rel_type'} if $main::FORM{'rel_type'};
	$get_plus{'rel_type'}=$env{'rel_type'} if $env{'rel_type'};
	
	foreach my $relation (App::160::SQL::get_relations(
		'ID' => $env{'ID'} || $main::FORM{'ID'} || $main::RPC->{'ID'},
		'ID_entity' => $env{'ID_entity'} || $main::FORM{'ID_entity'} || $main::RPC->{'ID_entity'},
		'l_prefix' => $env{'l_prefix'} || $main::FORM{'l_prefix'} || $main::RPC->{'l_prefix'},
		'l_table' => $env{'l_table'}, # this value can be send as undefined
		'l_ID_entity' => $env{'l_ID_entity'} || $main::FORM{'l_ID_entity'} || $main::RPC->{'l_ID_entity'},
		'r_db_name' => $env{'r_db_name'}, # this value can be send as undefined
		'r_prefix' => $env{'r_prefix'} || $main::FORM{'r_prefix'} || $main::RPC->{'r_prefix'},
		'r_table' => $env{'r_table'}, # this value can be send as undefined
		'r_ID_entity' => $env{'r_ID_entity'} || $main::FORM{'r_ID_entity'} || $main::RPC->{'r_ID_entity'},
		'status' => $env{'status'} || $main::FORM{'status'} || $main::RPC->{'status'},
		%get_plus,
		'limit' => 1000
		))
	{
		my $null=$XSGN{'ITEM'};
		
		if ($env{'get_name'})
		{
			my %item=App::160::SQL::get_relation_iteminfo
			(
				'r_prefix' => $relation->{'r_prefix'},
				'r_table' => $relation->{'r_table'},
				'r_ID_entity' => $relation->{'r_ID_entity'},
				'lng' => $env{'lng'}
			);
			
			$null=~s|<%direction%>|lr|g;
			$null=~s|<%name%>|$relation->{'rel_name'}|g if $relation->{'rel_name'};
			$null=~s|<%name%>|$item{'name'} ($item{'name_plus'})|g if $item{'name_plus'};
			$null=~s|<%name%>|$item{'name'}|g;
			
			$null=~s|<%type_name%>|$item{'type_name'}|g;
			# extended attributes
			$null=~s|<%r_ID%>|$item{'ID'}|g;
			$null=~s|<%r_ID_category%>|$item{'ID_category'}|g;
			$null=~s|<%r_lng%>|$item{'lng'}|g;
		}
		$null=~s|<%named_addon%>|$relation->{'r_prefix'}_$relation->{'r_table'}|;
		XSGN_load_hash(\$null,$relation);
		$XSGN{'TMP'}=~s|<#ITEM#>|$null|;
	}
	
	if ($env{'reverse'})
	{
		foreach my $relation (App::160::SQL::get_relations(
#			'ID' => $env{'ID'} || $main::FORM{'ID'} || $main::RPC->{'ID'},
#			'ID_entity' => $env{'ID_entity'} || $main::FORM{'ID_entity'} || $main::RPC->{'ID_entity'},
#			'l_prefix' => $env{'l_prefix'} || $main::FORM{'l_prefix'} || $main::RPC->{'l_prefix'},
#			'l_table' => $env{'l_table'}, # this value can be send as undefined
#			'l_ID_entity' => $env{'l_ID_entity'} || $main::FORM{'l_ID_entity'} || $main::RPC->{'l_ID_entity'},
			'r_db_name' => $env{'db_name'}, # this value can be send as undefined
			'r_prefix' => $env{'l_prefix'} || $main::FORM{'l_prefix'} || $main::RPC->{'l_prefix'},
			'r_table' => $env{'l_table'}, # this value can be send as undefined
			'r_ID_entity' => $env{'l_ID_entity'} || $main::FORM{'l_ID_entity'} || $main::RPC->{'l_ID_entity'},
			'status' => $env{'status'} || $main::FORM{'status'} || $main::RPC->{'status'},
			%get_plus,
			'limit' => 1000
			))
		{
			my $null=$XSGN{'ITEM'};
			
			if ($env{'get_name'})
			{
				my %item=App::160::SQL::get_relation_iteminfo
				(
					'r_prefix' => $relation->{'l_prefix'},
					'r_table' => $relation->{'l_table'},
					'r_ID_entity' => $relation->{'l_ID_entity'},
					'lng' => $env{'lng'}
				);
				
				$null=~s|<%direction%>|rl|g;
				$null=~s|<%name%>|$relation->{'rel_name'}|g if $relation->{'rel_name'};
				$null=~s|<%name%>|$item{'name'} ($item{'name_plus'})|g if $item{'name_plus'};
				$null=~s|<%name%>|$item{'name'}|g;
				
				$null=~s|<%type_name%>|$item{'type_name'}|g;
				# extended attributes
				$null=~s|<%l_ID%>|$item{'ID'}|g;
				$null=~s|<%l_ID_category%>|$item{'ID_category'}|g;
				$null=~s|<%l_lng%>|$item{'lng'}|g;
			}
			$null=~s|<%named_addon%>|$relation->{'l_prefix'}_$relation->{'l_table'}|;
			XSGN_load_hash(\$null,$relation);
			$XSGN{'TMP'}=~s|<#ITEM#>|$null|;
		}
	}
	
	return 1;
}

our $authors='roman.fordinal@comsultia.com';

=head1 AUTHORS

Roman Fordinal (roman.fordinal@comsultia.com)

=cut

1;
