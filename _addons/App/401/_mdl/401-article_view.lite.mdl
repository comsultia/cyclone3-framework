#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;



=head1 NAME

401-article_view.lite.mdl

=head1 DESCRIPTION

Lite view of article

=head1 DEPENDS

=over

=item *

L<App::401::_init|app/"401/_init.pm">

=back

=cut

use App::401::_init;



=head1 INPUTS

=over

=item *

B<db_name> - database name

=item *

B<article.ID> || B<ID> - ID of article

=item *

B<article.ID_entity> || B<ID_entity> - ID of article

=item *

B<article.ID_category> || B<ID_category> - category ID of article

=item *

B<article_attrs.status> - required status (default 'Y')

=item *

B<article_content.lng> - required language (default is current)

=item *

B<ignore.img> - ignore all img's in output (this output tag is not placed into document)

=item *

B<ignore.img.1> - ignores first img in output

=item *

B<body.ignore.img.1> - ignores first img in article_content.body output

=item *

B<a501_image.ID_format> - changes ID_format for all a501_image

=item *

B<a501_image.ID_format.1> - changes ID_format for first a501_image

=item *

B<body.a501_image.ID_format.1> - changes ID_format for first a501_image in article_content.body

=back

=cut



=head1 XSGN

=over

=item *

B<TMP> - article item

=item *

B<%db_*%> - article database variables

=item *

B<%out.img.1.*%> - first img variables

=item *

B<#out.img.1#> - first img entry

=item *

B<a501_image> - image item to replace

=item *

B<a501_image.1> - first image item to replace

=back

=cut



sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN('-convertvars'=>1) || return undef;
	
	$env{'db_name'}=$App::401::db_name unless $env{'db_name'};
	
	$env{'article_content.lng'}=$env{'lng'} unless $env{'article_content.lng'};
	$env{'article_attrs.status'}='Y' unless $env{'article_attrs.status'};
		my $sql_status=join "','", split('',$env{'article_attrs.status'});
	
	$env{'article.ID'}=$env{'ID'} unless $env{'article.ID'};
	$env{'article.ID_entity'}=$env{'ID_entity'} unless $env{'article.ID_entity'};
	
	my $sql_where;
	
	# ID_entity
	$sql_where.="AND article.ID_entity_article=$env{'article.ID_entity'}"
		if $env{'article.ID_entity'};
	
	# ID
	$sql_where.="AND article.ID_article=$env{'article.ID'}"
		if $env{'article.ID'};
	
	# ID_category
	$sql_where.="AND article.ID_category IN ($env{'article_attrs.ID_category'})"
		if $env{'article_attrs.ID_category'};
	
	my $sql=qq{
		SELECT
			article.*
		FROM
			`$env{'db_name'}`.a401_article_view AS article
		WHERE
			article.lng='$env{'article_content.lng'}' AND
			article.status IN ('$sql_status')
			$sql_where
		LIMIT 1
	};
	
	
	my %sth0=TOM::Database::SQL::execute($sql,'log'=>1,'-slave'=>1);
	if (my %db0_line=$sth0{'sth'}->fetchhash())
	{
		$XSGN{'TMP'}=~s|<%db_(.*?)%>|$db0_line{$1}|g;
		
		my %author=App::301::authors::get_author($db0_line{'posix_author'});
		$XSGN{'TMP'}=~s|<%author_(.*?)%>|$author{$1}|g;
		my %editor=App::301::authors::get_author($db0_line{'posix_editor'});
		$XSGN{'TMP'}=~s|<%editor_(.*?)%>|$editor{$1}|g;
		
		# process body
		
		foreach my $part('body','abstract')
		{
			
			my $p=new App::401::mimetypes::html;
			
			# img
			$p->{'ignore'}{'img'}=
				$env{'body.ignore.img'}
				|| $env{'ignore.img'}
				|| undef;
			
			$p->{'ignore'}{'img.1'}=
				$env{'body.ignore.img.1'}
				|| $env{'ignore.img.1'}
				|| undef;
			
			# a501_image
			$p->{'config'}->{'a501_image_file.ID_format'}=
				$env{'body.a501_image_file.ID_format'}
				|| $env{'a501_image_file.ID_format'}
				|| undef;
			$p->{'config'}->{'a501_image_file.ID_format.1'}=
				$env{'body.a501_image_file.ID_format.1'}
				|| $env{'a501_image_file.ID_format.1'}
				|| undef;
			$p->{'entity'}->{'a501_image'}=
				$XSGN{'body.a501_image'}
				|| $XSGN{'a501_image'}
				|| undef;
			$p->{'entity'}->{'a501_image.1'}=
				$XSGN{'body.a501_image.1'}
				|| $XSGN{'a501_image.1'}
				|| undef;
			
			# a510_video
			$p->{'entity'}{'a510_video'}=
				$XSGN{'body.a510_video'}
				|| $XSGN{'a510_video'}
				|| undef;
			$p->{'entity'}{'a510_video.1'}=
				$XSGN{'body.a510_video.1'}
				|| $XSGN{'a510_video.1'}
				|| undef;
			
			# a510_video_part
			$p->{'entity'}{'a510_video_part'}=
				$XSGN{'body.a510_video_part'}
				|| $XSGN{'a510_video_part'}
				|| undef;
			$p->{'entity'}{'a510_video_part.1'}=
				$XSGN{'body.a510_video_part.1'}
				|| $XSGN{'a510_video_part.1'}
				|| undef;
			
			# a010
			foreach (keys %XSGN){if ($_=~/^a010/){$p->{'entity'}{$_}=$XSGN{$_};}}
			
			# PARSE !!!
			$p->parse($db0_line{$part});
			$p->eof();
			my $part_html=$p->{'out'};
			
			$XSGN{'TMP'}=~s|<%$part%>|$part_html|;
			
			$XSGN{'TMP'}=~s|<%out\.(.*?)%>|$p->{'out_var'}->{$1}|g;
			$XSGN{'TMP'}=~s|<#out\.(.*?)#>|$p->{'out_tag'}->{$1}|g;
			
		}
		
		# add banner
#		if ($env{'ad'}){$body_html=~s|^(.{400,}?)<br>|$1<br><!TMP-a401-BANNER!><br>|s;}
		
#		$XSGN{'TMP'}=~s|<%body%>|$body_html|;
		
#		$XSGN{'TMP'}=~s|<%out\.(.*?)%>|$p->{'out_var'}->{$1}|g;
#		$XSGN{'TMP'}=~s|<#out\.(.*?)#>|$p->{'out_tag'}->{$1}|g;
		
		
		# PARSE !!!
#		$p->parse($db0_line{'abstract'});
#		$p->eof();
#		my $abstract_html=$p->{'out'};
		
#		$XSGN{'TMP'}=~s|<%abstract%>|$abstract_html|;
		
		
		# check if here is a related image gallery
		my $i;
		foreach my $relation(App::160::SQL::get_relations(
			'db_name' => $App::401::db_name,
			'l_prefix' => 'a401',
			'l_table' => 'article',
			'l_ID_entity' => $db0_line{'ID_entity_article'},
			#'rel_type' => 'gallery',
			'r_prefix' => "a501",
			'r_table' => "image",
			'status' => "Y"
			))
		{
			$i++;
			
			my $item=$XSGN{'a501.gallery.'.$i} || $XSGN{'a501.gallery'};
			
			my $sql=qq{
				SELECT
					*
				FROM
					`$App::501::db_name`.a501_image_view
				WHERE
					ID_entity_image=$relation->{'r_ID_entity'} AND
					ID_format=$App::501::image_format_fullsize_ID AND
					status IN ('Y','L')
				LIMIT 1
			};
			my %sth1=TOM::Database::SQL::execute($sql,'log'=>1,'-slave'=>1,'-cache'=>60);
			if (my %db1_line=$sth1{'sth'}->fetchhash())
			{
				$item=~s|<%image.db_(.*?)%>|$db1_line{$1}|g;
			}
			
			if ($XSGN{'TMP'}=~s|<#a501.gallery.$i#>|$item|)
			{
				
			}
			else
			{
				$XSGN{'TMP'}=~s|<#a501.gallery#>|$item|;
			}
			
#			$XSGN{'TMP'}=~s|<#a501.gallery#>|$item|g if $XSGN{'TMP'}=~/<#a501.gallery#>/;
			
#			if ($XSGN{'TMP'}=~/<#a501.gallery.#>/)
#			{
#			}
		}
		
		
		
		$XSGN{'TMP'}=~s|<%article\.db_(.*?)%>|$db0_line{$1}|g;
		
		$main::H->add_DOC_title($db0_line{'name'});
		
		
	}
	
	return 1;
}


our $authors="open\@comsultia.com";

=head1 AUTHORS

Comsultia, Ltd. (open@comsultia.com)

=cut

1;
