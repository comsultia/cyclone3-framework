#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

use App::401::_init;
use App::160::_init;
use TOM::Text::format;

=head1 NAME

401-article_cat_list.0.mdl

=cut

=head1 DESCRIPTION

List of folders and items

=cut

=head1 INPUTS

=over

=item *

B<ID> - ID parent záznamu ktorého childy sa zobrazujú

=item *

B<status> - default 'Y' - statusy stromu ktoré sa zobrazujú ( napr. 'YNT' )

=item *

B<db_order> - default 'ID_charindex' - zoradenie položiek v SQL syntaxe

=back

=cut

=head1 XSGN

=over

=item *

B<TMP> - default

=item *

B<ITEM> - položka stromu

=item *

B<ITEM-current> - aktuálna položka stromu ak je použitý vstupný parameter B<current_*>=''

=item *

B<SUB> - v režime 'tree' používané pre vytvorenie sub-stromu v strome

=item *

B<#tree#> - miesto pre vloženie sub-stromu

=item *

B<#item#> - miesto pre vloženie ITEM

=item *

B<%path%> - ID

=item *

B<%name%> - chýbajúci parameter

=back

Režim zoznamu:

 <XML_DESIGN_DEFINITION>
 
 <DEFINITION id="TMP">
  <#item#>
 </DEFINITION>
 
 <DEFINITION id="ITEM">
  <item IDitem="<%ID%>">
   <ID><%ID%></ID>
   <ID_entity><%ID_entity%></ID_entity>
   <IDparent><%ID_parent%></IDparent>
   <name><%name%></name>
   <name_url><%name_url%></name_url>
   <path><%path%></path>
   <datetime_create><%datetime_create%></datetime_create>
   <lng><%lng%></lng>
   <status><%status%></status>
  </item>
  <#item#>
 </DEFINITION>
 
 </XML_DESIGN_DEFINITION>

=cut


sub execute
{
	my %env=@_;
	Tomahawk::GetXSGN('-convertvars'=>1) || return undef;
	
	delete $env{'ID_charindex'};
	$env{'sql_limit'}=100 unless $env{'sql_limit'};
	$env{'sql_order_by'}='datetime_start DESC' unless $env{'sql_order_by'};
	
	my $from;
	my $sql_where;
	
	# language
	$sql_where.="lng='$env{'lng'}' ";
	
	# status
	if ($env{'status'})
	{
		$XSGN{'TMP'}=~s|<%required_status%>|$env{'status'}|g;
		$sql_where.="AND status IN ('".(join "','", split('',$env{'status'}))."') ";
	}
	else
	{
		$sql_where.="AND status='Y' ";
	}
	
	
	# find ID LIKE *
	if ($env{'article_cat.ID'}=~s/\*$//)
	{
		my $cat_sql=qq{
					SELECT
						ID_charindex
					FROM
						`$App::401::db_name`.a401_article_cat
					WHERE
						ID=$env{'article_cat.ID'}
					LIMIT 1
		};
		$env{'article_cat.ID*'} = qq{
			SELECT
				ID
			FROM
				`$App::401::db_name`.a401_article_cat
			WHERE
				ID_charindex LIKE CONCAT(($cat_sql),"%") AND
				lng='$env{'lng'}' AND
				status IN ('Y','N','L')
		};
		#TOM::Database::SQL::execute($cat_sql,'log'=>1);
	}
	
	
	if ($env{'article_cat.ID'})
	{
		$XSGN{'TMP'}=~s|<%ID%>|$env{'article_cat.ID'}|g;
		
		my %data=App::020::SQL::functions::get_ID(
			'db_h'    => 'main',
			'db_name' => $App::401::db_name,
			'tb_name' => 'a401_article_cat',
			'ID'      => $env{'article_cat.ID'},
			'columns' => 
			{
				'ID_charindex' => 1
			},
			'-slave' => 1
		);
		if ($data{'ID'})
		{
			$env{'ID_charindex'}=$data{'ID_charindex'}.':';
		}
		else
		{
			main::_log("can't find article_cat.ID='$data{'ID'}'",1);
			return undef;
		}
		
		my $path_;
		foreach my $node (App::020::SQL::functions::tree::get_path(
			$env{'article_cat.ID'},
			'db_h'    => 'main',
			'db_name' => $App::401::db_name,
			'tb_name' => 'a401_article_cat',
			'-slave' => 1
		))
		{$path_.='/'.$node->{'name'};}
		$path_=~s|^/||;
		
		$XSGN{'TMP'}=~s|<%location%>|$path_|g;
		
		if (!$env{'article_cat.ID*'})
		{
			# add parent as first folder item :))
			my %db0_line=App::020::SQL::functions::tree::get_parent_ID
			(
				'ID' => $env{'article_cat.ID'},
				'db_h' => 'main',
				'db_name' => $App::401::db_name,
				'tb_name' => 'a401_article_cat',
				'columns' => {'*' => 1,},
				'-slave' => 1
			);
			if ($db0_line{'ID'})
			{
				main::_log('adding parent');
				$XSGN{'NULL'}=$XSGN{'ITEM'};
				
				$XSGN{'NULL'}=~s|<%ID%>|$db0_line{'ID'}|g;
				$XSGN{'NULL'}=~s|<%db_name%>|..|g;
				$XSGN{'NULL'}=~s|<%folder%>|P|g;
				
				$XSGN{'TMP'}=~s|<#item#>|$XSGN{'NULL'}|;
			}
			else
			{
				$XSGN{'NULL'}=$XSGN{'ITEM'};
				
				$XSGN{'NULL'}=~s|<%ID%>||g;
				$XSGN{'NULL'}=~s|<%db_name%>|..|g;
				$XSGN{'NULL'}=~s|<%folder%>|P|g;
				
				$XSGN{'TMP'}=~s|<#item#>|$XSGN{'NULL'}|;
			}
		}
	}
	
	
	
	
	#
	# LISTING OF FOLDERS
	#
	
	
	
	my $sql=qq{
		SELECT
			*
		FROM
			`$App::401::db_name`.a401_article_cat
		WHERE
			$sql_where AND
			ID_charindex LIKE '$env{'ID_charindex'}___'
		ORDER BY
			ID_charindex
	};
	
	my @path;
	my @path_url;
	
	my %charindex_ID;
	
	my $level;
	my $level_prev;
	my $level_next;
	
	my %sth0=TOM::Database::SQL::execute($sql,'log'=>1,'slave'=>1);
	if ($sth0{'sth'} && !$env{'article_cat.ID*'})
	{
		
		while (my %db0_line=$sth0{'sth'}->fetchhash())
		{
			$charindex_ID{$db0_line{'ID_charindex'}}=$db0_line{'ID'};
			my $dbg=$db0_line{'ID_charindex'};
			$dbg=~s|^(.*?)(.{0,4})$|\1|;
			$db0_line{'ID_parent'}=$charindex_ID{$dbg};
			
			$XSGN{'NULL'}=$XSGN{'ITEM'};
			
			$XSGN{'NULL'}=~s|<%db_(.*?)%>|$db0_line{$1}|g;
			
			$XSGN{'NULL'}=~s|<%ID%>|$db0_line{'ID'}|g;
			$XSGN{'NULL'}=~s|<%ID_entity%>|$db0_line{'ID_entity'}|g;
			$XSGN{'NULL'}=~s|<%ID_parent%>|$db0_line{'ID_parent'}|g;
			$XSGN{'NULL'}=~s|<%folder%>|Y|g;
			
			$XSGN{'TMP'}=~s|<#item#>|$XSGN{'NULL'}|;
		}
		
	}
	else
	{
		main::_log("can't select");
	}
	
	
	
	#
	# LISTING OF ITEMS
	#
	
	if ($env{'keywords'}=~/^\d\d\d\d-\d\d-\d\d$/)
	{
		$sql_where.=" AND DATE(datetime_start)='$env{keywords}' ";
	}
	elsif ($env{'keywords'}=~/^\d\d\d\d-\d\d$/)
	{
		$sql_where.=" AND DATE(datetime_start) LIKE '$env{keywords}%' ";
	}
	elsif ($env{'keywords'}=~s/^\^//)
	{
		$sql_where.=" AND (";
		foreach (split(' ',$env{'keywords'}))
		{
			next unless $_;
			$sql_where.="(name LIKE '$_%') AND ";
		}
		$sql_where=~s|AND $||;
		$sql_where.=") ";
	}
	elsif ($env{'keywords'})
	{
		$sql_where.=" AND (";
		foreach (split(' ',$env{'keywords'}))
		{
			next unless $_;
			$sql_where.="(name LIKE '%$_%' OR abstract LIKE '%$_%' OR body LIKE '%$_%' OR keywords LIKE '%$_%') AND ";
		}
		$sql_where=~s|AND $||;
		$sql_where.=") ";
	}
	
	# WHERE CATEGORY
	my $where_category;
	$where_category="AND ID_category='$env{'article_cat.ID'}'" if $env{'article_cat.ID'};
	$where_category="AND ID_category IN ($env{'article_cat.ID*'})" if $env{'article_cat.ID*'};
	$where_category="" unless $env{'article_cat.ID'};
	if (!$env{'article_cat.ID'} && !$env{'article_cat.ID*'}){$where_category="AND ID_category=0";}
	
	$env{'sql_order_by'}=" ".$env{'sql_order_by'}." ";
	$env{'sql_order_by'}=~s/ ID_entity / ID_entity_article /;
	
	my $sql=qq{
		SELECT
			view.*,
			IF
			(
				(SELECT COUNT(*) FROM `$App::401::db_name`.a401_article_view WHERE ID_entity_article=view.ID_entity_article AND status IN ('Y','N')) > 1,
				'Y','N'
			) AS symlink,
			IF
			(
				(
					status LIKE 'Y' AND
					NOW() >= datetime_start AND
					(datetime_stop IS NULL OR NOW() <= datetime_stop)
				),
			 	'Y', 'N'
			) AS datetime_status
		FROM
			`$App::401::db_name`.a401_article_view AS view
		WHERE
			$sql_where
			$where_category
		ORDER BY
			$env{'sql_order_by'}
		LIMIT
			$env{'sql_limit'}
	};
	
	
	my %sth0=TOM::Database::SQL::execute($sql,'log'=>1,'slave'=>1);
	if ($sth0{'sth'})
	{
		while (my %db0_line=$sth0{'sth'}->fetchhash())
		{
			$XSGN{'NULL'}=$XSGN{'ITEM'};
			
			$XSGN{'NULL'}=~s|<%db_(.*?)%>|$db0_line{$1}|g;
			$XSGN{'NULL'}=~s|<%ID%>|$db0_line{'ID_article'}|g;
			$XSGN{'NULL'}=~s|<%ID_entity%>|$db0_line{'ID_entity_article'}|g;
			
			my %author=App::301::authors::get_author($db0_line{'posix_author'});
			$XSGN{'NULL'}=~s|<%author_(.*?)%>|$author{$1}|g;
			my %editor=App::301::authors::get_author($db0_line{'posix_editor'});
			$XSGN{'NULL'}=~s|<%editor_(.*?)%>|$editor{$1}|g;
			
			# check relations
			foreach my $relation (App::160::SQL::get_relations(
				'db_name' => $App::401::db_name,
				'l_prefix' => 'a401',
				'l_table' => 'article',
				'l_ID_entity' => $db0_line{'ID_entity_article'},
#				'rel_type' => $env{'rel_type'},
#				'r_prefix' => "a501",
#				'r_table' => "image",
				'status' => "Y"
			))
			{
				$XSGN{'NULL'}=~s|<%relation_status%>|Y|g;
				if ($relation->{'r_prefix'} eq "a541" && $relation->{'r_table'} eq "file")
				{$XSGN{'NULL'}=~s|<%attachment_status%>|Y|g;}
				if ($relation->{'r_prefix'} eq "a821" && $relation->{'r_table'} eq "discussion")
				{$XSGN{'NULL'}=~s|<%discussion_status%>|Y|g;}
			}
			
			# check relations
			if ($db0_line{'keywords'})
			{
				$XSGN{'NULL'}=~s|<%keywords_status%>|Y|g;
			}
			
			$XSGN{'NULL'}=~s|<%size%>|TOM::Text::format::bytes(length($db0_line{'abstract'}.$db0_line{'body'}))|ge;
			
			$XSGN{'TMP'}=~s|<#item#>|$XSGN{'NULL'}|;
		}
		
	}
	else
	{
		main::_log("can't select");
	}
	
	
	
	return 1;
}

our $authors="roman.fordinal\@comsultia.com";

=head1 AUTHORS

Roman Fordinal (roman.fordinal@comsultia.com)

=cut

1;
