#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use if $] < 5.018, 'encoding','utf8';
use utf8;
use strict;

use App::020::_init;
use App::401::_init;
use App::020::mimetypes::html;
		

sub execute
{
	my %env=@_;
	my %env_out;
	
	# paging
	$env{'page_limit'} = 100 unless $env{'page_limit'};
	$env{'page'} = 1 unless $env{'page'};
	$env{'page_offset'} = 0 unless $env{'page_offset'};
	$env{'page_plus'} = 1 unless $env{'page_plus'};
	if (!$env{'sql_limit'})
	{
		$env{'sql_limit'}=((($env{'page'}-1)*$env{'page_limit'})+$env{'page_offset'}).",".($env{'page_limit'}+$env{'page_plus'});
	}
	else
	{
#		$env{'sql_limit'}=~/^(\d+),?(\d+)?$/;
	}
	
	my @sql_bind;
		push @sql_bind,$env{'lng'};
	my $sql_where;
	my $sql_limit=$env{'sql_limit'} || 100;
	my $sql_order_by=$env{'sql_order_by'} || 'ID_charindex ASC';
	
	$env{'article_attrs.status'}='Y' unless $env{'article_attrs.status'};
		my $sql_article_attrs_status=join "','", split('',$env{'article_attrs.status'});
	
	Tomahawk::GetTpl(\%env) || return undef;
	
	delete $env{'article_cat.ID_charindex'};
	
	my $from;
	
	if ($env{'article_cat.ID_entity'})
	{
		my $sql_cat;
		foreach my $ID_category (split(';',$env{'article_cat.ID_entity'}))
		{
			next unless $ID_category;
			if ($ID_category=~s/\*$//)
			{
				my $cat_sql=qq{SELECT ID_charindex FROM $App::401::db_name.a401_article_cat WHERE ID_entity=$ID_category AND lng='$env{'lng'}' AND status IN ('Y','L') LIMIT 1};
				$ID_category=qq{SELECT ID_entity FROM $App::401::db_name.a401_article_cat WHERE ID_charindex LIKE CONCAT(($cat_sql),"%") AND lng='$env{'lng'}' AND status IN ('Y','L')};
			}
			$sql_cat.=" OR article_cat.ID_entity IN ($ID_category)";
			$sql_cat=~s/^ OR //;
		}
		if ($sql_cat)
		{
			$sql_where.=" AND (".$sql_cat.") ";
		}
	}
	
	if ($env{'article_cat.ID'}=~/;/)
	{
		$sql_where.=" AND article_cat.ID IN (".split(';',$env{'article_cat.ID'}).")";
	}
	elsif ($env{'article_cat.ID'})
	{
		my %data=App::020::SQL::functions::get_ID(
			'db_h'    => 'main',
			'db_name' => $App::401::db_name,
			'tb_name' => 'a401_article_cat',
			'ID'      => $env{'article_cat.ID'},
			'columns' => 
			{
				'ID_charindex' => 1
			}
		);
		if ($data{'ID'})
		{
			$env{'article_cat.ID_charindex'}=$data{'ID_charindex'}.':';
			
			$sql_where.=" AND article_cat.ID_charindex LIKE ?";
			push @sql_bind,$env{'article_cat.ID_charindex'}.'___';
		}
		else
		{
			main::_log("can't find ID='$data{'ID'}'",1);
			return undef;
		}
	}
	
	$sql_where=~s|^ ||;
	
	my %sth0=TOM::Database::SQL::execute(qq{
		SELECT
			*
		FROM
			$App::401::db_name.a401_article_cat AS article_cat
		WHERE
			article_cat.lng = ?
			AND article_cat.status IN ('Y','L')
			$sql_where
		ORDER BY
			$sql_order_by
		LIMIT
			$sql_limit
	},
		'bind'=>[@sql_bind],
		'quiet' => 1,
		'-cache' => 86400*7,
		'-changetime' => App::020::SQL::functions::_get_changetime(
			{
				'db_h'=>"main",
				'db_name' => $App::401::db_name,
				'tb_name' => "a401_article_cat"
			}
		)
	);
	
	my @nodes;
	while (my %db0_line=$sth0{'sth'}->fetchhash())
	{
		delete $db0_line{'metadata'};
		delete $db0_line{'t_keys'};
		
		foreach my $node (App::020::SQL::functions::tree::get_path(
			$db0_line{'ID'},
			'db_h'    => 'main',
			'db_name' => $App::401::db_name,
			'tb_name' => 'a401_article_cat',
			'-cache' => 86400*7,
		))
		{			
			push @{$db0_line{'path'}{'IDs'}}, $node->{'ID'};
			push @{$db0_line{'path'}{'nodes'}}, $node;
			$db0_line{'path_url'}.='/'.$node->{'name_url'};
		}
		$db0_line{'path_url'}=~s|^/||;
		
		$db0_line{'related_avatar'}=(App::160::SQL::get_relations(
			'db_name' => $App::401::db_name,
			'l_prefix' => 'a401',
			'l_table' => 'article_cat',
			'l_ID_entity' => $db0_line{'ID'},
			'r_prefix' => "a501",
			'r_table' => "image",
			'rel_type' => "avatar",
			'status' => "Y"
		))[0];
		
		# link to a210_page
		if (my $category=App::401::functions::_a210_by_cat([$db0_line{'ID'}],'lng'=>$env{'lng'}))
		{
			my %sql_def=('db_h' => "main",'db_name' => $App::210::db_name,'tb_name' => "a210_page");
			foreach my $p(
				App::020::SQL::functions::tree::get_path(
					$category,
					%sql_def,
					'-slave' => 1,
					'-cache' => 86400*7
				)
			)
			{
				push @{$db0_line{'a210'}{'IDs'}}, $p->{'ID'};
				push @{$db0_line{'a210'}{'nodes'}}, $p;
				$db0_line{'a210'}{'path_url'}.="/".$p->{'name_url'};
			}
			$db0_line{'a210'}{'path_url'}=~s|^/||;
		}
		
		if ($env{'count_contents'})
		{
			my %sth1=TOM::Database::SQL::execute(qq{
				SELECT
					
					article_ent.ID_entity
					
				FROM `$App::401::db_name`.a401_article_ent AS article_ent
				INNER JOIN `$App::401::db_name`.a401_article AS article ON
				(
					article_ent.ID_entity = article.ID_entity
				)
				INNER JOIN `$App::401::db_name`.a401_article_attrs AS article_attrs ON
				(
					article_attrs.ID_entity = article.ID AND
					article_attrs.status IN ('$sql_article_attrs_status') AND
					article_attrs.lng = '$env{'lng'}'
				)
				LEFT JOIN `$App::401::db_name`.a301_ACL_user_group AS ACL_world ON
				(
					ACL_world.ID_entity = 0 AND
					r_prefix = 'a401' AND
					r_table = 'article' AND
					r_ID_entity = article.ID_entity
				)
				WHERE
							article_ent.status = 'Y'
					AND	article.status = 'Y'
					AND	article_attrs.ID_category = $db0_line{'ID_entity'}
				GROUP BY
					article_ent.ID_entity
			},'bind'=>[],'log'=>1,'-slave'=>1,
				'-changetime'=>App::020::SQL::functions::_get_changetime(
					{
						'db_h'=>"main",
						'db_name' => $App::401::db_name,
						'tb_name' => "a401_article",
						'ID_entity' => do{$env{'article.ID_entity'} if $env{'article.ID_entity'}=~/^\d+$/}
					}),
			);
			
			$db0_line{'article_count'}=$sth1{'rows'} || 0;
		}
		
		
		if ($env{'parser.description'})
		{
			my $parser=new App::020::mimetypes::html(
				'tpl_ext' => $TPL # extend
			);	
			$parser->parse($db0_line{'description'});
			$parser->eof();
			$db0_line{'description_parser'}={
				'output' => $parser->{'output'},
				'addon' => $parser->{'addon'},
				'entity' => $parser->{'entity'},
				'thumbnail' => $parser->{'thumbnail'},
			};
		}
		
		$TPL->variables_push(\%db0_line);
	}
	
	push @{$env_out{'entity'}},{
		'db_h' => 'main',
		'db_name' => $App::401::db_name,
		'tb_name' => 'a401_article_cat'
	};
	
	return 1,%env_out;
}

1;
