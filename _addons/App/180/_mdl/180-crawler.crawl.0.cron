#!/usr/bin/perl
package CRON::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

use App::180::Crawler;

use Data::Dumper;

sub execute
{
	alarm(6000);
	# the configuration hash domain_config should internally hold all configs of
	# all domains to be scanned (for this cyclone3 domain - ie. customer)

	# print Dumper \%App::180::domain_config;

	# create a new crawler object for one of the domains (it must be in the hash btw.)
	
	#my $crawler = new App::180::Crawler( 'www.thomann.de');
	#my $crawler = new App::180::Crawler( 'kytary.cz');
	my $crawler = new App::180::Crawler( 'audiotek.cz');

	# browse this domain automatically (try to recover from the last visited page, or 
	# begin again from start)

	#$crawler ->browseAutoFromStart();

#	muziker pouziva toto
	$crawler ->browseAuto();


	#my $ref = $crawler -> visitPageTest('/product-18890-m-audio-keystation-88-es');

=head1

=cut


	my @url_list = 
	( 
		'/cz/miditech_midistart_3_usb.htm',
		'/cz/harley_benton_hbjc503ceq_nt.htm',
		'/cz/gibson_sj200_vs.htm',
		'/cz/gretsch_g5022_ce_rancher_jumbo.htm',
		'/cz/epiphone_ej200ce_vs.htm',
		'/cz/gibson_j45_rosewood_custom_vs.htm',
		'/cz/schiedmayer_sgp_186_e_p_fluegel.htm',
		'/cz/maudio_keystation_mini_32.htm',
		'/cz/arobas_guitar_pro_6.htm',
		'/cz/avid_sibelius_7.htm',
		'/cz/makemusic_finale_2012_d.htm',
		'/cz/avid_sibelius_7_incl_photoscore.htm',
		'/cz/makemusic_finale_printmusic_2011_d.htm'
	);
	
 	#my $ref = $crawler -> visitPageTest('/washburn-t14flb/HN107813/');
	#$crawler -> visitOnePageAndSaveResults('/cort-c5h-bks/HN109686/');
	#my $ref = $crawler -> visitPageTest('/cz/bluethner_modell_6.htm');
	#print $ref ->{'results'} ->[0] ->{'object'} ->{'product'} ->{'category1'}, "\n";
	#print $ref ->{'results'} ->[0] ->{'object'} ->{'product'} ->{'name'}, "\n";

	#$crawler -> visitOnePageAndSaveResults('/cz/millenium_rahmentrommel_8_mit_naturfell.htm');
	#sleep(1);
	#$crawler -> visitOnePageAndSaveResults('/cz/martin_guitars_omjm_john_mayer.htm');

	#$crawler -> visitOnePageAndSaveResults($_) for @url_list;

	#foreach my $item (@url_list)
	#{
#		$crawler -> visitOnePageAndSaveResults($item);
#		$crawler ->wait();
#	}
	



	return 1;	
}

1;
