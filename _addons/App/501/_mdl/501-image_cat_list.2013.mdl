#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

use App::020::_init;
use App::501::_init;


sub execute
{
	my %env=@_;
	my %env_out;
	
	# paging
	$env{'page_limit'} = 100 unless $env{'page_limit'};
	$env{'page'} = 1 unless $env{'page'};
	$env{'page_offset'} = 0 unless $env{'page_offset'};
	$env{'page_plus'} = 1 unless $env{'page_plus'};
	if (!$env{'sql_limit'})
	{
		$env{'sql_limit'}=((($env{'page'}-1)*$env{'page_limit'})+$env{'page_offset'}).",".($env{'page_limit'}+$env{'page_plus'});
	}
	else
	{
#		$env{'sql_limit'}=~/^(\d+),?(\d+)?$/;
	}
	
	my @sql_bind;
		push @sql_bind,$env{'lng'};
	my $sql_where;
	my $sql_limit=$env{'sql_limit'} || 100;
	my $sql_order_by=$env{'sql_order_by'} || 'ID_charindex ASC';
	
	Tomahawk::GetTpl(\%env) || return undef;
	
	delete $env{'image_cat.ID_charindex'};
	
	my $from;
	
	if ($env{'image_cat.ID_entity'})
	{
		my $sql_cat;
		foreach my $ID_category (split(';',$env{'image_cat.ID_entity'}))
		{
			next unless $ID_category;
			if ($ID_category=~s/\*$//)
			{
				my $cat_sql=qq{SELECT ID_charindex FROM $App::501::db_name.a501_image_cat WHERE ID_entity=$ID_category AND lng='$env{'lng'}' AND status IN ('Y','L') LIMIT 1};
				$ID_category=qq{SELECT ID_entity FROM $App::501::db_name.a501_image_cat WHERE ID_charindex LIKE CONCAT(($cat_sql),"%") AND lng='$env{'lng'}' AND status IN ('Y','L')};
			}
			$sql_cat.=" OR image_cat.ID_entity IN ($ID_category)";
			$sql_cat=~s/^ OR //;
		}
		if ($sql_cat)
		{
			$sql_where.=" AND (".$sql_cat.") ";
		}
	}
	
	if ($env{'image_cat.ID'}=~/;/)
	{
		$sql_where.=" AND image_cat.ID IN (".split(';',$env{'image_cat.ID'}).")";
	}
	elsif ($env{'image_cat.ID'})
	{
		my %data=App::020::SQL::functions::get_ID(
			'db_h'    => 'main',
			'db_name' => $App::501::db_name,
			'tb_name' => 'a501_image_cat',
			'ID'      => $env{'image_cat.ID'},
			'columns' => 
			{
				'ID_charindex' => 1
			}
		);
		if ($data{'ID'})
		{
			$env{'image_cat.ID_charindex'}=$data{'ID_charindex'}.':';
			
			$sql_where.=" AND image_cat.ID_charindex LIKE ?";
			push @sql_bind,$env{'image_cat.ID_charindex'}.'___';
		}
		else
		{
			main::_log("can't find ID='$data{'ID'}'",1);
			return undef;
		}
	}
	
	$sql_where=~s|^ ||;
	
	my %sth0=TOM::Database::SQL::execute(qq{
		SELECT
			*
		FROM
			$App::501::db_name.a501_image_cat AS image_cat
		WHERE
			image_cat.lng = ?
			AND image_cat.status IN ('Y','L')
			$sql_where
		ORDER BY
			$sql_order_by
		LIMIT
			$sql_limit
	},
		'bind'=>[@sql_bind],
		'quiet' => 1,
		'-cache' => 86400*7,
		'-changetime' => App::020::SQL::functions::_get_changetime(
			{
				'db_h'=>"main",
				'db_name' => $App::501::db_name,
				'tb_name' => "a501_image_cat"
			}
		)
	);
	
	my @nodes;
	while (my %db0_line=$sth0{'sth'}->fetchhash())
	{
		delete $db0_line{'metadata'};
		delete $db0_line{'t_keys'};
		
		foreach my $node (App::020::SQL::functions::tree::get_path(
			$db0_line{'ID'},
			'db_h'    => 'main',
			'db_name' => $App::501::db_name,
			'tb_name' => 'a501_image_cat',
			'-cache' => 86400*7,
		))
		{
			$db0_line{'path_url'}.='/'.$node->{'name_url'};
		}
		$db0_line{'path_url'}=~s|^/||;
		
		$db0_line{'related_avatar'}=(App::160::SQL::get_relations(
			'db_name' => $App::501::db_name,
			'l_prefix' => 'a501',
			'l_table' => 'image_cat',
			'l_ID_entity' => $db0_line{'ID'},
			'r_prefix' => "a501",
			'r_table' => "image",
			'rel_type' => "avatar",
			'status' => "Y"
		))[0];
		
		if ($env{'image'})
		{
			my %sth1=TOM::Database::SQL::execute(qq{
				SELECT
					image.ID,
					image.ID_entity,
					image_ent.posix_owner AS ent_posix_owner,
					image_ent.posix_author AS ent_posix_author,
					image_ent.datetime_produce AS ent_datetime_produce,
					image_ent.rating_score AS ent_rating_score,
					image_ent.rating_votes AS ent_rating_votes,
					image_ent.metadata AS ent_metadata,
					image_attrs.name AS attrs_name,
					image_attrs.name_url AS attrs_name_url,
					image_attrs.description AS attrs_description,
					image_attrs.keywords AS attrs_keywords,
					image_attrs.order_id AS attrs_order_id,
					image_cat.ID AS cat_ID,
					image_cat.ID_entity AS cat_ID_entity,
					image_cat.ID_charindex AS cat_ID_charindex,
					image_cat.name AS cat_name,
					image_cat.name_url AS cat_name_url,
					image_file.name AS file_name,
					image_file.image_width AS file_image_width,
					image_file.image_height AS file_image_height,
					image_file.file_size AS file_size,
					image_file.file_ext AS file_ext
				FROM
					$App::501::db_name.a501_image AS image
				INNER JOIN $App::501::db_name.a501_image_ent AS image_ent ON
				(
					image_ent.ID_entity = image.ID_entity
					AND image_ent.status IN ('Y','L')
				)
				INNER JOIN $App::501::db_name.a501_image_attrs AS image_attrs ON
				(
					image_attrs.ID_entity = image.ID
					AND image_attrs.lng = '$env{'lng'}'
					AND image_attrs.status IN ('Y','L')
				)
				LEFT JOIN $App::501::db_name.a501_image_cat AS image_cat ON
				(
					image_cat.ID_entity = image_attrs.ID_category
					AND image_cat.lng = image_attrs.lng
					AND image_cat.status IN ('Y','L')
				)
				INNER JOIN $App::501::db_name.a501_image_file AS image_file ON
				(
					image_file.ID_entity = image.ID_entity
					AND image_file.status IN ('Y','L')
					AND image_file.ID_format = 1
				)
				WHERE
					image.status IN ('Y','L')
					AND image_cat.ID_entity = ?
				ORDER BY
					image.ID_entity DESC
				LIMIT
					1
			},'bind'=>[
				$db0_line{'ID_entity'}
			],'log_'=>1,'-slave'=>1,
				'-changetime'=>App::020::SQL::functions::_get_changetime(
					{
						'db_h'=>"main",
						'db_name' => $App::501::db_name,
						'tb_name' => "a501_image"
					}),
			);
			my %db1_line=$sth1{'sth'}->fetchhash();
			push @{$db0_line{'image'}},\%db1_line;
		}
		
		# link to a210_page
		if (my $category=App::501::functions::_a210_by_cat([$db0_line{'ID'}],'lng'=>$env{'lng'}))
		{
			my %sql_def=('db_h' => "main",'db_name' => $App::210::db_name,'tb_name' => "a210_page");
			foreach my $p(
				App::020::SQL::functions::tree::get_path(
					$category,
					%sql_def,
					'-slave' => 1,
					'-cache' => 86400*7
				)
			)
			{
				push @{$db0_line{'a210'}{'IDs'}}, $p->{'ID'};
				push @{$db0_line{'a210'}{'nodes'}}, $p;
				$db0_line{'a210'}{'path_url'}.="/".$p->{'name_url'};
			}
			$db0_line{'a210'}{'path_url'}=~s|^/||;
		}
		
		$TPL->variables_push(\%db0_line);
	}
	
	push @{$env_out{'entity'}},{
		'db_h' => 'main',
		'db_name' => $App::501::db_name,
		'tb_name' => 'a501_image_cat'
	};
	
	return 1,%env_out;
}

1;
