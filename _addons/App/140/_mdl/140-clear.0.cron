#!/bin/perl
# ÁÉÍÓÚ - USE UTF-8 !!!
package CRON::module;
use strict;


sub execute
{
 my %env=@_;
 if ($cron::P ne $CRON::P){$cron::ERR="WARN: this cron is only for global use!!!";return undef}

 if (!$env{max_days}){$cron::ERR="not defined max_days old logs";return undef;}

	my $dir_step;
	
	my @files;
	opendir (DIR, $TOM::P);
	push @files, readdir DIR;
	my $dir=$TOM::P;
	
	while (my $file=shift @files)
	{
		
		my $count=@files;
		
#		main::_log("dir_step=$dir_step count=$count");
		
		if (!$dir_step && $count==0)
		{
			main::_log("opening second '$TOM::path_log'");
			opendir (DIR2, $TOM::path_log);
			push @files, readdir DIR2;
			$dir=$TOM::path_log;
			$dir_step++;
			next;
		}
		
		if (($file ne ".")&&($file ne ".."))
		{
			next if $file =~/!media/;
			next if $file =~/!www/;
			next if $file =~/_data/;
			next if $file =~/_addons/;
			next if $file =~/_debug/;
			next if $file =~/\.svn/;
			next if $file =~/_type/;
			next if $file =~/_mdl/;
			next if $file =~/\.core/;
			next if $file =~/\.libs/;
			next if $file =~/httpd/;
			
			if
			(
				(-d $dir."/".$file) &&
				(
					($file=~/![\w\.\-]+$/)
					||
					($file=~/\/[\w\.\-]+$/)
					||
					($file=~/_logs$/)
					||
					($dir_step)
				)
			)
			{
				main::_log("opening dir $file");
				if (opendir (DIR1,$dir."/".$file))
				{foreach (readdir DIR1)
				{
					if (($_ ne ".")&&($_ ne "..")){push @files,$file."/".$_;}}
				}
			}
			
			if ($file=~/\.log$/)
			{
				$file =~ /^.*\d\.(.*?)\.log$/; my $log_type = $1;
				
				my $max_days = $env{max_days};
				if ($log_type && $TOM::DEBUG_log_type{$log_type}{'max_days'})
				{
					$max_days = $TOM::DEBUG_log_type{$log_type}{'max_days'};
				}
				my $max_secs = $max_days*86400;
				
				main::_log("$dir/$file (max $max_secs)");
				
				my $var=(stat $dir."/".$file)[9];
				if (($main::time_current-$var)>$max_secs)
				{
					main::_log("$file old ".($cron::time_current-$var).", removing...");
					unlink $dir."/".$file;
				}
			}
		}
		
		
	}
	
	
 return 1}

1;
