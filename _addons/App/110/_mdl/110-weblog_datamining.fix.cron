#!/bin/perl
# USE UTF-8 !!!
package CRON::module;

=head1 NAME

110-weblog_datamining.fix.cron

=head1 DESCRIPTION

Postprocessing of every one line writed into TOM.a110_weblog_rqs

Analyses type of useragent, if previous request is known, and refferer type.

=head1 DEPENDS

=over

=item *

Time::Local

=item *

L<TOM::Net::HTTP|source-doc/".core/.libs/TOM/Net/HTTP.pm">

=item *

L<TOM::Net::HTTP::UserAgent|source-doc/".core/.libs/TOM/Net/HTTP/UserAgent.pm">

=item *

L<TOM::Net::HTTP::referer|source-doc/".core/.libs/TOM/Net/HTTP/referer.pm">

=back

=cut

use Time::Local;
use TOM::Net::HTTP;
use TOM::Net::HTTP::UserAgent;
use TOM::Net::HTTP::referer;
use strict;


sub execute
{
	my %env=@_;
	
	alarm(0);
	
	my $time_max=60*60;
	
	TOM::Database::connect::multi('stats') || die "cannot connect all databases";
	
	my $lock=new TOM::lock("weblog datamining - fix") || return 1;
	
	my %sth0=TOM::Database::SQL::execute(qq{
		SELECT
			page_code,
			page_code_referer,
			user_agent,
			IP,
			reqdatetime,
			reqtime,
			referer,
			domain,
			query_URL
		FROM
			TOM.a110_weblog_rqs
		WHERE
			active='N'
		ORDER BY
			reqdatetime ASC
		LIMIT 50000
	},'db_h'=>'stats');
	my $time_start=time();
	while (my %db0_line=$sth0{'sth'}->fetchhash())
	{
		
		if ($time_start+$time_max<time())
		{
			main::_log("this job is running too long, exiting",1);
			last;
		}
		
		main::_log("user_agent='$db0_line{user_agent}'");
		
		my $user_agent_name;
		my $user_agent;
		my $reqtype;
		my %hash;
		
		($user_agent,$hash{'user_agent_name'})
			=TOM::Net::HTTP::UserAgent::analyze($db0_line{user_agent},IP=>$db0_line{IP});
		if ($hash{'user_agent_name'})
		{
			$user_agent_name="'".$hash{'user_agent_name'}."'";
			$hash{'reqtype'}
				= $TOM::Net::HTTP::UserAgent::type{
					$TOM::Net::HTTP::UserAgent::table[$user_agent]{'agent_type'}
				};
			# unknown browser
			if (!$hash{'reqtype'})
			{
				$reqtype='NULL';
			}
			else
			{
				$reqtype="'".$hash{'reqtype'}."'";
			}
		}
		else
		{
			$user_agent_name="NULL";
			$reqtype="NULL";
		}
		
		
		if (!$db0_line{'page_code_referer'} &&
		$TOM::Net::HTTP::UserAgent::type{$TOM::Net::HTTP::UserAgent::table[$user_agent]{'agent_type'}}=~/browser/)
		{
			main::_log("Unknown page_code_referer: page_code='$db0_line{'page_code'}' IP='$db0_line{'IP'}' reqdatetime='$db0_line{'reqdatetime'}' query_URL='$db0_line{'query_URL'}' referer='$db0_line{'referer'}'");
			
			my %sth1=TOM::Database::SQL::execute(qq{
				SELECT
					page_code,
					page_code_referer,
					user_agent,
					IP,
					reqdatetime,
					referer,
					query_URL
				FROM TOM.a110_weblog_rqs
				WHERE
					user_agent='$db0_line{'user_agent'}' AND
					IP='$db0_line{'IP'}' AND
					domain='$db0_line{'domain'}' AND
					reqdatetime<'$db0_line{'reqdatetime'}' AND
					reqtime>".($db0_line{'reqtime'}-(60*20))."
				ORDER BY reqdatetime DESC
				LIMIT 1
			},'db_h'=>'stats');
			if (my %db1_line=$sth1{'sth'}->fetchhash())
			{
				main::_log(" found: page_code='$db1_line{'page_code'}' reqdatetime='$db1_line{'reqdatetime'}' query_URL='$db1_line{'query_URL'}' referer='$db0_line{'referer'}'");
				
				my $sql=qq{
					UPDATE TOM.a110_weblog_rqs
					SET
						page_code_referer='$db1_line{page_code}'
					WHERE
						page_code='$db0_line{page_code}'
						AND reqdatetime='$db0_line{reqdatetime}'
					LIMIT 1
				};
				TOM::Database::SQL::execute($sql,'quiet'=>1,'db_h'=>'stats') || die "can't update";
				
			}
		}
		
		# referer_SE
		my $referer_SE="NULL";
		my ($domain,$query)=TOM::Net::HTTP::domain_clear($db0_line{'referer'});
		if (my $dom=TOM::Net::HTTP::referer::analyze($domain))
		{
			if
			(
				($TOM::Net::HTTP::referer::table{$dom}{domain_type} eq "search engine")
			)
			{
				$referer_SE="'".$dom."'";
			}
		}
		
		
		main::_log("'$db0_line{page_code}:$db0_line{reqdatetime}' user_agent_name='$hash{user_agent_name}' type='$hash{reqtype}' ($user_agent_name $reqtype)");
		my $sql=qq{
			UPDATE TOM.a110_weblog_rqs
			SET
				user_agent_name=$user_agent_name,
				reqtype=$reqtype,
				referer_SE=$referer_SE,
				active='Y'
			WHERE
				page_code='$db0_line{page_code}'
				AND reqdatetime='$db0_line{reqdatetime}'
			LIMIT 1
		};
		TOM::Database::SQL::execute($sql,'quiet'=>1,'db_h'=>'stats') || die "can't update";
		
		next;
		
	}
	
	$lock->close();
	
 return 1}

1;
