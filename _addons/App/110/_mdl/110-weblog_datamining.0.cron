#!/bin/perl
# USE UTF-8 !!!
package CRON::module;
use strict;

=head1 NAME

110-weblog_datamining.0.cron

=cut

=head1 DESCRIPTION

This cron module raw data from XML files stored by publisher and fills it into database tables a110_weblog_rqs and a110_sitemap

XML files is stored in /www/TOM/_logs/weblog/

=cut

=head1 DEPENDS

=over

=item *

Time::Local

=item *

L<TOM::lock|source-doc/".core/.libs/TOM/lock.pm">

=back

=cut

use Time::Local;
use TOM::lock;
use TOM::Net::HTTP;
use TOM::Net::HTTP::referer;
use TOM::Net::HTTP::UserAgent;
use App::110::_init;

sub execute
{
	alarm(0);
	my %env=@_;
	
	my $sitemap=0;
	my $time_start=time();
	my $time_max=60*20;
	
	my $DELAYED;
	my $INSERT="INSERT";
	my $multi=500;
	my $multilite=10;
	my $LOCK=0;
#	$INSERT="REPLACE";
#	$DELAYED="DELAYED" if $TOM::DB{'stats'}{'delayed'};
	
	TOM::Database::connect::multi('stats') || die "cannot connect all databases";
	
	my $lock=new TOM::lock("weblog datamining") || return 1;
	
	
	my %last_request=App::110::SQL::get_last_active_request();
	
	if ($last_request{'reqtime'}+(3600*3) > time())
	{
		$DELAYED="DELAYED";
		main::_log("enabling DELAYED inserts");
	}
	
	if ($last_request{'reqtime'}+(3600*24) < time())
	{
		$LOCK=1;
		main::_log("enabling LOCK inserts");
	}
	
#	return 1;
	
#	if ($last_request{'reqtime'})
#	{
#		$time_to=$last_request{'reqtime'}-3600;
#		main::_log("last active row TOM.a110_weblog_rqs has time ='$time_to'");
#	}
#	else
#	{
#		main::_log("none rows in TOM.a110_weblog_rqs - can't create statistics...");
#		return 1;
#	}
	
	
	
	main::_log("locking tables") if $LOCK;
	TOM::Database::SQL::execute("UNLOCK TABLES",'db_h'=>'stats','log'=>1) if $LOCK;
	TOM::Database::SQL::execute("LOCK TABLES TOM.a110_weblog_rqs WRITE, TOM.a110_weblog_rqslite WRITE",'db_h'=>'stats','log'=>1) if $LOCK;
#	TOM::Database::SQL::execute("LOCK TABLES TOM.a110_weblog_rqslite WRITE",'db_h'=>'stats');
	main::_log("tables locked") if $LOCK;
	
	
#	return 1;
	
	my $mintime=Time::Local::timelocal(0, 0, $cron::Thour, $cron::Tmday, $cron::Tmom-1, $cron::Tyear-1900, undef, undef, undef);
	
	my $items_all;
	
	if (opendir (DIR, $TOM::P."/_logs/weblog"))
	{
		my $items;
		my $itemslite;
		my $sql;
		my $sqllite;
		foreach my $file(sort readdir DIR)
		{
			next unless -d $TOM::P."/_logs/weblog/".$file;
			next unless $file=~/^(\d\d\d\d)\-(\d\d)\-(\d\d)\.(\d\d)$/;
			
			my $starttime=Time::Local::timelocal(0, 0 ,$4,$3,($2-1),($1-1900),undef,undef,undef);
			
			if ($starttime<$mintime)
			{
				
				main::_log("opening dir=$file");
				
				
				if (opendir (DIR1, $TOM::P."/_logs/weblog/".$file))
				{
					foreach my $file1 (sort readdir DIR1)
					{
						
						open (HND_IN, "<".$TOM::P."/_logs/weblog/".$file."/".$file1) || next;
						next if $file1 eq ".";
						next if $file1 eq "..";
						main::_log(" found file $file/$file1");
						my $file_data;
						
						while (my $line=<HND_IN>)
						{
							$file_data.=$line;
							if ($file_data=~s/<request>(.*?)<\/request>//s)
							{
								my $data=$1;
								my %hash;
								while ($data=~s|<(.*?)>(.*?)</\1>||)
								{
									my $var=$1;
									my $value=$2;
									$hash{$var}=$value;
								}
								
								my $user_agent_name;
								my $user_agent;
								my $reqtype;
								
								($user_agent,$hash{'user_agent_name'})
									=TOM::Net::HTTP::UserAgent::analyze($hash{'user_agent'},IP=>$hash{'IP'});
								if ($hash{'user_agent_name'})
								{
									$user_agent_name="'".$hash{'user_agent_name'}."'";
									$hash{'reqtype'}
										= $TOM::Net::HTTP::UserAgent::type{
											$TOM::Net::HTTP::UserAgent::table[$user_agent]{'agent_type'}
										};
									# unknown browser
									if (!$hash{'reqtype'})
									{
										$reqtype='NULL';
									}
									else
									{
										$reqtype="'".$hash{'reqtype'}."'";
									}
								}
								else
								{
									$user_agent_name="NULL";
									$reqtype="NULL";
								}
								
								# referer_SE
								my $referer_SE="NULL";
								my ($domain,$query)=TOM::Net::HTTP::domain_clear($hash{'referer'});
								if (my $dom=TOM::Net::HTTP::referer::analyze($domain))
								{
									if
									(
										($TOM::Net::HTTP::referer::table{$dom}{domain_type} eq "search engine")
									)
									{
										$referer_SE="'".$dom."'";
									}
								}
								
								foreach (keys %hash)
								{
									$hash{$_}=~s|\\|\\\\|g;
									$hash{$_}=~s|\'|\\'|g;
								}
								
								$items++;
								$items_all++;
								$sql.=qq{,('$hash{page_code}', '$hash{page_code_referer}', '$hash{unique_id}', '$hash{reqtime}', '$hash{reqdatetime}', '$hash{host}', '$hash{domain}', '$hash{domain_sub}', '$hash{IP}', '$hash{IDhash}', '$hash{IDsession}', '$hash{logged}', '$hash{USRM_flag}', '$hash{query_string}', '$hash{query_TID}', '$hash{query_URL}', '$hash{referer}', '$hash{user_agent}', '$hash{load_proc}', '$hash{load_req}', '$hash{result}', '$hash{lng}', $reqtype, $referer_SE, $user_agent_name, 'Y')
};								
								
								if ($items_all/$App::110::sql_rqslite == int($items_all/$App::110::sql_rqslite))
								{
									$sqllite.=qq{,('$hash{page_code}', '$hash{page_code_referer}', '$hash{reqdatetime}', '$hash{host}', '$hash{domain}', '$hash{domain_sub}', '$hash{IP}', '$hash{IDhash}', '$hash{IDsession}', '$hash{logged}', '$hash{USRM_flag}', '$hash{query_string}', '$hash{query_TID}', '$hash{query_URL}', '$hash{referer}', '$hash{user_agent}', '$hash{load_proc}', '$hash{load_req}', '$hash{result}', '$hash{lng}', $reqtype, $referer_SE, $user_agent_name, 'Y')
};									
									$itemslite++;
								}
								
								if ($items >= $multi)
								{
									$sql=~s|^,||;
									main::_log(" inserting $items rows");
									my %sth0=TOM::Database::SQL::execute(qq{
										$INSERT $DELAYED INTO TOM.a110_weblog_rqs
										(
											page_code,
											page_code_referer,
											HTTP_unique_id,
											reqtime,
											reqdatetime,
											host,
											domain,
											domain_sub,
											IP,
											IDhash,
											IDsession,
											logged,
											USRM_flag,
											query_string,
											query_TID,
											query_URL,
											referer,
											user_agent,
											load_proc,
											load_req,
											result,
											lng,
											reqtype,
											referer_SE,
											user_agent_name,
											active
										)
										VALUES
									}.$sql,'log'=>0,'db_h'=>'stats');
									if ($sth0{'err'}){die "can't insert $sth0{'err'}\n";}
									$items=0;
									$sql='';
								}
								
								if ($itemslite >= $multilite)
								{
									$sqllite=~s|^,||;
									main::_log(" inserting $items literows");
									my %sth0=TOM::Database::SQL::execute(qq{
										$INSERT $DELAYED INTO TOM.a110_weblog_rqslite
										(
											page_code,
											page_code_referer,
											reqdatetime,
											host,
											domain,
											domain_sub,
											IP,
											IDhash,
											IDsession,
											logged,
											USRM_flag,
											query_string,
											query_TID,
											query_URL,
											referer,
											user_agent,
											load_proc,
											load_req,
											result,
											lng,
											reqtype,
											referer_SE,
											user_agent_name,
											active
										)
										VALUES
									}.$sqllite,'log'=>0,'db_h'=>'stats');
									if ($sth0{'err'}){die "can't insert $sth0{'err'}\n";}
									$itemslite=0;
									$sqllite='';
								}
								
								if ($hash{'sitemap'} && $hash{'result'} eq "ok" && $sitemap)
								{
									main::_log("this is sitemap request ($hash{'domain_sub'}/$hash{'query_TID'})");
									my $URL=$hash{'query_URL'};
									
									$URL=~s|\?.*$||;
									
									my $ID;
									
									my %sth0=TOM::Database::SQL::execute(qq{
										SELECT
											ID
										FROM
											TOM.a110_sitemap_day
										WHERE
											date_create=DATE(FROM_UNIXTIME($hash{reqtime})) AND
											domain='$hash{domain}' AND
											domain_sub='$hash{domain_sub}' AND
											url='$URL'
										LIMIT 1
									},'db_h'=>'stats','quiet'=>1);
									if (my %db0_line=$sth0{'sth'}->fetchhash())
									{
										$ID=$db0_line{'ID'};
										main::_log("found under ID='$ID'");
									}
									else
									{
										my %sth0=TOM::Database::SQL::execute(qq{
											INSERT INTO TOM.a110_sitemap_day
											(
												domain,
												domain_sub,
												date_create,
												url
											)
											VALUES
											(
												'$hash{domain}',
												'$hash{domain_sub}',
												DATE(FROM_UNIXTIME($hash{reqtime})),
												'$URL'
											)
										},'quiet'=>1,'db_h'=>'stats');
										$ID = $sth0{'sth'}->{'mysql_insertid'};
										main::_log("inserted under ID='$ID'");
									}
									
									TOM::Database::SQL::execute(qq{
										UPDATE TOM.a110_sitemap_day
										SET
											lastmod='$hash{lastmod}',
											changefreq='$hash{changefreq}',
											weight='$hash{weight}',
											requests=requests+1
										WHERE
											ID='$ID'
										LIMIT 1
									},'quiet'=>1);
									
								}
								
								
							}
							
						}
						
						unlink $CRON::P."/_logs/weblog/".$file."/".$file1;
						
						
						
					}
					
				}
				
				rmdir $TOM::P."/_logs/weblog/".$file;
				
				if ($time_start+$time_max<time())
				{
					if ($items)
					{
						$sql=~s|^,||;
						main::_log(" inserting $itemslite rows");
						my %sth0=TOM::Database::SQL::execute(qq{
							$INSERT $DELAYED INTO TOM.a110_weblog_rqs
							(
								page_code,
								page_code_referer,
								HTTP_unique_id,
								reqtime,
								reqdatetime,
								host,
								domain,
								domain_sub,
								IP,
								IDhash,
								IDsession,
								logged,
								USRM_flag,
								query_string,
								query_TID,
								query_URL,
								referer,
								user_agent,
								load_proc,
								load_req,
								result,
								lng,
								reqtype,
								referer_SE,
								user_agent_name,
								active
							)
							VALUES
						}.$sql,'log'=>0,'db_h'=>'stats');
						if ($sth0{'err'})
						{die "can't insert $sql\n";}
						$items=0;
					}
					if ($itemslite)
					{
						$sqllite=~s|^,||;
						main::_log(" inserting $itemslite literows");
						my %sth0=TOM::Database::SQL::execute(qq{
							$INSERT $DELAYED INTO TOM.a110_weblog_rqslite
							(
								page_code,
								page_code_referer,
								reqdatetime,
								host,
								domain,
								domain_sub,
								IP,
								IDhash,
								IDsession,
								logged,
								USRM_flag,
								query_string,
								query_TID,
								query_URL,
								referer,
								user_agent,
								load_proc,
								load_req,
								result,
								lng,
								reqtype,
								referer_SE,
								user_agent_name,
								active
							)
							VALUES
						}.$sqllite,'log'=>0,'db_h'=>'stats');
						if ($sth0{'err'}){die "can't insert $sth0{'err'}\n";}
						$itemslite=0;
						$sqllite='';
					}
					
					main::_log("this job is running too long, exiting",1);
					TOM::Database::SQL::execute("UNLOCK TABLES",'db_h'=>'stats','quiet'=>1);
					return 1;
				}
				
			}
			
		}
	}
	
	main::_log("unlocking tables") if $LOCK;
	TOM::Database::SQL::execute("UNLOCK TABLES",'db_h'=>'stats','quiet'=>1) if $LOCK;
	main::_log("unlocked tables") if $LOCK;
	
	$lock->close();
	
	return 1
}

=head1 AUTHORS

Roman Fordinal (roman.fordinal@comsultia.com)

=cut

1;
