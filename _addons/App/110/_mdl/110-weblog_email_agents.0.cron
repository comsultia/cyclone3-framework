#!/usr/bin/perl
# áéíóú - USE UTF-8 !!!
package CRON::module;

use TOM::Net::HTTP::UserAgent; # detekcia a praca s UserAgentami
use Utils::datetime;
use TOM::Utils::datetime;
use TOM::Net::email;
use strict;

=head1 NAME

110-weblog_email_agents.0.cron

=head1 DEPENDENCIES

Libraries:

 TOM::Utils::datetime

=head1 DESCRIPTION

This cron sends information about UserAgents.

=cut

our $authors = "gregor\@webcom.sk";

sub execute
{
	alarm(0);
	my %env=@_;
	
	my $tpl=new TOM::Template(
		'level' => "auto",
		'name' => "email-stats",
		'content-type' => "xhtml"
	);
	
	$env{to_email} = $TOM::contact{'stats'}.";".$TOM::contact{'TOM'}.";".$env{'email'};
	$env{to_email}=TOM::Utils::vars::unique_split($env{to_email});
	
	# DESIGN
	$tpl->{'entity'}{'email.xhtml'}=~s|<%main-title%>|UserAgent summary|g;
	$tpl->{'entity'}{'email.xhtml'}=~s|<%main-desc%>|This statistic is summary from last 31 days|g;
	#$tpl->{'entity'}{'email.xhtml'}=~s|<%main-term%>|$firstday - $lastday|g;
	
	my $date = TOM::Utils::datetime::mail_current();
	
	my $msg = MIME::Entity->build
	(
		'Type'    => "multipart/related",
		'List-Id' => "Cyclone3",
		'Date'    => $date,
		'From'    => "$tom::H ($TOM::hostname) <$TOM::contact{'from'}>",
		'To'      => TOM::Net::email::convert_TO($env{'to_email'}),
		'Subject' => "Cyclone3 Stats: UserAgent statistics"
	);
	
	my $sql=qq{
		SELECT
			reqtype,
			user_agent_name,
			COUNT(*) AS requests,
			COUNT(DISTINCT(IDhash)) AS users
		FROM
			TOM.a110_weblog_rqs
		WHERE
			active='Y' AND
			reqdatetime > DATE_SUB(CURDATE(), INTERVAL 31 DAY)
		GROUP BY
			reqtype, user_agent_name
		ORDER BY
			reqtype DESC, requests DESC
	};
	
	my %sth0=TOM::Database::SQL::execute($sql,'db_h'=>'stats');
	
	my %table_agent;
	my %table_type;
	my %groups=(
		'B' => 'BROWSERS',
		'G' => 'BROWSER GROUPS',
		'R' => 'ROBOTS / CRAWLERS',
		'm' => 'MOBILE DEVICES',
		'd' => 'DOWNLOADERS',
	);
	my $groupmark='G';
	
	# tu len spocitam hodnoty
	while ( my %db0_line = $sth0{'sth'}->fetchhash )
	{
		$db0_line{'reqtype'} = 'X' unless $db0_line{'reqtype'};
		
		my $type = $db0_line{'reqtype'};
		my $agent = $db0_line{'user_agent_name'};
		
		$table_agent{$type}{$agent}{'users'} += $db0_line{'users'};
		$table_agent{$type}{$agent}{'requests'} += $db0_line{'requests'};
		
		$table_type{$type}{'users'} += $db0_line{'users'};
		$table_type{$type}{'requests'} += $db0_line{'requests'};
		
		if ( $type eq 'B' )
		{
			my $agent_ID = TOM::Net::HTTP::UserAgent::getIDbyName( $agent );
			my $group_name = $TOM::Net::HTTP::UserAgent::table[$agent_ID]{'agent_group'};
			
			# nastavim si veci
			$db0_line{'reqtype'} = $groupmark;
			$db0_line{'user_agent_name'} = $group_name;
			
			$type = $db0_line{'reqtype'};
			$agent = $db0_line{'user_agent_name'};
			
			$table_agent{$type}{$agent}{'users'} += $db0_line{'users'};
			$table_agent{$type}{$agent}{'requests'} += $db0_line{'requests'};
			
			$table_type{$type}{'users'} += $db0_line{'users'};
			$table_type{$type}{'requests'} += $db0_line{'requests'};
			
		}
		
	}
	
	# display tables in this order
	my @order = ('B', $groupmark, 'R', 'm', 'd', 'c', 'W'); # poradie v akom to vykreslujem
	
	foreach my $type ( @order )
	{
		next unless $table_agent{$type};
		my %agents = %{$table_agent{$type}};
		
		# table summary
		my $table=$tpl->{'entity'}{'email.table'};
		$table =~ s|<%title%>|$groups{$type}|g;
		$table =~ s|<%colscount%>|4|g;
		# list of columns
		foreach my $col_name ( 'Name', 'Pageviews', 'Users', '%')
		{
			my $col = $tpl->{'entity'}{'email.table.col.name'};
			$col =~ s|<%name%>|$col_name|g;
			$table=~s|<#email.table.col.name#>|$col|g;
		}
		
		my $sort_field;
		if ( $type =~ /(R|d|c|W)/ ) { $sort_field = 'requests'; }
		else { $sort_field = 'users'; }
		
		foreach (sort {$agents{$b}{$sort_field} <=> $agents{$a}{$sort_field}} keys %agents)
		{
			my $agent = $_;
			my %hash = %{$agents{$agent}};
			
			# calculations
			$hash{'percent_users'} = sprintf("%.2f", $hash{'users'}/($table_type{$type}{'users'}/100));
			$hash{'percent_users_round'} = sprintf("%.0f", $hash{'percent_users'});
			
			$hash{'percent_requests'} = sprintf("%.2f", $hash{'requests'}/($table_type{$type}{'requests'}/100));
			$hash{'percent_requests_round'} = sprintf("%.0f", $hash{'percent_requests'});
			
			my $line = $tpl->{'entity'}{'email.table.line'};
			my $col = $tpl->{'entity'}{'email.table.col.value_sum'};
				$col =~ s/<%value%>/$agent || 'unknown'/e;
				$line =~ s|<#email.table.col.value#>|$col|g;
			my $col = $tpl->{'entity'}{'email.table.col.value'};
				$col =~ s/<%value%>/$hash{'requests'}/;
				$line =~ s|<#email.table.col.value#>|$col|g;
			my $col = $tpl->{'entity'}{'email.table.col.value'};
				$col =~ s/<%value%>/$hash{'users'}/;
				$line =~ s|<#email.table.col.value#>|$col|g;
			my $col = $tpl->{'entity'}{'email.table.col.value'};
				$col =~ s/<%value%>/$hash{'percent_'.$sort_field}%/;
				$line =~ s|<#email.table.col.value#>|$col|g;
			$table =~ s|<#email.table.line#>|$line|g;
			
		}
		
		# add table sum
		$tpl->{'entity'}{'email.xhtml'} =~ s|<#email.content#>|$table<#email.content#>|;
		
	}
	
	# cleaning
	$tpl->{'entity'}{'email.xhtml'} =~ s|<#.*?#>||gs;
	$tpl->{'entity'}{'email.xhtml'} =~ s|<%.*?%>||gs;
	
	$msg->attach
	(
		'Data' => $tpl->{'entity'}{'email.xhtml'},
		'Type' => "text/html;charset=\"UTF-8\"",
		'Encoding' => "8bit",
	);
	
	$msg->attach
	(
		'Path'       => $tpl->{'file'}{'cyclone3-150x44.png'}{'dst'},
		'Type'       => "image/gif",
		'Content-ID' => "<logo\@cyclone3.org>",
		'Encoding'   => "base64"
	);
	
	TOM::Net::email::send
	(
		to => $env{to_email},
		to_name => '',
		body => $msg->as_string()
	);
	
	return 1;
}

1;
