#!/usr/bin/perl
# áéíóú - USE UTF-8 !!!
package CRON::module;


use SVGraph::2D::lines;
use SVGraph::2D::columns;
use Utils::datetime;
use DateTime;
use Int::charsets::encode;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;

sub execute
{
	my %env=@_;
	
	#Database::connect::multi('stats') || die "cannot connect all databases";
	
	if ($cron::P eq $CRON::P){$cron::ERR="WARN: this cron is only for local use!!!";return undef}
	$env{domain}=$tom::H unless exists $env{domain};
	
		my $graf=SVGraph::2D::columns->new(
		title		=>	"Most visited articles in last 31 days",
		#	type		=>	"normal",	# normal/stacked(spojene)/percentage
		#	type		=>	"stacked",	# normal/stacked(spojene)
			type		=>	"stacked",	# normal/stacked(spojene)	
			x		=>	750,
			y		=>	500,
		
		#	show_legend		=>	1, # show legend of Columns
		#	show_points		=>	1,
		#	show_points_middle	=>	1,
		#	show_lines			=>	1,
		#	show_lines_smooth	=>	1,
		#	show_areas		=>	1,
		#	show_areas_opacity	=>	0.2,
		#	show_lines_smooth_range	=>	1,
		#	show_data			=>	1,
		#	show_data_background=>	1,
		
			grid_y_scale_minimum		=>	000.00, # zaciname od nuly
		#	grid_y_scale_maximum		=>	15.00, #
		#	grid_y_main_spacing			=>	0.10,
		
			show_grid_x		=>	1,
			show_legend_label		=>	1,
		);
		
		my %columns;
		
		$columns{'visits'}=$graf->addColumn(title=>"Visits");
		#$columns{visitors_return}=$graf->addColumn(title=>"Returned visitors");
		
=head1
		for my $hour(0..24)
		{
			my $from=$main::time_current-86400+(3600*$hour)-3600;
			my %date=Utils::datetime::ctodatetime($from,format=>1);
			my $label="$date{mday}.$date{mom}. $date{hour}:00";
			$graf->addRowLabel($label);
		}
=cut
		
		my $from=$main::time_current-(86400*31);
		#my %date=Utils::datetime::ctodatetime($from,format=>1);
		#$from="$date{year}-$date{mom}-$date{mday} $date{hour}";
		
		#main::_log("read data to hour chart from $from");
		
		my $mdb=$TOM::DB{main}{name};
		my $db0=$main::DB{main}->Query("
			SELECT
				visits.IDarticle AS ID,
				article.title,
				COUNT(*) AS visits
			FROM
				$mdb.a400_visits AS visits
			LEFT JOIN $mdb.a400 AS article ON
			(
				visits.IDarticle = article.ID
			)
			WHERE
					visits.time_insert>$from
					AND visits.IDarticle = article.ID
			GROUP BY
					visits.IDarticle
			ORDER BY
					visits DESC
			LIMIT
					0,20;
		");
		
=head1
 $graf->addValueMark(0.3,
	front			=>0,
	show_label		=>1,
#	size			=>1.5,
	color			=>"red",
	);
$graf->addValueMark(0.2,
	front			=>0,
	show_label		=>1,
#	size			=>1.5,
	color			=>"yellow",
	);
$graf->addValueMarkArea(0.3,
	front			=> 0,
	color			=> "red",
	);
=cut

		while (my %db0_line=$db0->fetchhash)
		{
			#my @date=($db0_line{reqdatetime}=~/^(\d\d\d\d)-(\d\d)-(\d\d) (\d\d):(\d\d):(\d\d)/);  
			#my $label=$date[2].".".$date[1].". ".$date[3].":".$date[4];
			utf8::decode($db0_line{'title'});
			my $label=Int::charsets::encode::UTF8_ASCII($db0_line{'title'});
			$graf->addRowLabel($label);
			
			main::_log("add label $label");
			
			$columns{'visits'}->addData($label,$db0_line{'visits'});
			#$columns{visitors_new}->addData($label,$db0_line{'IDhashs'}-$db0_line{'IDhashs_return'});
			
		}
		
		eval
		{
			alarm(15);
			$env{file}="a400_visits.svg" unless $env{file};
			open HND,">$cron::P/_data/".$env{file} or die "$!";
			my $out=$graf->prepare();
			$out=~s|[\s]+</text>|</text>|g;
			print HND $out; 
			alarm(0);
		};
		if ($@)
		{
			die "error! $@\n";
		}
 
 return 1}



1;























