#!/usr/bin/perl
# USE UTF-8 !!!
package CRON::module;
use strict;

sub execute
{
 my %env=@_;
 #return 1;
 if ($cron::P eq $CRON::P){$cron::ERR="WARN: this cron is only for local use!!!";return undef}
 if (!$env{db_820}){$cron::ERR="not defined database db_820";return undef;}

 #if (!$env{db_130}){$cron::ERR="WARN: db_130 not defined!!!";return undef}
 #if (
 $env{db_130} = $TOM::DB_name_TOM;#)
 $env{table}="a130_send";#}else{$env{table}="a130_send";}

 my $email=<<"HEADER";
From: <%FROM%>
To: <%TO%>
Subject: [ERR][CONTROL][a820] forums
Date: <%DATE%>
List-Id: TOM3
MIME-Version: 1.0
Content-Type: text/plain;charset="utf-8"
Content-Transfer-Encoding: 7bit

<%BODY%>
HEADER


 my $doc;
 my $bugs;


 #######################################################################################################
 #######################################################################################################
 #######################################################################################################
 #######################################################################################################
 CRON::debug::log(5,"controll a820 related to a820_attrs...");
 $doc.="controll a820 related to a820_attrs...\n";
 #######################################################################################################
 my $count;
 my $count0;
 my $db0=$main::DBH->Query("
	SELECT a.IDattrs,b.IDattrs,a.ID,a.lng
	FROM $env{db_820}.a820 AS a
	LEFT JOIN $env{db_820}.a820_attrs AS b
	ON a.IDattrs=b.IDattrs");
 while (my @db0_line=$db0->fetchrow)
 {
  $count0++;
  if ($count0/1000 == int($count0/1000)){CRON::debug::log(6,"[$count0] checked");CRON::waitload($CRON::LOADAVG);}
  if (!$db0_line[0])
  {
   $count++;
   CRON::debug::log(6,"[$count] a820:ID:$db0_line[2] has no attrs",1);$bugs++;
   $doc.="[$count] a820:ID:$db0_line[2] has no attrs\n";
   CRON::debug::log(8,"repairing");$doc.="repairing\n";
   $main::DBH->Query("INSERT INTO $env{db_820}.a820_attrs(IDattrs) VALUES('0')");
   my $db1=$main::DBH->Query("SELECT IDattrs FROM $env{db_820}.a820_attrs ORDER BY IDattrs DESC LIMIT 1");
   if (my @db1_line=$db1->fetchrow)
   {
    CRON::debug::log(9,"adding IDattrs $db1_line[0] to ID:$db0_line[2] lng:$db0_line[3]");
    $doc.="adding IDattrs $db1_line[0] to ID:$db0_line[2] lng:$db0_line[3]\n";
    $main::DBH->Query("
	UPDATE $env{db_820}.a820
	SET IDattrs='$db1_line[0]'
	WHERE	ID='$db0_line[2]'
		AND lng='$db0_line[3]'
	LIMIT 1");
   }
  }
  elsif (!$db0_line[1])
  {
   $count++;
   CRON::debug::log(6,"[$count] a820:IDattrs:$db0_line[0] has no attrs",1);$bugs++;
   $doc.="[$count] a820:IDattrs:$db0_line[0] has no attrs\n";
   CRON::debug::log(8,"repairing");$doc.="repairing\n";
   $main::DBH->Query("INSERT INTO $env{db_820}.a820_attrs(IDattrs) VALUES($db0_line[0])");
  }
 }
 #######################################################################################################
 CRON::debug::log(5,"controll a820_attrs related to a820...");
 $doc.="controll a820_attrs related to a820...\n";
 #######################################################################################################
 my $count;
 my $count0;
 my $db0=$main::DBH->Query("
	SELECT a.IDattrs,b.IDattrs,b.ID,b.lng
	FROM $env{db_820}.a820_attrs AS a
	LEFT JOIN $env{db_820}.a820 AS b
	ON a.IDattrs=b.IDattrs");
 while (my @db0_line=$db0->fetchrow)
 {
  $count0++;
  if ($count0/1000 == int($count0/1000)){CRON::debug::log(6,"[$count0] checked");CRON::waitload($CRON::LOADAVG);}
  if (!$db0_line[1])
  {
   $count++;
   CRON::debug::log(6,"[$count] a820_attrs:IDattrs:$db0_line[0] has no a820",1);$bugs++;
   $doc.="[$count] a820_attrs:IDattrs:$db0_line[0] has no a820\n";
   CRON::debug::log(8,"repairing");$doc.="repairing\n";
   $main::DBH->Query("DELETE FROM $env{db_820}.a820_attrs WHERE IDattrs=$db0_line[0] LIMIT 1");
  }
 }





 #######################################################################################################
 #######################################################################################################
 #######################################################################################################
 #######################################################################################################
 CRON::debug::log(5,"controll a820_msgs related to a820...");
 $doc.="controll a820_msgs related to a820...\n";
 #######################################################################################################
 my $count;
 my $count0;
 my $db0=$main::DBH->Query("
	SELECT a.IDforum,b.ID,a.ID
	FROM $env{db_820}.a820_msgs AS a
	LEFT JOIN $env{db_820}.a820 AS b
	ON a.IDforum=b.ID");
 while (my @db0_line=$db0->fetchrow)
 {
  $count0++;
  if ($count0/1000 == int($count0/1000)){CRON::debug::log(6,"[$count0] checked");CRON::waitload($CRON::LOADAVG);}
#=head1
  if (!$db0_line[1])
  {
   $count++;
   CRON::debug::log(6,"[$count] a820_msgs:ID:$db0_line[2] has no forum $db0_line[0]",1);$bugs++;
   $doc.="[$count] a820_msgs:ID:$db0_line[2] has no forum $db0_line[0]\n";
#=head1
   CRON::debug::log(8,"repairing");$doc.="repairing\n";
   $main::DBH->Query("DELETE FROM $env{db_820}.a820_msgs WHERE ID='$db0_line[2]'");
#=cut
  }
#=cut
 }

 if ($bugs)
 {
  $email=~s|<%BODY%>|$doc|;
  $email=~s|<%FROM%>|"$CRON::core_uname_n($tom::H)" <CRON\@$tom::H>|;
  use Utils::datetime;
  $email=~s|<%DATE%>|$Utils::datetime::DAYS{en}[$cron::Twday], $cron::Tmday $Utils::datetime::MONTHS{en}[$cron::Tmom-1] $cron::Fyear $cron::Fhour:$cron::Fmin:$cron::Fsec +-200|g;

  $env{to_email}=$TOM::contact_admin;
  my %env0;
  foreach (split(';',$env{to_email})){$env0{$_}++;}
  $env{to_email}="";foreach (sort keys %env0){$env{to_email}.=$_.";";}$env{to_email}=~s|;$||;
  $env{to_email_parse}=$env{to_email};$env{to_email_parse}=~s|;|>,<|g;$env{to_email_parse}="<".$env{to_email_parse}.">";
  $email=~s|<%TO%>|"contact_admin" $env{to_email_parse}|g;
  #print $email;
  #return 1;
  if ($main::DBH->Query("
	 INSERT INTO $env{db_130}.$env{table}
	 (
	  sendtime,
	  priority,
	  from_name,
	  from_email,
	  from_host,
	  from_service,
	  to_name,
	  to_email,
	  body)
	 VALUES	(
	  '$cron::time_current',
	  '99',
	  'CRON',
	  'CRON\@$tom::H',
	  '$tom::H',
	  'a130',
	  'director',
	  '$env{to_email}',
	  '$email'
	 )"))
  {
   print "ok\n";
  }
  else
  {
   print "err\n";
  }
 }

#=cut










 return 1}



1;























