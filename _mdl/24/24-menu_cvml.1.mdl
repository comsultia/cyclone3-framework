#!/bin/perl
#áéíóú USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
$authors="fordinal\@webcom.sk";
use App::24;
use CVML;
use strict;

sub execute
{
 my %env=@_;
 Tomahawk::GetXSGN(-convertvars=>1) || return undef; # NATIAHNEM XML DESIGN

 #
 #	TODO: [Aben] CVML vstup spravit z databazy a nie z filesu
 #
 
 #
 #	TODO: [Aben] Prechadzanie by bolo lepsie cez cisla arrayu (kedze ide o anonymne pole) nez cez path /cesta/cesta/...
 #
 #
 #
 #
 #
 
 open (HNDI,"<".$tom::P."/_data/24-menu.cvml");undef $/;my $menu=<HNDI>;close (HNDI);
 # object!!!!!!!
 my $cvml=CVML->new(data=>$menu);
  
 my @menu=App::24::parse_menu(%{$cvml->{hash}});
 
 #$env{opened}="/Ringier Slovensko/Zamestnanie";
 
 $env{opened_depth}=1 unless $env{opened_depth};
 $env{opened}="!" unless $env{opened};
 
# $env{opened_parent}=$env{opened};$env{opened_parent}=~s|^(.*)/.*|$1|;
# $env{opened_parent_level}=($env{opened_parent}=~/(\/)/)+1;
# main::_log("levels $env{opened_parent_level}");

 $env{opened_parent}=$env{opened}."/";
 my @parents;
 while ($env{opened_parent}=~s|(.*)/.*|$1|)
 {
 	last unless $1;
 	my $parent=$1;
	push @parents,$parent;
# 	main::_log("parent: $parent");
 }
 push @parents,'/';
 
# return 1;
 
 
=head1
 /A
 /A/A
 /A/A/A
 /A/A/A/A <-
 /A/A/A/B
 /A/A/B
 /A/A/B/A
 /A/B
 /B
 
 @parents
 /A/A/A/A
 /A/A/A
 /A/A
 /A
 
 /A
 /A/A
 /A/A/A
 /A/A/A/A
 /A/A/A/B
 /A/A/B
 /A/B
 /B
=cut
 
 
 
 
 
 
 
 
 
 # CISTENIE MENU
 #
 # TODO: [Aben] Zjednodusit cistenie menu, je to prilis zdlhave
 #
 my @path;
 my $path_;
 my @menu2;
 for my $i(0..@menu-1)
 {
	my $arr0=$menu[$i];
	$path[$$arr0{level}]=$$arr0{name};$path_='';for (1..$$arr0{level}){$path_.="/".$path[$_]};
	
#	main::_log("level $$arr0{level} $env{opened_depth}");
	
	if ($$arr0{level}<=$env{opened_depth})
	{
		push @menu2,$arr0;
		next;
	}
	
	if ($path_=~/^$env{opened}\/[^\/]*?$/)
	{
		push @menu2,$arr0;
		next;
	}
	
	foreach my $parent(@parents)
	{
		if (($path_=~/^$parent[^\/]*?$/)
			||($path_=~/^$parent\/[^\/]*?$/)
			)
		{
 			push @menu2,$arr0;
			last;
		}
	}

 }
 @menu=@menu2;
 undef @menu2;
 
# return 1;
 
 # VYKRESLENIE
 
 $XSGN{TMP}=~s|<#MENU#>|$XSGN{GATEWAY}|;
 
 my @path;
 my $path_;
 for my $i(0..@menu-1)
 {
	my $arr0=$menu[$i];
	my $arr_n=$menu[$i+1];
	my $arr_p=$menu[$i-1] || undef;
	
#	main::_log("mam line:$i level:$$arr0{level} name:$$arr0{name}");
	$path[$$arr0{level}]=$$arr0{name};$path_='';for (1..$$arr0{level}){$path_.="/".$path[$_]};
#	main::_log("PATH:$path_ s $env{opened_parent}");
	
	if ($path_ eq $env{opened})
	{
		$XSGN{NULL}=$XSGN{LEVEL_H};
		$XSGN{NULL}=$XSGN{'LEVEL-'.$$arr0{level}.'_H'} if $XSGN{'LEVEL-'.$$arr0{level}.'_H'};
	}
	else
	{
		$XSGN{NULL}=$XSGN{LEVEL};
		$XSGN{NULL}=$XSGN{'LEVEL-'.$$arr0{level}} if $XSGN{'LEVEL-'.$$arr0{level}};
	}
	
	
	foreach (keys %{$arr0}){$XSGN{NULL}=~s|<%$_%>|$$arr0{$_}|g;}
	$XSGN{NULL}=~s|<%path%>|$path_|g;
	
	$XSGN{TMP}=~s|<#MENU#>|$XSGN{NULL}|;
	
	if ($$arr_n{level}>$$arr0{level})
	{
#		main::_log("vkladam gateway");
		$XSGN{TMP}=~s|<#MENU#>|$XSGN{GATEWAY}|;
	}
	elsif ($$arr_n{level}<$$arr0{level})
	{
		for ($$arr_n{level}..$$arr0{level})
		{
#			main::_log("rusim 2 gateway");
			$XSGN{TMP}=~s|<#MENU#>||;
		}
	}
	elsif ($$arr_n{level}==$$arr0{level})
	{
#		main::_log("zatvaram 1 gateway");
		$XSGN{TMP}=~s|<#MENU#>||;
	}
	
 }
 

 
 return 1}

1;
