#!/usr/bin/perl
# áéíóú - USE UTF-8 !!!
package CRON::module;


use SVGraph::2D::lines;
use Utils::datetime;

use strict;

sub execute
{
	my %env=@_;
	
	TOM::Database::connect::multi('stats') || die "cannot connect all databases";
	
	$main::DB{stats}->selectdb("TOM");
 
	my $graf=SVGraph::2D::lines->new(
		title		=>	"Availability by minute",
		reload	=>	60,
		x		=>	1000,
		y		=>	400,
	
		show_legend		=>	1, # show legend of Columns
	#	show_points		=>	1,
	#	show_points_middle	=>	1,
	#	show_lines			=>	1,
		show_lines_smooth	=>	1,
	#	show_areas		=>	1,
	#	show_areas_opacity	=>	0.2,
	#	show_lines_smooth_range	=>	1,
	#	show_data			=>	1,
	#	show_data_background=>	1,
	
		grid_y_scale_minimum		=>	000.00, # zaciname od nuly
	#	grid_y_scale_maximum		=>	0.3, #
	#	grid_y_main_spacing			=>	0.10,
	
		show_grid_x		=>	1,
	);
	my %columns;
	
	$columns{load_req}=$graf->addColumn(title=>"wait time",color=>"blue");
	# $columns{load_req_max}=$graf->addColumn(title=>"MAX wait time",color=>"azure");
	$columns{load_proc}=$graf->addColumn(title=>"CPU time",color=>"red");
	# $columns{load_proc_max}=$graf->addColumn(title=>"MAX processor time",color=>"yellow");
	
	my $hours=2;
=head1
	for my $hour(0..60*$hours)
	{
		my $from=$main::time_current-(3600*$hours)+(60*$hour)-60;
		my %date=Utils::datetime::ctodatetime($from,format=>1);
		my $label="$date{mday}.$date{mom}. $date{hour}:$date{min}";
		$graf->addRowLabel($label);
	}
=cut

	my $from=$main::time_current-(3600*$hours)-60;
	my %date=Utils::datetime::ctodatetime($from,format=>1);
	$from="$date{year}-$date{mom}-$date{mday} $date{hour}:$date{min}";
	#print "=$from\n";
	
	CRON::debug::log(5,"read data to hour chart from $from");
	
	#return 1;
	
	my $db0=$main::DB{stats}->Query("
		SELECT
			reqdatetime,
			AVG(load_req*visits)/AVG(visits) AS load_req,
			AVG(load_proc*visits)/AVG(visits) AS load_proc
		FROM TOM.a110_weblog_min
		WHERE
			reqdatetime>'$from'
			AND domain_sub=''
		GROUP BY SUBSTRING(reqdatetime,1,16)
		ORDER BY reqdatetime ASC
	");

	$graf->addValueMark(0.2,
		front			=>1,
		show_label		=>1,
		show_label_text	=>"HIGH",
	#	size			=>1.5,
		color			=>"red",
		);
	$graf->addValueMark(0.1,
		front			=>1,
		show_label		=>1,
		show_label_text	=>"IDEAL",
	#	size			=>1.5,
		color			=>"green",
		);
	$graf->addValueMarkArea(0.2,
		front			=> 0,
		color			=> "red",
		);
		
	$graf->addValueMarkArea(0,
		end			=> 0.1,
		front			=> 0,
		color			=> "green",
		);
	
	while (my %db0_line=$db0->fetchhash)
	{
		$db0_line{reqdatetime}=~s|:00$||;
		$graf->addRowLabel($db0_line{reqdatetime});
		
		#my @date=($db0_line{reqdatetime}=~/^(\d\d\d\d)-(\d\d)-(\d\d) (\d\d):(\d\d):(\d\d)/);  
		#my $label=$date[2].".".$date[1].". ".$date[3].":".$date[4];
		
		#CRON::debug::log(6,"add label $label");
		
		$db0_line{load_req}=(int($db0_line{load_req}*10000))/10000;
		$db0_line{load_proc}=(int($db0_line{load_proc}*10000))/10000;
		
		$columns{load_req}->addData($db0_line{reqdatetime},($db0_line{load_req}-$db0_line{load_proc}));
		$columns{load_proc}->addData($db0_line{reqdatetime},$db0_line{load_proc});
		
		
		#=head1
		if ($db0_line{reqdatetime}=~/00$/)
		{
			$graf->addRowMark($db0_line{reqdatetime},
				show_label		=>1,
			);
		}
	}
	
	$graf->addValueMark($columns{load_proc}->GetAVG,
		front			=>0,
		right			=>1,
		show_label		=>1,
		show_label_text	=>(int($columns{load_proc}->GetAVG*10000)/10000)." avg",
	#	size			=>1.5,
		color			=>"red",
	);
	
	$graf->addValueMark($columns{load_req}->GetAVG,
		front			=>0,
		right			=>1,
		show_label		=>1,
		show_label_text	=>(int($columns{load_req}->GetAVG*10000)/10000)." avg",
	#	size			=>1.5,
		color			=>"blue",
	);
	
	eval
	{
		alarm(5);
		open HND,">$CRON::P/_data/availability_mins.svg";
		my $out=$graf->prepare();
		$out=~s|[\s]+</text>|</text>|g;
		print HND $out; 
		alarm(0);
	};
	
	if ($@)
	{
		die "error! $@\n";
	}
	
 
 
 return 1}

















1;