#!/bin/perl
# USE UTF-8 !!!
package CRON::module;
use strict;
use utf8;

sub execute
{
	alarm(3600);
 my %env=@_;


 if ($cron::P eq $CRON::P){$cron::ERR="WARN: this cron is only for local use!!!";return undef}

 #if ($TOM::DB_name_STAT eq $TOM::DB_name_TOM){$env{t}="C";}

# if (!$env{db_130}){$cron::ERR="WARN: db_130 not defined!!!";return undef}


 TOM::Database::connect::multi('stats') || die "cannot connect all databases";

 my $date=`date -u "+%a,%e %b %Y %H:%M:%S (%Z)"`;chomp($date);

 $env{to_email} = $TOM::contact{'stats'}.";".$TOM::contact{'TOM'};
 #$env{to_email} = "gregor\@webcom.sk;fordinal\@webcom.sk";
 #$env{to_email} = "gregor\@webcom.sk";



 my $boundary = "------------060509090608000908080106";

 $env{lng} = 'sk' unless $env{lng};

 my %TEXTS = (
 	'sk' => {
 		#header_subject => "[STAT][a110/weblog] last day type bilance",
 		header_subject => "CYCLONE STATS: Type bilance / last day",

 		stats_header => "Štatistiky návštevnosti častí webov na subdoménach $tom::Hm",
 		term => "za deň ",
 		info => "Tento prehľad podáva informáciu o návštevnosti jednotlivých sekcií na weboch.",
 	},

 	'en' => {
 	},
 	
 );
 
 
 
 my $email=<<"HEADER";
From: "$tom::Hm ($TOM::hostname)" <TOM\@$TOM::hostname>
To: <%TO%>
Subject: <%SUBJECT%>
Date: $date
List-Id: TOM3
MIME-Version: 1.0
Content-Type: multipart/related;
 boundary="$boundary"

This is a multi-part message in MIME format.
--$boundary
Content-Type: text/html;charset="utf-8"
Content-Transfer-Encoding: 7bit

<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  </head>
  <body>
  	<style>
			body { font-family: Arial, Verdana; }
  	
			h1 {
				color: #808285;
				font-family: Arial, Verdana;
			}


			.info-domain { font-size: 18px; }
			.term { font-size: 14px; font-weight: normal; }

			.domain-header { color: #555555; text-align: left; font-size: 15px; }


			#former_layout { display: none; }

			#page {
				font-family: Arial, Verdana;
			}

			table { margin-bottom: 10px;  }
			td { font-size: 12px; }
			th { font-size: 14px; }

			.table-title { text-align: left; }

			.value { text-align: right; width: 50px; }
			.type-name { padding-left: 20px; width: 200px; border-left: 5px solid #fff; }

			.even { background: #FFF6F6; }
			.even .type-name { border-left: 5px solid #D1D1D1; }

  	</style>

  	<h1>
  		<img src="cid:part1.webcom.logo\@webcom.sk" alt="webcom logo" border="0" /><br /><br />
  		<span class="info-domain"><%stats-header%></span><br />
  		<span class="term"><%term%></span><br />
  		<span class="term"><%info%></span>
  	</h1>

		<div id="page">
			<#STATS-BODY#>
		</div>
  </body>
</html>
--$boundary
Content-Type: image/gif;
 name="webcom_logo.gif"
Content-ID: <part1.webcom.logo\@webcom.sk>
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename="webcom_logo.gif"

R0lGODlhlgAcAMQAAL/Awd/g4O0bI/f395iam7i5urCxss/Q0YiKjJCSk+/v8NfY2Ofn6Kip
q8fIyfaNke84P/zU1v3i4/RxdvebnvV/hKCho4CChP///wAAAAAAAAAAAAAAAAAAAAAAAAAA
ACH5BAAAAAAALAAAAACWABwAAAX/ICaOZGmeaIpaV6u+cCzPL0MQFuLQfD+yLp9wSBQxEg6A
I0DYFZ8l4AVKrZ4aAIChYGEgrFApeEy1BACWRgGTIBPF7rjPrDUYMF95D67vwwBYAEcOFn40
fIaJJQM3Cwo5DIoxiJKSA4QWBQqVMJScnxgWohabJwOiDSmPowMkCgAELS0EmidSCgYJshcE
AK0qCgWxuxYOvyXBurIJtSdcoiIHDcsGpdENCC0J1SrTLWsnB7ILKAWyqSMO2buyOiZS7LsI
BygD5vGyhST2+LIFxz9k2cA3D8OjfvRQBGgHcMSwC/oWrbsQYISBfrvABcS4K+G+h/0iigDZ
j8C7dhwP/0zERw7FQ48jFu6yNkLcrHS7EgAIsKDAypYi4EHMYmAlxY/sEoxSJhKDzRaBvLWA
GZSdgQM8L8ZrgHWBVm0pnrYp8bXFnRLKLiRUMNEAQEbLSEjhNoJf3BH3ZlUkwcBAU6cQaR6k
WrUFgr042wEV4WBXJBQTFyvAB3DBXQwALrvaBdSTiMzjREyWRaBhDRERHjyIIAJxFIEnIp9I
67oEaIgkbksBIFcW75GyCIuQqtGziLTg8iIwHWOCgOcCJqgwLqV24Qu/Tc0coWz5urEYGDAc
sctAlvPnpUQ0jiGvPikaaTyADv1BCuqyrGP4mv3E17NP8ZZXQv+RwBE+68mSgv9lYOGRnw8Q
0PccBPcpaMuDJtzWnwmjtdDKLQblg8EA25F3IDsJBnGCTEHsoh8MEkJXoYqvtaCfhi/sJh5U
G13AwG3omDhVAEQWaSSRj4Vi4QkMXjDWRC++EKGEFK6wZI1HZejbCyxugyEGTRb1pQiyzcCe
e9fFN8N8EtpnJY292XgCji+kpRkb8YA3glRnycAeciIoxxwMFdBXwXRXxpmlbVu+8JQsToxw
W3AmPCqcCPZkZ9yke3XIy6AoLNCKBBRQIMGIiyn65qK5NarCACsttwg7eZhgZ6Qj9JWNprI0
ZNdNFu1CgHULBFkTL64xodaFcPZ4o6sqTNonCWVtOEKGk4YFksMuvJJWQBbYsJPkiCQppQUl
jxJgB0iE4Senli1Ye4Kn48a0C6iPctTtiYTBdWAJJOFjEparPhuvDFr95ZBZLyxgVFIwCSVw
vXXl1Q+8/ah5XcFzQqvCjpcCdgFN9RCSlAGpitCTxOpGOYICJhNTQMoGOQASLSTjNUo5o1Ds
1CjChQAAOw==
--$boundary--
HEADER

my $doc;

my $STATS_BODY = <<"STATS-BODY";
<table>
	<tr><th colspan="2" class="table-title"><%table-title%></th></tr>
	<#types#>
</table>

STATS-BODY

my $type_line = "<tr<%class%>><td class=\"type-name\"><%type-name%></td><td class=\"value\"><%value%></td></tr>";

	# skorigujem cas - nastavim na 0:0:0
	my %tm_correct = Utils::datetime::ctodatetime($main::time_current,format=>1);
	my $time_correct = $main::time_current-($tm_correct{hour}*3600+$tm_correct{min}*60+$tm_correct{sec});
 
 my $lastday = $time_correct - 86400;
 my %lastday_hash = Utils::datetime::ctodatetime($lastday,format=>1);
 $lastday = "$lastday_hash{year}-$lastday_hash{mom}-$lastday_hash{mday}";
 my $lastday_svk = "$lastday_hash{mday}. $lastday_hash{mom}. $lastday_hash{year}";

 $email =~ s|<%term%>|$TEXTS{$env{lng}}{term}$lastday_svk|;
 $email =~ s|<%info%>|$TEXTS{$env{lng}}{info}|;

 my $db0=$main::DB{stats}->Query("
 	SELECT domain, domain_sub, query_TID, count(*) AS count
	FROM TOM.a110_weblog_rqs
	WHERE	domain='$tom::H_cookie' AND domain_sub!=''
				AND reqdatetime LIKE '$lastday%'
				AND reqtype='B'
	GROUP BY domain, domain_sub, query_TID
	ORDER BY domain_sub DESC, count DESC
	");

 my $i = 0;
 my $last_subdomain = '';
 while (my %db0_line=$db0->fetchhash)
 {
 	$i++;
 	if ($db0_line{domain_sub} ne $last_subdomain)
 	{
 		$i = 1;
 		$email =~ s|<#types#>||;
 		$email =~ s|<#STATS-BODY#>|$STATS_BODY<#STATS-BODY#>|;

 		$email =~ s|<%table-title%>|$db0_line{domain_sub}|;

 		foreach my $text (keys %{$TEXTS{$env{lng}}})
 		{
 			my $null = $text; $null =~ s|_|-|g;
 			$email =~ s|<%$null%>|$TEXTS{$env{lng}}{$text}|;
 		}

 	}

	my $null = $type_line;

	$null =~ s|<%class%>| class="even"| if $i%2;
	$null =~ s|<%class%>|| unless $i%2;

	$null =~ s|<%type-name%>|$db0_line{query_TID}|;
	$null =~ s|<%value%>|$db0_line{count}|;

 	$email =~ s|<#types#>|$null\n<#types#>|;

 	$last_subdomain = $db0_line{domain_sub};
 }

 $email =~ s|<#STATS-BODY#>||; $email =~ s|<#types#>||;


 $email=~s|<%BODY%>|$doc|;
 #$email=~s|<%FROM%>|"$CRON::core_uname_n($tom::H)" <TOM\@webcom.sk>|;
 use Utils::datetime;
 #$email=~s|<%DATE%>|$Utils::datetime::DAYS{en}[$cron::Twday], $cron::Tmday $Utils::datetime::MONTHS{en}[$cron::Tmom-1] $cron::Fyear $cron::Fhour:$cron::Fmin:$cron::Fsec +-200|g;
	$email =~ s|<%SUBJECT%>|$TEXTS{$env{lng}}{header_subject}|;
 
 my %env0;
 foreach (split(';',$env{to_email})){$env0{$_}++;}
 $env{to_email}="";foreach (sort keys %env0){$env{to_email}.=$_.";" if $_}$env{to_email}=~s|;$||;
 $env{to_email_parse}=$env{to_email};$env{to_email_parse}=~s|;|>,<|g;$env{to_email_parse}="<".$env{to_email_parse}.">";
 $email=~s|<%TO%>|$env{to_email_parse}|g;

# print "send to $env{to_email_parse}\n";

#=head1

# print "insert $env{db_130}.$env{table}\n";  masta.n@seznam.cz     info@
 #return 1;
 #print $email;
 #return 1;

	#print $email;

#=head1
	if
	(
		# sendtime='$main::time_current'
		# priority=0
		# from_name='CRON'
		# from_email='TOM\@$TOM::hostname'
		# from_host='$tom::H'
		# from_service='a110' a400 a300
		# to_name = ''
 
		$main::DB{main}->Query("
			INSERT INTO TOM.a130_send
			(
				sendtime,
				priority,
				from_name,
				from_email,
				from_host,
				from_service,
				to_name,
				to_email,
				body)
			VALUES	(
				'$main::time_current',
				'0',
				'CRON',
				'TOM\@$TOM::hostname',
				'$tom::H',
				'a110',
				'',
				'$env{to_email}',
				'$email'
				)"
		)
	)
	{
		main::_log(9," ok, email sended");
	}
	else
	{
		main::_log(9," :((, email not sended");
	}
#=cut




 return 1}

1;
