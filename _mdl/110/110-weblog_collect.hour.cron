#!/bin/perl
# USE UTF-8 !!!
package CRON::module;
use Time::Local;
use strict;


sub execute
{
	alarm(0);
	#return 1;
	my %env=@_;
	
	my $null;
	while((-e "$CRON::P/_logs/weblog/lock.pid")&&($null<300)) # naximalne 5 minut
	{
		$null++;
		my $var=rand(1);
		main::_log("{$null} lock.pid exists, waiting... $var secs.");
		Time::HiRes::sleep($var);
	}
	
	TOM::Database::connect::multi('stats') || die "cannot connect all databases";
	
	if ($cron::P eq $CRON::P)
	{
		main::_log("WARN: global use, using database $TOM::DB_name_STAT, ALL DOMAINS!!!");
		$env{sel}="";
		$env{tbl}="a110_weblog_rqs";
	#  $env{t}="C";
	}
	else
	{
		main::_log("WARN: local(master) use, using database $TOM::DB_name_STAT, domain $tom::H_cookie");
		$env{sel}="domain='$tom::H_cookie'";
		$env{tbl}="a110_weblog_rqs";
	}
	
	my $time_startat;
	#=head1
	my $db0=$main::DB{stats}->Query("
		SELECT reqdatetime
		FROM TOM.a110_weblog_hour
		WHERE domain_sub=''
		ORDER BY reqdatetime DESC
		LIMIT 1");
	if (my @db0_line=$db0->fetchrow)
	{
		$time_startat=$db0_line[0];
		main::_log("last data collected from hour \"$time_startat\"");
	}
	else
	{
		$time_startat="1970-01-01 00";
		main::_log("none last data collected from hour");
	}
	
	if (!$time_startat)
	{
	# hladat prvy zaznam v rqs :)
	return 1;
	}
	else
	{
	# musim pridat o den viac
	my ($year,$month,$day,$hour)=($time_startat=~/^(\d\d\d\d)-(\d\d)-(\d\d) (\d\d)/);
	my %date=Utils::datetime::ctodatetime(
				(Time::Local::timelocal(undef,1,$hour,$day,$month-1,$year-1900,undef,undef,undef)+3600),format=>1);
	$time_startat="$date{year}-$date{mom}-$date{mday} $date{hour}";
	}
	
	main::_log("data mining started in day \"$time_startat\"");
	
	
=head1
	my $time_thisday;
	my $db0=$main::DB{stats}->Query("
		SELECT
			reqdatetime
		FROM
			TOM.a110_weblog_rqs
		WHERE
			active='Y'
		ORDER BY
			reqdatetime DESC
		LIMIT 1");
	if (my @db0_line=$db0->fetchrow)
	{
		$time_thisday=$db0_line[0];
		$time_thisday=~s|\d\d:\d\d$|00:00|; 
	}
	else
	{
		my %date=Utils::datetime::ctodatetime($main::time_current,format=>1);
		$time_thisday="$date{year}-$date{mom}-$date{mday} $date{hour}:00:00";
	}
=cut

	my $time_thisday;
	my $db0=$main::DB{stats}->Query("
		SELECT
			reqdatetime
		FROM
			TOM.a110_weblog_min
		ORDER BY
			reqdatetime DESC
		LIMIT 1");
	if (my @db0_line=$db0->fetchrow)
	{
		$time_thisday=$db0_line[0];
		$time_thisday=~s|\d\d:\d\d$|00:00|; 
	}
	else
	{
		my %date=Utils::datetime::ctodatetime($main::time_current,format=>1);
		$time_thisday="$date{year}-$date{mom}-$date{mday} $date{hour}:00:00";
	}
	
	main::_log("last day for data mining \"$time_thisday\"");
	
	if ($time_thisday=~/^$time_startat/)
	{
		main::_log("cannot create statistics...");
		return 1;
	}
	
	#return 1;
	
	my $sql="
	SELECT
			reqdatetime,
			domain,
			domain_sub,
			COUNT(*),
			COUNT(DISTINCT(IF(IDhash='',NULL,IDhash))),
			COUNT(DISTINCT(IF(IDsession='',NULL,IDsession))),
			COUNT(DISTINCT(IP)),
			AVG(load_proc),
			AVG(load_req)
	FROM
			TOM.a110_weblog_rqs
	WHERE
			reqdatetime>'$time_startat' AND
			reqdatetime<'$time_thisday' AND
			reqtype IN ('B','m','w')
	GROUP BY
			substring(reqdatetime,1,13),domain,domain_sub";
	#print "$sql\n";
	my $db0=$main::DB{stats}->Query($sql);
	while (my @db0_line=$db0->fetchrow)
	{
		my $tid0000;
		my $direct;
		my $all;
		my $IDhashs_return;
		my $visits_failed;
		
		#$db0_line[4]=$db0_line[5] if $db0_line[4]>$db0_line[5];
		
		my $date=$db0_line[0];$date=~s|:\d\d:\d\d$||;
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(*)
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				query_TID IN ('l_default','l_0000','m_default','g_default') AND
				reqtype='B' AND
				reqtype IN ('B','m','w') AND
				domain_sub='$db0_line[2]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$tid0000=$db1_line[0];
		}
		
		# idem vyselectovat pocet VSETKYCH requestov
		my $db1=$main::DB{stats}->Query("
			SELECT COUNT(*)
			FROM TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				domain_sub='$db0_line[2]'");
		if (my @db1_line=$db1->fetchrow)
		{
			$all=$db1_line[0];
		}
		
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(*)
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				page_code_referer='' AND
				reqtype IN ('B','m','w') AND
				domain_sub='$db0_line[2]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$direct=$db1_line[0];
		}
		

		# vracajucich sa uzivatelom musim pocitat tak ze spocitam vsetkych unikatnych
		# uzivatelov a odpocitam od nich novych uzivatelov
		# je tomu tak preto, lebo keby som priamo ratal vracajucich sa uzivatelov, ratal by som
		# i tych ktory sa pocat tohto obdobia "registrovali" a stihli este aj vratit - a to je chyba
		# potrebujem vediet len uzivatelov ktory sa "neregistrovali" pocas tohto obdobia, a teda
		# POCET VRACAJUCICH UZIVATELOV = 
		# POCET UZIVATELOV KTORI pRISLI Z PREDCHADZAJUCEHO MERANEHO OBDOBIA
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(DISTINCT(IDhash))
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				USRM_flag IN ('G','R') AND
				reqtype IN ('B','m','w') AND
				domain_sub='$db0_line[2]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$IDhashs_return=$db0_line[4]-$db1_line[0];
		}
		
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(*)
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				result='failed' AND
				domain_sub='$db0_line[2]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$visits_failed=$db1_line[0];
		}
		
		main::_log("[$date:00:00] domain:$db0_line[1] sub:$db0_line[2] visits:$db0_line[3] users:$db0_line[4] users_return:$IDhashs_return sessions:$db0_line[5] IP:$db0_line[6] load_proc:$db0_line[7] load_req:$db0_line[8] 0000:$tid0000 direct:$direct");
		
		$main::DB{stats}->Query("
		REPLACE INTO TOM.a110_weblog_hour
		(
			reqdatetime,
			domain,
			domain_sub,
			visits,
			visits_all,
			visits_direct,
			visits_firstpage,
			visits_failed,
			IPs,
			IDhashs,
			IDhashs_return,
			IDsessions,
			load_proc,
			load_req)
		VALUES
		(
			'$date:00:00',
			'$db0_line[1]',
			'$db0_line[2]',
			'$db0_line[3]',
			'$all',
			'$direct',
			'$tid0000',
			'$visits_failed',
			'$db0_line[6]',
			'$db0_line[4]',
			'$IDhashs_return',
			'$db0_line[5]',
			'$db0_line[7]',
			'$db0_line[8]'
			)
		") || die "cannot insert!";
	}
	
	# return 1;
	
	my $sql="
	SELECT
			reqdatetime,
			domain,
			COUNT(*),
			COUNT(DISTINCT(IDhash)),
			COUNT(DISTINCT(IDsession)),
			COUNT(DISTINCT(IP)),
			AVG(load_proc),
			AVG(load_req)
	FROM
		TOM.a110_weblog_rqs
	WHERE
		reqdatetime>'$time_startat' AND
		reqdatetime<'$time_thisday' AND
		reqtype IN ('B','m','w')
	GROUP BY
		substring(reqdatetime,1,13),domain";
	
	my $db0=$main::DB{stats}->Query($sql);
	while (my @db0_line=$db0->fetchrow)
	{
		my $tid0000;
		my $direct;
		my $all;
		my $IDhashs_return;
		my $visits_failed;
		
		my $date=$db0_line[0];$date=~s|:\d\d:\d\d$||;
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(*)
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				query_TID IN ('l_default','l_0000','m_default','g_default') AND
				reqtype IN ('B','m','w') AND
				domain='$db0_line[1]'");
		if (my @db1_line=$db1->fetchrow)
		{
			$tid0000=$db1_line[0];
		}
		
		# idem vyselectovat pocet VSETKYCH requestov
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(*)
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				domain='$db0_line[1]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$all=$db1_line[0];
		}
		
		my $db1=$main::DB{stats}->Query("
		SELECT
			COUNT(*)
		FROM
			TOM.a110_weblog_rqs
		WHERE
			reqdatetime LIKE '$date%' AND
			page_code_referer='' AND
			reqtype IN ('B','m','w') AND
			domain='$db0_line[1]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$direct=$db1_line[0];
		}
		
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(DISTINCT(IDhash))
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				USRM_flag IN ('G','R') AND
				reqtype IN ('B','m','w') AND
				domain='$db0_line[1]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$IDhashs_return=$db0_line[3]-$db1_line[0];
		}
		
		my $db1=$main::DB{stats}->Query("
			SELECT
				COUNT(*)
			FROM
				TOM.a110_weblog_rqs
			WHERE
				reqdatetime LIKE '$date%' AND
				result='failed' AND
				domain='$db0_line[1]'
		");
		if (my @db1_line=$db1->fetchrow)
		{
			$visits_failed=$db1_line[0];
		}
		
		main::_log("[$date:00:00] DOMAIN:$db0_line[1] visits:$db0_line[2] users:$db0_line[3] users_return:$IDhashs_return sessions:$db0_line[4] IP:$db0_line[5] load_proc:$db0_line[6] load_req:$db0_line[7] 0000:$tid0000 direct:$direct");
		
		$main::DB{stats}->Query("
			REPLACE INTO $TOM::DB_name_STAT.$env{t}a110_weblog_hour
			(	reqdatetime,
				domain,
				domain_sub,
				visits,
				visits_all,
				visits_direct,
				visits_firstpage,
				visits_failed,
				IPs,
				IDhashs,
				IDhashs_return,
				IDsessions,
				load_proc,
				load_req)
			VALUES
			(	'$date:00:00',
				'$db0_line[1]',
				'',
				'$db0_line[2]',
				'$all',
				'$direct',
				'$tid0000',
				'$visits_failed',
				'$db0_line[5]',
				'$db0_line[3]',
				'$IDhashs_return',
				'$db0_line[4]',
				'$db0_line[6]',
				'$db0_line[7]'
				)
		") || die "cannot insert!";
	}
	
return 1}

1;
