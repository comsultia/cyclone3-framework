#!/bin/perl
# USE UTF-8 !!!
package CRON::module;
use strict;


sub execute
{
 my %env=@_;

 #if ($cron::P eq $CRON::P){$cron::ERR="WARN: this cron is only for local use!!!";return undef}

 #if ($TOM::DB_name_STAT eq $TOM::DB_name_TOM){$env{t}="C";}
 
 #print "$TOM::DB_name_STAT\n";

 #if (!$env{db_130}){$cron::ERR="WARN: db_130 not defined!!!";return undef}
	my $date=`date -u "+%a,%e %b %Y %H:%M:%S (%Z)"`;chomp($date);

	# email
 $env{to_email} = $TOM::contact{'stats'}.";".$TOM::contact{'TOM'};
 #$env{to_email} = "gregor\@webcom.sk;fordinal\@webcom.sk";
 #$env{to_email} = "gregor\@webcom.sk";

	# jazyk
	$env{lng} = "sk" unless $env{lng};

	# casy
	# skorigujem cas - nastavim na 0:0:0
	my $time_current = $main::time_current;
	my %tm_correct = Utils::datetime::ctodatetime($time_current,format=>1);
	my $time_correct = $time_current-($tm_correct{hour}*3600+$tm_correct{min}*60+$tm_correct{sec});
	
	my %times = (
		'start' => ($time_correct - 7*86400),
		'end' => ($time_correct - 86400)
	);
	my %tms = Utils::datetime::ctodatetime($times{start},format=>1);
	my %tme = Utils::datetime::ctodatetime($times{end},format=>1);
	$times{text} = {
		'start' => "$tms{year}-$tms{mom}-$tms{mday}",
		'end' => "$tme{year}-$tme{mom}-$tme{mday}",
	 };
	$times{sk} = {
		'start' => "$tms{mday}. $tms{mom}. $tms{year}",
		'end' => "$tme{mday}. $tme{mom}. $tme{year}",
	};
	$times{en} = {
		'start' => "$tms{year}-$tms{mom}-$tms{mday}",
		'end' => "$tme{year}-$tme{mom}-$tme{mday}",
	};

	# texty
	my %TEXTS = (
		'sk' => {
			# hlavicky emailu
			'headers-subject' => "[STAT][a110/modules] last day bilance",

			# texty pre hlavnu cast emailu
			'email-header' => "Štatistiky najpomalších modulov",
			'email-term' => "v období od <%day-start%> do <%day-end%>",
			'email-info' => "Na základe týchto informácií je vidieť problémové moduly za posledných 7 dní.",
	

		},
	
		'en' => {
		},

	);

 Database::connect::multi('stats') || die "cannot connect all databases";
 
	# hranice priloh
	my $boundary = "-----------9879522313565987";

	# zaklad tela emailu
	my $email=<<"HEADER";
From: "$TOM::hostname" <TOM\@$TOM::hostname>
To: <%TO%>
Subject: <%SUBJECT%>
Date: $date
List-Id: TOM3
MIME-Version: 1.0
Content-Type: multipart/related;
 boundary="$boundary"

This is a multi-part message in MIME format.
--$boundary
Content-Type: text/html;charset="utf-8"
Content-Transfer-Encoding: 7bit

<html>
  <head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  </head>
  <body>
  	<style>
			body { font-family: Arial, Verdana; }
  	
			h1 {
				color: #808285;
				font-family: Arial, Verdana;
			}

			.stats-header { color: #555555; text-align: left; font-size: 15px; }
			.stats-term { font-size: 14px; font-weight: normal; }
			.stats-info { font-size: 14px; font-weight: normal; }

			table { margin-bottom: 25px; }
			table td { color: #555555; font-size: 12px; }
			.value { font-weight: bold; padding-right: 20px; }

			.header, .subheader { color: #555555; text-align: left; font-size: 14px; }

			#profile { margin-top: 20px; }

			.prof-sec { text-align: left; background: yellow; }
			.prof-sec-title { width: 15%; }
			.prof-sec-val { text-align: left; }

  	</style>

  	<h1>
  		<img src="cid:part1.webcom.logo\@webcom.sk" alt="webcom logo" border="0" /><br /><br />
  		<span class="stats-header"><%header%></span><br />
  		<span class="stats-term"><%term%></span><br />
  		<span class="stats-info"><%info%></span>
  	</h1>

		<div id="page">
<%BODY%>
		</div>
  </body>
</html>
--$boundary
Content-Type: image/gif;
 name="webcom_logo.gif"
Content-ID: <part1.webcom.logo\@webcom.sk>
Content-Transfer-Encoding: base64
Content-Disposition: inline;
 filename="webcom_logo.gif"

R0lGODlhlgAcAMQAAL/Awd/g4O0bI/f395iam7i5urCxss/Q0YiKjJCSk+/v8NfY2Ofn6Kip
q8fIyfaNke84P/zU1v3i4/RxdvebnvV/hKCho4CChP///wAAAAAAAAAAAAAAAAAAAAAAAAAA
ACH5BAAAAAAALAAAAACWABwAAAX/ICaOZGmeaIpaV6u+cCzPL0MQFuLQfD+yLp9wSBQxEg6A
I0DYFZ8l4AVKrZ4aAIChYGEgrFApeEy1BACWRgGTIBPF7rjPrDUYMF95D67vwwBYAEcOFn40
fIaJJQM3Cwo5DIoxiJKSA4QWBQqVMJScnxgWohabJwOiDSmPowMkCgAELS0EmidSCgYJshcE
AK0qCgWxuxYOvyXBurIJtSdcoiIHDcsGpdENCC0J1SrTLWsnB7ILKAWyqSMO2buyOiZS7LsI
BygD5vGyhST2+LIFxz9k2cA3D8OjfvRQBGgHcMSwC/oWrbsQYISBfrvABcS4K+G+h/0iigDZ
j8C7dhwP/0zERw7FQ48jFu6yNkLcrHS7EgAIsKDAypYi4EHMYmAlxY/sEoxSJhKDzRaBvLWA
GZSdgQM8L8ZrgHWBVm0pnrYp8bXFnRLKLiRUMNEAQEbLSEjhNoJf3BH3ZlUkwcBAU6cQaR6k
WrUFgr042wEV4WBXJBQTFyvAB3DBXQwALrvaBdSTiMzjREyWRaBhDRERHjyIIAJxFIEnIp9I
67oEaIgkbksBIFcW75GyCIuQqtGziLTg8iIwHWOCgOcCJqgwLqV24Qu/Tc0coWz5urEYGDAc
sctAlvPnpUQ0jiGvPikaaTyADv1BCuqyrGP4mv3E17NP8ZZXQv+RwBE+68mSgv9lYOGRnw8Q
0PccBPcpaMuDJtzWnwmjtdDKLQblg8EA25F3IDsJBnGCTEHsoh8MEkJXoYqvtaCfhi/sJh5U
G13AwG3omDhVAEQWaSSRj4Vi4QkMXjDWRC++EKGEFK6wZI1HZejbCyxugyEGTRb1pQiyzcCe
e9fFN8N8EtpnJY292XgCji+kpRkb8YA3glRnycAeciIoxxwMFdBXwXRXxpmlbVu+8JQsToxw
W3AmPCqcCPZkZ9yke3XIy6AoLNCKBBRQIMGIiyn65qK5NarCACsttwg7eZhgZ6Qj9JWNprI0
ZNdNFu1CgHULBFkTL64xodaFcPZ4o6sqTNonCWVtOEKGk4YFksMuvJJWQBbYsJPkiCQppQUl
jxJgB0iE4Senli1Ye4Kn48a0C6iPctTtiYTBdWAJJOFjEparPhuvDFr95ZBZLyxgVFIwCSVw
vXXl1Q+8/ah5XcFzQqvCjpcCdgFN9RCSlAGpitCTxOpGOYICJhNTQMoGOQASLSTjNUo5o1Ds
1CjChQAAOw==
--$boundary--
HEADER


	while ( (my $key, my $val) = each %{$TEXTS{$env{lng}}} )
	{
		next unless $key =~ /(headers|email)-(.*)/;
		my $typ = $1;
		my $var = $2;

		$email =~ s|<%\U$var%>|$val|g if $typ eq "headers";
		$email =~ s|<%$var%>|$val|g if $typ eq "email";
	}

	while ( (my $key, my $val) = each %{$times{$env{lng}}} )
	{
		$email =~ s|<%day-$key%>|$val|g;
	}


	my $doc;

	$doc .= "<table>\n";
	$doc.="<tr><th colspan=\"2\">20 procesorovo najpomalsich modulov:</th></tr>\n";
	
	my $db0=$main::DB{stats}->Query("
	SELECT
		Ctype,
		Capp,
		Cmodule,
		AVG(load_proc) AS l_proc,
		AVG(load_req) AS l_req,
		COUNT(*) AS count
	FROM `a110_mdl_log`
	GROUP BY Ctype,Capp,Cmodule
	ORDER BY l_proc DESC
	LIMIT 20
	");
	while (my %db0_line=$db0->fetchhash())
	{
		#print "[$db0_line{Ctype}]::$db0_line{Capp}-$db0_line{Cmodule} - $db0_line{l_proc} \n";
		#$doc.="[$db0_line{Ctype}]::$db0_line{Capp}-$db0_line{Cmodule} - $db0_line{l_proc} ($db0_line{count})\n";
		$doc .= "<tr>";
		$doc .= "<td>$db0_line{Ctype}</td>";
		$doc .= "<td>$db0_line{Capp}-$db0_line{Cmodule}</td>";
		$doc .= "<td>$db0_line{l_proc} ($db0_line{count})</td>";
		$doc .= "</tr>\n";
	}
	$doc .= "</table>\n";
	
	$doc.="\n\n";
	
	$doc .= "<table>\n";
	$doc.="<tr><th colspan=\"2\">20 databazovo najpomalsich modulov:</th></tr>\n";
	my $db0=$main::DB{stats}->Query("
	SELECT
		Ctype,
		Capp,
		Cmodule,
		AVG(load_proc) AS l_proc,
		AVG(load_req) AS l_req,
		COUNT(*) AS count
	FROM `a110_mdl_log`
	GROUP BY Ctype,Capp,Cmodule
	ORDER BY l_req DESC
	LIMIT 20
	");
	while (my %db0_line=$db0->fetchhash())
	{
		#print "[$db0_line{Ctype}]::$db0_line{Capp}-$db0_line{Cmodule} - $db0_line{l_proc} \n";
		#$doc.="[$db0_line{Ctype}]::$db0_line{Capp}-$db0_line{Cmodule} - $db0_line{l_req} ($db0_line{count})\n";
		$doc .= "<tr>";
		$doc .= "<td>$db0_line{Ctype}</td>";
		$doc .= "<td>$db0_line{Capp}-$db0_line{Cmodule}</td>";
		$doc .= "<td>$db0_line{l_req} ($db0_line{count})</td>";
		$doc .= "</tr>\n";
	}
	$doc .= "</table>\n";
 #print $doc;
 
 #return 1;

 #print $doc."\n";

 #print $doc; return 1;


 $email=~s|<%BODY%>|$doc|;
 #$email=~s|<%FROM%>|"$CRON::core_uname_n" <TOM\@webcom.sk>|;
 use Utils::datetime;
 #$email=~s|<%DATE%>|$Utils::datetime::DAYS{en}[$cron::Twday], $cron::Tmday $Utils::datetime::MONTHS{en}[$cron::Tmom-1] $cron::Fyear $cron::Fhour:$cron::Fmin:$cron::Fsec +-200|g;


 my %env0;
 foreach (split(';',$env{to_email})){$env0{$_}++;}
 $env{to_email}="";foreach (sort keys %env0){$env{to_email}.=$_.";" if $_}$env{to_email}=~s|;$||;
 $env{to_email_parse}=$env{to_email};$env{to_email_parse}=~s|;|>,<|g;$env{to_email_parse}="<".$env{to_email_parse}.">";
 $email=~s|<%TO%>|$env{to_email_parse}|g;

# print "send to $env{to_email_parse}\n";

#=head1

# print "insert $env{db_130}.$env{table}\n";
 #return 1;
 #print $email;
 #return 1;

#=head1

#return 1;
#print $email;
	# POSIELAM MAIL
	if
	(
		# sendtime='$main::time_current'
		# priority=0
		# from_name='CRON'
		# from_email='TOM\@$TOM::hostname'
		# from_host='$tom::H'
		# from_service='a110' a400 a300
		# to_name = ''
		$main::DB{main}->Query("
			INSERT INTO TOM.a130_send
			(
				sendtime,
				priority,
				from_name,
				from_email,
				from_host,
				from_service,
				to_name,
				to_email,
				body)
			VALUES	(
				'$main::time_current',
				'0',
				'CRON',
				'TOM\@$TOM::hostname',
				'$tom::H',
				'a110',
				'',
				'$env{to_email}',
				'$email'
			)
		")
	)
	{
		# ak sa mi podarilo mail vlozit do db (poslat)
		#print "ok\n";
		main::_log(5,"email sent");
	}
	else
	{
		# nepodqarilo sa to
		#print "err\n";
		main::_log(5,"email not sent");
	}	
#=cut




 return 1}

1;
