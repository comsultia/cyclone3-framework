#!/usr/bin/perl
# USE UTF-8 !!!
package Tomahawk::module;
use open ':utf8', ':std';
use encoding 'utf8';
use utf8;
use strict;
use Digest::MD5  qw(md5 md5_hex md5_base64);
=head1 NAME
login

=head1 HEAD_VERSION_BUILD
1.030722

=head1 DESCRIPTION
login, user menu a user-setup menu

=head1 XMLDESCRIPTION

<DESCRIPTION>

<value id="preview" value="1" />
<value id="output" value="xsgn" />

</DESCRIPTION>


=head1 CHANGES
build 030722 - Deboot
*) FIRST MAKE

=head1 WARNINGS & BUGS

=cut

sub execute
{
	my %env=@_;
	#return undef unless $env{ID};

	# osetrim blbe znaky kvoli zobrazovaniu a aj vkladaniu
	$main::FORM{text}=~s|[<>]||g;
	$main::FORM{text}=~s|\r||g;
	$main::FORM{text}=~s|\n\n||g;

	Tomahawk::GetXSGN(-convertvars=>1) || return undef; # NATIAHNEM XML DESIGN
	Tomahawk::GetXLNG() || return undef; # NATIAHNEM XML LANGUAGE
	Tomahawk::XLNGtoXSGN(); # insert XLNG do XSGN

	$env{db_130}=Tomahawk::Getmdlvar("130","db") unless $env{db_130};
	$env{db_130}=$TOM::DB_name_TOM unless $env{db_130};

	$env{mailtable}="a130_send";
	#$env{mailtable}="a130_send" if ($env{db_130} eq $TOM::DB_name_TOM);

	$XSGN{TMP}=$XSGN{FORM};

	main::_log("required fields - $env{required_fields}");

	$env{required_fields}.=";" unless($env{required_fields}=~/;$/);
	my @checkarr=split(";", $env{required_fields});

	my $form_blank="1";
	foreach (keys %main::FORM)
	{
		if(($_=~/^cf_/) && ($main::FORM{$_}=~/\w/))
		{
			$form_blank="0";
			main::_log("found an unblank field!!");
		}
	}

	if($form_blank)
	{
		main::_log("Form is blank!");
		return 1;
	}
	else
	{
		main::_log("Form is NOT blank!");
		my $form_correct="1";
		foreach(@checkarr)
		{
			main::_log("$_");
			main::_log("checking $_ - '$main::FORM{$_}'");
			if(!$main::FORM{$_}){ $form_correct="0"; }
		}

		if(!$form_correct)
		{
			main::_log("Form is INCORRECT!");
			my $form_filled;;
			foreach (keys %main::FORM)
			{
				if($_=~/^cf_/)
				{
					if($main::FORM{$_}=~/\w/)
					{ $XSGN{TMP}=~s|<%$_%>|$main::FORM{$_}|g; $form_filled="1"; }
				}
				else{next;}
			}
			$XSGN{TMP}=~s|<%INCORRECT_DATA%>|$XSGN{INCORRECT_DATA}|g if ($form_filled);
			return 1;
		}
	}


	#return 1 unless $main::FORM{$env{required_fields}};
	#foreach (keys %main::USRM){$XSGN{TMP}.="$_=$main::USRM{$_}<BR>";}

	#=head1
   # vkladam prispevok
	 $XSGN{NULL}=$XSGN{EMAIL};
	 $XSGN{NULL}=~s|<%DATE%>|$Utils::datetime::DAYS{en}[$tom::Twday], $tom::Tmday $Utils::datetime::MONTHS{en}[$tom::Tmom-1] $tom::Fyear $tom::Fhour:$tom::Fmin:$tom::Fsec +-200|g;

	my $ID_md5;

	foreach (keys %main::FORM)
	{
		if($_=~/^cf_/)
		{
			$main::FORM{$_}=~s|'|\\'|g;
			$XSGN{NULL}=~s|<%$_%>|$main::FORM{$_}|g;
			$ID_md5.=" - ".$main::FORM{$_};
		}
		else{next;}
	}

	$XSGN{NULL}=~s|<%FROM%>|"$TOM::core_uname_n($tom::H)" <TOM3\@$tom::H>|g;
	#$XSGN{NULL}=~s|<%cf_email%>|$main::FORM{email}|g;
	#$XSGN{NULL}=~s|<%EMAIL%>|$main::FORM{text}|g;

	#$env{to_email}=$TOM::contact_admin.";".$TOM::contact_operator.";".$TOM::contact_bugreport.";nemsak\@webcom.sk";
	$env{to_email}="admin\@webcom.sk" unless $env{to_email};

	my %env0;
	foreach (split(';',$env{to_email})){$env0{$_}++;}
	$env{to_email}="";foreach (sort keys %env0){$env{to_email}.=$_.";";}$env{to_email}=~s|;$||;
	$env{to_email_parse}=$env{to_email};$env{to_email_parse}=~s|;|>,<|g;$env{to_email_parse}="<".$env{to_email_parse}.">";
	$XSGN{NULL}=~s|<%TO%>|$env{to_email_parse}|g;

	$ID_md5=md5_hex($ID_md5);

  my $db1=$main::DBH->Query("
		SELECT
			ID
		FROM
			$env{db_130}.$env{mailtable}
		WHERE
			ID_md5='$ID_md5'
		LIMIT 1
	");
	if(my %db1_line=$db1->FetchHash())
	{
		$XSGN{TMP}=$XSGN{REPEATED};
		return 1;
	}

	$main::DBH->Query("
		INSERT INTO $env{db_130}.$env{mailtable}
		(
			sendtime,
			priority,
			from_name,
			from_email,
			from_host,
			from_service,
			to_name,
			to_email,
			body,
			ID_md5
		)
		VALUES
		(
			'$tom::time_current',
			'5',
			'TOM3',
			'TOM3\@$tom::H',
			'$tom::H',
			'a130',
			'bugreport',
			'$env{to_email}',
			'$XSGN{NULL}',
			'$ID_md5'
		)
	");

	$XSGN{TMP}=$XSGN{SENT};

	return 1
}


1;